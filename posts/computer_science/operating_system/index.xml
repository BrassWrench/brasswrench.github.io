<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>操作系统 on 黄铜扳手的图书馆</title>
        <link>https://www.brasswrench.com/posts/computer_science/operating_system/</link>
        <description>Recent content in 操作系统 on 黄铜扳手的图书馆</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>黄铜扳手</copyright>
        <lastBuildDate>Tue, 05 Nov 2024 16:21:40 +0800</lastBuildDate><atom:link href="https://www.brasswrench.com/posts/computer_science/operating_system/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>操作系统（一）：操作系统概论</title>
        <link>https://www.brasswrench.com/posts/computer_science/operating_system/introduction_to_operating_system/</link>
        <pubDate>Thu, 19 Sep 2024 22:28:10 +0800</pubDate>
        
        <guid>https://www.brasswrench.com/posts/computer_science/operating_system/introduction_to_operating_system/</guid>
        <description>&lt;img src="https://www.brasswrench.com/true" alt="Featured image of post 操作系统（一）：操作系统概论" /&gt;







&lt;iframe
  class=&#34;netease-cloud-music-frame&#34;
  title=&#34;song&amp;#39;s 2004494419&#34;
  frameborder=&#34;no&#34;
  border=&#34;0&#34;
  marginwidth=&#34;0&#34;
  marginheight=&#34;0&#34;
  width=&#34;100%&#34;
  height=&#34;86&#34;
  loading=&#34;lazy&#34;
  src=&#34;https://music.163.com/outchain/player?type=2&amp;amp;id=2004494419&amp;amp;auto=0&amp;amp;height=66&#34;&gt;
&lt;/iframe&gt;

&lt;h1 id=&#34;操作系统引论&#34;&gt;操作系统引论
&lt;/h1&gt;&lt;p&gt;  &lt;strong&gt;操作系统（Operating System，OS）&lt;/strong&gt; 是配置在计算机硬件上的第一层软件，是对硬件系统的首次扩充，其主要作用是管理好这些设备，提高它们的利用率和系统的吞吐量，并为用户和应用程序提供一个简单的接口，便于用户使用。OS是现代计算机系统中最基本和最重要的系统软件，而其他的诸如编译程序、数据库管理系统等系统软件，以及大量的应用软件，都直接依赖于操作系统的支持，取得它所提供的服务。事实上OS已经成为现代计算机系统、多处理机系统、计算机网络中都必须配置的系统软件。&lt;/p&gt;
&lt;h2 id=&#34;操作系统的目标和作用&#34;&gt;操作系统的目标和作用
&lt;/h2&gt;&lt;p&gt;  操作系统的目标与应用环境有关。例如在查询系统中所用的OS，希望能提供良好的人机交互性；对于工业控制、武器控制以及多媒体环境下的OS，要求其具有实时性。而对于微机上配置的OS，则更看重的是其使用的方便性。&lt;/p&gt;
&lt;h3 id=&#34;操作系统的目标&#34;&gt;操作系统的目标
&lt;/h3&gt;&lt;p&gt;  在计算机系统上配置操作系统，其主要目标是：方便性、有效性、可扩充性和开放性。&lt;/p&gt;
&lt;h4 id=&#34;方便性&#34;&gt;方便性
&lt;/h4&gt;&lt;p&gt;  一个未配置OS的计算机系统是极难使用的。用户如果想直接在计算机硬件（&lt;strong&gt;裸机&lt;/strong&gt;）上运行自己的程序，就必须用机器语言书写；但是如果配置了OS，系统就可以使用编译命令将用户采用高级语言书写的程序翻译成机器代码，或直接通过OS所提供的各种命令操纵计算机系统，极大地方便了用户，使计算机变得易学易用。&lt;/p&gt;
&lt;h4 id=&#34;有效性&#34;&gt;有效性
&lt;/h4&gt;&lt;p&gt;  有效性所包含的第一层含义是提高系统资源的利用率。在早期未配置OS的计算机系统中，诸如处理机、I/O设备等都经常处于空闲状态，各种资源无法得到充分利用，所以在当时，提高系统资源利用率是推动OS发展最主要的动力。有效性的另一层含义是提高系统的吞吐量。OS可以通过合理地组织计算机的工作流程，加速程序的运行，缩短程序的运行周期，从而提高了系统的吞吐量。&lt;br&gt;
  方便性和有效性是设计OS时最重要的两个目标。在过去很长的一段时间内，由于计算机系统非常昂贵，有效性显得特别重要。然而，近十多年来，随着硬件越来越便宜，在设计配置在微机上的OS时，似乎更加重视如何提高用户使用计算机的方便性。因此，在&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;中都配置了深受用户欢迎的图形用户界面，以及为程序员提供了大量的系统调用，方便了用户对计算机的使用和编程。&lt;/p&gt;
&lt;h4 id=&#34;可扩充性&#34;&gt;可扩充性
&lt;/h4&gt;&lt;p&gt;  为适应计算机硬件、体系结构以及计算机应用发展的要求，OS必须具有很好的可扩充性。可扩充性的好坏与OS的结构有精密的联系，由此推动了OS结构的不断发展。从早期的&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;发展成&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;，进而又发展成&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;，近年来OS已广泛采用了&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;。微内核结构能方便地增添新的功能和模块，以及对原有的功能和模块进行修改，具有良好的可扩充性。&lt;/p&gt;
&lt;h4 id=&#34;开放性&#34;&gt;开放性
&lt;/h4&gt;&lt;p&gt;  随着计算机应用的日益普及，计算机硬件和软件的兼容性问题便提到了议事日程上来。世界各国相应地制定了一系列的软、硬件标准，使得不同厂家按照标准生产的软、硬件都能在本国范围内很好地相互兼容。这无疑给用户带来了极大的方便，也给产品的推广、应用铺平了道路。近年来，随着Internet的迅速发展，使得计算机OS的应用环境由单机环境转向了网络环境，其应用环境就必须更为开放，进而对OS的开放性提出了更高的要求。&lt;br&gt;
  所谓开放性，是指系统能遵循世界标准规范，特别是遵循&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，“计算机网络”还未上线~&#39;)&#34;&gt;开放系统互连OSI国际标准&lt;/a&gt;。事实上，凡遵循国际标准所开发的硬件和软件，都能彼此兼容，方便地实现互连。开放性已称为20世纪90年代以后计算机技术的一个核心问题，也是衡量一个新推出的系统或软件能否被广泛应用的至关重要的因素。&lt;/p&gt;
&lt;h3 id=&#34;操作系统的作用&#34;&gt;操作系统的作用
&lt;/h3&gt;&lt;p&gt;  操作系统在计算机系统中所起的作用，可以从用户、资源管理及资源抽象等多个不同的角度来进行分析和讨论。&lt;/p&gt;
&lt;h4 id=&#34;os作为用户与计算机硬件系统之间的接口&#34;&gt;OS作为用户与计算机硬件系统之间的接口
&lt;/h4&gt;&lt;p&gt;  OS作为用户与计算机硬件系统之间的接口的含义是：OS处于用户与计算机硬件系统之间，用户通过OS来使用计算机系统。或者说，用户在OS帮助下能够方便、快捷、可靠地操纵计算机硬件和运行自己的程序。&lt;a class=&#34;link&#34; href=&#34;#20240929215340CST&#34;&gt;图1&lt;/a&gt;是OS作为接口的示意图。由图可看出，用户可通过三种方式使用计算机，即通过命令方式、系统调用方式和图标&amp;mdash;窗口方式来实现与操作系统的通信，并取得它的服务。&lt;/p&gt;
&lt;span id=&#34;20240929215340CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.69 200.5&#34;&gt;
  &lt;text transform=&#34;translate(413.89 34)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;用户&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(276.1 77)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;应用程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;g id=&#34;arrow&#34;&gt;
    &lt;line x1=&#34;431.89&#34; y1=&#34;57.1&#34; x2=&#34;431.89&#34; y2=&#34;83.3&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;428.99 59 431.89 48.2 434.8 59 428.99 59&#34;/&gt;
    &lt;polygon points=&#34;428.99 81.4 431.89 92.2 434.8 81.4 428.99 81.4&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(403.89 118)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;命令&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(249.29 117)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;系统调用&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(503.89 117)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;图标—窗口&lt;/tspan&gt;&lt;/text&gt;
  &lt;g id=&#34;arrow-2&#34; data-name=&#34;arrow&#34;&gt;
    &lt;line x1=&#34;537.1&#34; y1=&#34;57.1&#34; x2=&#34;537.1&#34; y2=&#34;83.3&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;534.2 59 537.1 48.2 539.99 59 534.2 59&#34;/&gt;
    &lt;polygon points=&#34;534.2 81.4 537.1 92.2 539.99 81.4 534.2 81.4&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(395.89 143.8)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;操作系统&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(386.89 180.2)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;计算机硬件&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;284.69&#34; y=&#34;6.25&#34; width=&#34;294.3&#34; height=&#34;42&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;rect x=&#34;229.8&#34; y=&#34;48.3&#34; width=&#34;164.5&#34; height=&#34;43.4&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;rect x=&#34;159.4&#34; y=&#34;91.7&#34; width=&#34;545&#34; height=&#34;60.8&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;rect x=&#34;115.39&#34; y=&#34;152.5&#34; width=&#34;633&#34; height=&#34;44&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图1&amp;emsp;OS作为接口的示意图&lt;/p&gt;
&lt;h4 id=&#34;os作为计算机系统资源的管理者&#34;&gt;OS作为计算机系统资源的管理者
&lt;/h4&gt;&lt;p&gt;
  在一个计算机系统中，通常都含有多种硬件和软件资源。归纳起来可将这些资源分为四类：&lt;strong&gt;处理机、存储器、I/O设备以及文件（数据和程序）&lt;/strong&gt;。相应地，OS的主要功能也正是对这四类资源进行有效的管理。处理机管理适用于分配和控制处理机；存储器管理主要负责内存的分配与回收；I/O设备管理是负责I/O设备的分配（回收）与操纵；文件管理适用于实现对文件的存取、共享和保护。可见，OS的确是计算机系统资源的管理者。&lt;br&gt;
  当一台计算机系统供多个用户使用时，诸多用户对系统中共享资源的需求（包括数量和时间）有可能发生冲突。为此，操作系统必须对使用资源的请求进行授权，以协调诸用户对共享资源的使用。&lt;/p&gt;
&lt;h4 id=&#34;os实现了对计算机资源的抽象&#34;&gt;OS实现了对计算机资源的抽象
&lt;/h4&gt;&lt;p&gt;  对一台完全无软件的计算机系统（即裸机），由于它向用户提供的仅是硬件接口（物理接口），因此，用户必须对物理接口的实现细节有充分的了解，这就致使该物理机器难于广泛使用。为了方便用户使用I/O设备，人们在裸机上覆盖上一层I/O设备管理软件，如&lt;a class=&#34;link&#34; href=&#34;#20240929215356CST&#34;&gt;图2&lt;/a&gt;所示，由它来实现对I/O设备操作的细节，并向上将I/O设备抽象为一组数据结构以及一组I/O操作命令，如read或write命令，这样用户即可利用这些数据结构及操作命令来进行数据输入或输出，而无需关心I/O是如何具体实现的。此时用户所看到的机器是一台比裸机功能更强、使用更方便的机器。换言之，在裸机上铺设的I/O软件隐藏了I/O设备的具体细节，向上提供了一组抽象的I/O设备。&lt;/p&gt;
&lt;span id=&#34;20240929215356CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_图层_1&#34; data-name=&#34;图层 1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.69 345.5&#34;&gt;
  &lt;g id=&#34;_图层_1-2&#34; data-name=&#34; 图层 1&#34;&gt;
    &lt;circle cx=&#34;269.2374&#34; cy=&#34;91.4107&#34; r=&#34;37&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: 1px;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(251.095 98.1)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;用户&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;line x1=&#34;269.095&#34; y1=&#34;127.9&#34; x2=&#34;269.095&#34; y2=&#34;163.6&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;266.195 161.6 269.095 172.4 271.995 161.6 266.195 161.6&#34;/&gt;
    &lt;/g&gt;
    &lt;rect x=&#34;197.095&#34; y=&#34;172.3&#34; width=&#34;145&#34; height=&#34;38&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;197.095&#34; y=&#34;210.3&#34; width=&#34;145&#34; height=&#34;81&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(232.995 198.1)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;物理接口&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(250.995 259.1)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;硬件&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;circle cx=&#34;512.095&#34; cy=&#34;38.8&#34; r=&#34;37&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(494.095 45.6)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;用户&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;line x1=&#34;512.295&#34; y1=&#34;76.3&#34; x2=&#34;512.295&#34; y2=&#34;113.4&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;509.395 111.4 512.295 122.3 515.195 111.4 509.395 111.4&#34;/&gt;
    &lt;/g&gt;
    &lt;circle cx=&#34;512.095&#34; cy=&#34;220.8&#34; r=&#34;123&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.1 12.1; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;439.595&#34; y=&#34;197.8&#34; width=&#34;145&#34; height=&#34;38&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;439.595&#34; y=&#34;235.8&#34; width=&#34;145&#34; height=&#34;57.3&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(475.295 223.6)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;物理接口&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(494.095 271.6)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;硬件&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;rect x=&#34;440.095&#34; y=&#34;122.8&#34; width=&#34;145&#34; height=&#34;38&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(479.695 148.6)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O软件&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;polyline points=&#34;527.995 161.2 527.995 184.2 541.395 184.2 511.995 197.2 512.295 196.8 482.795 183.8 496.295 183.8 496.295 160.8&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(549.195 66.8)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O操作命令&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(549.195 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(555.595 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;r&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(563.495 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;e&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(573.395 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;a&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(583.395 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;d&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(594.695 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;,&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(598.895 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;wri&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(628.195 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;t&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(634.795 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;e&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(644.395 88.4)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;)&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;g style=&#34;isolation: isolate;&#34;&gt;
        &lt;text transform=&#34;translate(484.495 320.3)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;虚机器&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图2&amp;emsp;I/O软件隐藏了I/O操作实现的细节&lt;/p&gt;
&lt;p&gt;  通常把覆盖了上述软件的机器称为&lt;strong&gt;扩充机器&lt;/strong&gt;或者&lt;strong&gt;虚机器&lt;/strong&gt;。它向用户提供了一个对硬件操作的抽象模型。用户可利用该模型的接口使用计算机，无需了解物理接口的实现细节，从而使用户更容易地使用计算机硬件资源。亦即，I/O设备管理软件实现了对计算机硬件操作的第一个层次的抽象。&lt;br&gt;
  同理，为了方便用户使用文件系统，又可在第一层软件（I/O管理软件）上再覆盖一层用于文件管理的软件，由它来实现对文件操作的细节，并向上层提供一组实现对文件进行存取操作的数据结构和命令。这样，用户可利用该软件提供的数据结构及命令对文件进行存取。此时用户所看到的是一台功能更强、使用更方便的虚机器。亦即，文件管理软件实现了对硬件资源操作的第二个层次的抽象。以此类推，如果文件管理软件上再覆盖一层面向用户的窗口软件，则用户便可在窗口环境下方便地使用计算机，从而形成一台功能更强的虚机器。&lt;br&gt;
  由此可知，OS是铺设在计算机硬件上的多层软件的集合，它们不仅增强了系统的功能，还隐藏了对硬件操作的具体细节，实现了对计算机硬件操作的多个层次的抽象模型。值得说明的是，不仅可在底层对一个硬件资源加以抽象，还可以在高层对该资源底层已抽象的模型再次进行抽象，称为更高层的抽象模型。随着抽象层次的提高，抽象接口所提供的功能就越强，用户使用起来也越方便。&lt;/p&gt;
&lt;h3 id=&#34;推动操作系统发展的主要动力&#34;&gt;推动操作系统发展的主要动力
&lt;/h3&gt;&lt;p&gt;  OS自20世纪50年代产生后，经历了由简单到复杂，由低级到高级的发展。在短短60多年间，OS在各方面都有了长足的进步，能够很好地适应计算机硬件和体系结构的快速发展，以及应用需求的不断变化。下面我们对推动OS发展的主要推动力做具体阐述。&lt;/p&gt;
&lt;h4 id=&#34;不断提高计算机资源利用率&#34;&gt;不断提高计算机资源利用率
&lt;/h4&gt;&lt;p&gt;  在计算机发展的初期，计算机系统特别昂贵，人们必须千方百计地提高计算机系统中各种资源的利用率，这就是OS最初发展的推动力。由此形成了能自动地对一批作业进行处理的&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;。20世纪60年代和70年代有分别出现了能够有效提高I/O设备和CPU利用率的&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，还没写到~&#39;)&#34;&gt;SPOOLing系统&lt;/a&gt;，以及极大地改善了存储器系统利用率的&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，还没写到~&#39;)&#34;&gt;虚拟存储器技术&lt;/a&gt;。此后在网络环境下，通过在服务器上配置&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，还没写到~&#39;)&#34;&gt;网络文件系统&lt;/a&gt;和&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，“数据库系统”还未上线~&#39;)&#34;&gt;数据库系统算法&lt;/a&gt;，将资源提供给全网络用户共享，又进一步提高了资源的利用率。&lt;/p&gt;
&lt;h4 id=&#34;方便用户&#34;&gt;方便用户
&lt;/h4&gt;&lt;p&gt;  当资源利用率不高的问题得到基本解决后，用户在上机、调试程序时的不方便行便成为主要矛盾，这又成为继续推动OS发展的主要因素。20世纪60年代&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;的出现，不仅提高了系统资源的利用率，还能实现人&amp;mdash;机交互，使用户能像早期使用计算机时一样，感觉自己是独占全机资源，对其进行直接操控，极大地方便了程序员对程序进行调试和修改的操作。90年代初，图形用户界面的出现收到用户的广泛欢迎，进一步方便了用户对计算机的使用，这无疑又加速推动了计算机的迅速普及和广泛使用。&lt;/p&gt;
&lt;h4 id=&#34;器件的不断更新换代&#34;&gt;器件的不断更新换代
&lt;/h4&gt;&lt;p&gt;  随着IT技术的飞讯发展，尤其是微机芯片的不断更新换代，使得计算机的性能快速提高，从而也推动了OS的功能和性能迅速增强和提高。例如当微机芯片由8位发展到16位、32位，进而又发展到64位时，相应的微机OS也就由8位OS发展到16位和32位，进而又发展到64位，此时，相应OS的功能和性能也有了显著的增强和提高。&lt;br&gt;
  与此同时，外部设备也在迅速发展。OS所能支持的外部设备也越来越多，如现在的微机OS已能够支持种类繁多的外部设备，除了传统的外设外，还可以支持光盘、移动硬盘、闪存盘、扫描仪、数码相机等。&lt;/p&gt;
&lt;h4 id=&#34;计算机体系结构的不断发展&#34;&gt;计算机体系结构的不断发展
&lt;/h4&gt;&lt;p&gt;  计算机体系结构的发展，也不断推动着OS的发展，并产生新的OS类型。例如当计算机由单处理机系统发展为多处理机系统时，相应地，OS也就由单处理机OS发展为多处理机OS。又如当出现了计算机网络后，配置在计算机网络上的操作系统也就应运而生。它不仅能有效地管理好网络中的共享资源，而且还向用户提供了许多网络服务。&lt;/p&gt;
&lt;h4 id=&#34;不断提出新的应用需求&#34;&gt;不断提出新的应用需求
&lt;/h4&gt;&lt;p&gt;  操作系统能如此迅速发展的另一个重要原因是，人们不断提出新的应用需求，例如，为了提高产品的质量和数量，需要将计算机应用于工业控制中，此时在计算机上就需要配置能进行实时控制的OS，由此产生了&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;。此后，为了能满足用户在计算机上听音乐、看电影和玩游戏等需求，又在OS中添加了&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;。另外，由于在计算机系统中保存了越来越多的宝贵信息，致使能够&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;也成为OS必须具备的功能。尤其是随着&lt;strong&gt;VLSI（超大规模集成电路）&lt;/strong&gt; 的发展，计算机芯片的体积越来越小，价格也越来越便宜，大量智能设备应运而生，这样，&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;的产生和发展也成了一种必然。&lt;/p&gt;
&lt;h2 id=&#34;操作系统的发展过程&#34;&gt;操作系统的发展过程
&lt;/h2&gt;&lt;p&gt;  在20世纪50年代中期，出现了第一个简单的批处理OS；60年代中期开发出多道程序批处理系统；不久又推出分时系统，与此同时，用于工业和武器控制的实时OS也相继问世。20世纪70到90年代，是&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;和计算机体系结构大发展的年代，导致了卫星及、多处理机和计算机网络的诞生和发展，与与此相应地，也相继开发出了微机OS，多处理机OS和网络OS，并得到极为迅猛的发展。&lt;/p&gt;
&lt;h3 id=&#34;未配置操作系统的计算机系统&#34;&gt;未配置操作系统的计算机系统
&lt;/h3&gt;&lt;p&gt;  从1945年诞生的第一台计算机，到50年代中期的计算机，都属于第一代计算机。这时还未出现OS，对计算机的全部操作都是由用户采取人工操作方式进行的。&lt;/p&gt;
&lt;h4 id=&#34;人工操作方式&#34;&gt;人工操作方式
&lt;/h4&gt;&lt;p&gt;  早期的操作方式是由程序员将事先已穿孔的纸带（或卡片），装入纸带输入机（或卡片输入机），再启动它们将纸带（或卡片）上的程序和数据输入计算机，然后启动计算机运行。仅当程序运行完毕并取走计算结果后，才允许下一个用户上机。这种&lt;strong&gt;人工操作方式&lt;/strong&gt;有以下两方面缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户独占全机，即一台计算机的全部资源由上级用户所独占。&lt;/li&gt;
&lt;li&gt;CPU等待人工操作。当用户进行装带（卡），卸带（卡）等人工操作时，CPU及内存等资源是空闲的。&lt;br&gt;
  可见，人工操作方式严重降低了计算机资源的利用率，此即所谓的&lt;strong&gt;人机矛盾&lt;/strong&gt;。虽然CPU的速度在迅速提高，但I/O设备的速度却提高缓慢，这使CPU与I/O设备之间速度不匹配的矛盾更加突出。为此，曾先后出现了通道技术、缓冲技术，然而都未能很好地解决上述矛盾，直到后来引入了脱机输入/输出技术，才获得了相对较为满意的结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;脱机输入输出off-line-io方式&#34;&gt;脱机输入/输出（Off-Line IO）方式
&lt;/h4&gt;&lt;p&gt;  为了解决人机矛盾及CPU和I/O设备之间速度不匹配的矛盾，20世纪50年代末出现了&lt;strong&gt;脱机I/O技术&lt;/strong&gt;。该技术是实现将装有用户程序和数据的纸带装入纸带输入机，在一台外围机的控制下，把纸带（卡片）上的数据（程序）输入到磁带上。当CPU需要这些程序和数据时，再从磁带上高速地调入内存。&lt;br&gt;
  类似地，当CPU需要输出时，可先由CPU把数据直接从内存高速地输送到磁带上，然后在另一台外围机的控制下，再将此大地上的结果通过相应地输出设备输出。&lt;a class=&#34;link&#34; href=&#34;#20240929215418CST&#34;&gt;图3&lt;/a&gt;示出了脱机输入/输出的过程。&lt;/p&gt;
&lt;span id=&#34;20240929215418CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_图层_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.69 238.54&#34;&gt;
  &lt;text transform=&#34;translate(275.7 45.3)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;输入设备&lt;/tspan&gt;&lt;/text&gt;
  &lt;polygon points=&#34;269.03 53.5 355.03 53.5 355.03 22.5 291.03 22.5 269.03 30.92 269.03 53.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(406.43 44.8)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;外围机&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;401.03&#34; y=&#34;22&#34; width=&#34;65&#34; height=&#34;31&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;355.61&#34; y1=&#34;37.5&#34; x2=&#34;401.03&#34; y2=&#34;37.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;466.47&#34; y1=&#34;37.74&#34; x2=&#34;511.89&#34; y2=&#34;37.74&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(529.1 45.39)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;磁盘&lt;/tspan&gt;&lt;/text&gt;
  &lt;path d=&#34;M582.23,11.23c-5.13,3.13-17.55,9.77-34.71,9.84-17.65.08-30.38-6.83-35.42-9.92,5.05-3.1,17.54-9.85,34.84-9.92,17.26-.07,29.81,6.53,35.07,9.71v40.56c-5.13,3.13-17.55,9.77-34.71,9.84-17.5.07-30.16-6.71-35.29-9.84V12&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;polyline points=&#34;512.03 12.03 512.03 10.93 512.03 11.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(302.1 135.3)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;磁盘&lt;/tspan&gt;&lt;/text&gt;
  &lt;path d=&#34;M355.24,100.94c-5.13,3.13-17.55,9.77-34.71,9.84-17.65.08-30.38-6.83-35.42-9.92,5.05-3.1,17.54-9.85,34.84-9.92,17.26-.07,29.81,6.53,35.07,9.71v40.56c-5.13,3.13-17.55,9.77-34.71,9.84-17.5.07-30.16-6.71-35.29-9.84v-39.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(415.48 135.3)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;主机&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;401.03&#34; y=&#34;112.5&#34; width=&#34;65&#34; height=&#34;31&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(529.1 135.3)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;磁盘&lt;/tspan&gt;&lt;/text&gt;
  &lt;path d=&#34;M582.23,100.94c-5.13,3.13-17.55,9.77-34.71,9.84-17.65.08-30.38-6.83-35.42-9.92,5.05-3.1,17.54-9.85,34.84-9.92,17.26-.07,29.81,6.53,35.07,9.71v40.56c-5.13,3.13-17.55,9.77-34.71,9.84-17.5.07-30.16-6.71-35.29-9.84v-39.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;466.45&#34; y1=&#34;128&#34; x2=&#34;511.87&#34; y2=&#34;128&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;355.45&#34; y1=&#34;128&#34; x2=&#34;400.87&#34; y2=&#34;128&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(302.18 221.27)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;磁盘&lt;/tspan&gt;&lt;/text&gt;
  &lt;path d=&#34;M355.32,186.91c-5.13,3.13-17.55,9.77-34.71,9.84-17.65.08-30.38-6.83-35.42-9.92,5.05-3.1,17.54-9.85,34.84-9.92,17.26-.07,29.81,6.53,35.07,9.71v40.56c-5.13,3.13-17.55,9.77-34.71,9.84-17.5.07-30.16-6.71-35.29-9.84v-39.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(406.5 221.27)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;外围机&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;401.1&#34; y=&#34;198.46&#34; width=&#34;65&#34; height=&#34;31&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;466.53&#34; y1=&#34;213.96&#34; x2=&#34;511.95&#34; y2=&#34;213.96&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;355.53&#34; y1=&#34;213.96&#34; x2=&#34;400.95&#34; y2=&#34;213.96&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(518.62 218.42)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;输出设备&lt;/tspan&gt;&lt;/text&gt;
  &lt;path d=&#34;M512.03,229.27v-30.81h82.64v30.77c-9.47,4.02-23.22,7.82-36.64,2.27-2.02-.84-2.85-1.48-4.68-2.23-15.79-6.51-31.69-3.17-41.32,0&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图3&amp;emsp;脱机I/O示意图&lt;/p&gt;
&lt;p&gt;  由于程序和数据的输入和输出都是在外围机的控制下完成的，或者说，它们是在脱离主机的情况下进行的，故称为&lt;strong&gt;脱机输入/输出方式&lt;/strong&gt;。反之，把在主机的直接控制下进行输入/输出的方式称为&lt;strong&gt;联机输入/输出（On-Line I/O）&lt;/strong&gt; 方式。这种脱机I/O方式的主要优点为：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;减少了CPU的空闲时间。装带、卸带，以及将数据从低俗I/O设备送到高速磁带上（或反之）的操作，都是在脱机情况下由外围机万郴个，并不占用主机时间，从而有效地减少了CPU的空闲时间。&lt;/li&gt;
&lt;li&gt;提高了I/O速度。当CPU在运行中需要输入数据时，是直接从高速的磁带上将数据输入到内存的，这便极大地提高了I/O速度，从而进一步减少了CPU的空闲时间。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;单道批处理系统simple-batch-processing-system&#34;&gt;单道批处理系统（Simple Batch Processing System）
&lt;/h3&gt;&lt;p&gt;  20世纪50年代中期出现了第二代晶体管计算机，此时计算机虽已具有推广应用的价值，但计算机系统仍然非常昂贵，为了能充分地提高它的利用率，应尽量保持系统的连接运行，即在处理完一个作业后，紧接着处理下一个作业，以减少机器的空闲等待时间。&lt;/p&gt;
&lt;h4 id=&#34;单道批处理系统的处理过程&#34;&gt;单道批处理系统的处理过程
&lt;/h4&gt;&lt;p&gt;  为了实现对作业的连续处理，需要先把一批作业以脱机方式输入到磁带上，并在系统中配上&lt;strong&gt;监督程序（Monitor）&lt;/strong&gt;，在它的控制下，使这批作业能一个接一个连续处理。其处理过程是：首先由监督程序将磁带上的第一个作业装入内存，并把运行控制权交给该作业；当该作业处理完成时，又把控制权交给监督程序，再由监督程序把磁带上的第二个作业调入内存。计算机系统就这样自动地一个作业紧接着一个作业地进行处理，直至磁带上的所有作业全部完成，这样便形成了早期的批处理系统。虽然系统对作业的处理是成批进行的，但在内存中时终止保持一道作业，故称为&lt;strong&gt;单道批处理系统&lt;/strong&gt;。&lt;a class=&#34;link&#34; href=&#34;#20240929215439CST&#34;&gt;图4&lt;/a&gt;示出了单道批处理系统的处理流程。&lt;/p&gt;
&lt;span id=&#34;20240929215439CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.69 319.54&#34;&gt;
  &lt;path d=&#34;M371.07,2.72c-5.82,2.99-67.97,34.96-72.57,37.32.06.03.1.05.1.05l73.28,37.69s67.66-35.06,72.46-37.55l-.1-.05L371.5,2.5l-.44.22Z&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(344.41 33.63)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;还有下&lt;/tspan&gt;&lt;tspan x=&#34;-13.5&#34; y=&#34;21.6&#34;&gt;一个作业&lt;/tspan&gt;&lt;tspan x=&#34;58.5&#34; y=&#34;21.6&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;？&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(535 26.25)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;把下一个作业&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6&#34;&gt;的源程序转换&lt;/tspan&gt;&lt;tspan x=&#34;9&#34; y=&#34;43.2&#34;&gt;为目标程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;529.5&#34; y=&#34;3.5&#34; width=&#34;119&#34; height=&#34;74&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g id=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;444.33&#34; y1=&#34;40.24&#34; x2=&#34;523.53&#34; y2=&#34;40.24&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;520.72 43.94 522.3 40.24 520.72 36.53 529.5 40.24 520.72 43.94&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(477.91 30.28)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;是&lt;/tspan&gt;&lt;/text&gt;
  &lt;path d=&#34;M589.12,131.43c-5.82,2.99-67.97,34.96-72.57,37.32.06.03.1.05.1.05l73.28,37.69s67.66-35.06,72.46-37.55l-.1-.05-72.72-37.69-.44.22Z&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(562.47 165.34)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;源程序&lt;/tspan&gt;&lt;tspan x=&#34;-4.5&#34; y=&#34;21.6&#34;&gt;有错吗&lt;/tspan&gt;&lt;tspan x=&#34;49.5&#34; y=&#34;21.6&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;？&lt;/tspan&gt;&lt;/text&gt;
  &lt;g id=&#34;arrow-2&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;589.47&#34; y1=&#34;77.5&#34; x2=&#34;589.47&#34; y2=&#34;125.46&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;585.76 122.65 589.47 124.22 593.17 122.65 589.47 131.43 585.76 122.65&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&#34;arrow-3&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;201.31&#34; y1=&#34;40.14&#34; x2=&#34;292.53&#34; y2=&#34;40.14&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;289.72 43.85 291.29 40.14 289.72 36.44 298.5 40.14 289.72 43.85&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&#34;dot&#34;&gt;
    &lt;circle cx=&#34;227.5&#34; cy=&#34;40.5&#34; r=&#34;3&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(209.98 28.64)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;开始&lt;/tspan&gt;&lt;/text&gt;
  &lt;g id=&#34;arrow-4&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;589.32&#34; y1=&#34;206.48&#34; x2=&#34;589.32&#34; y2=&#34;254.44&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;585.62 251.63 589.32 253.2 593.03 251.63 589.32 260.4 585.62 251.63&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(562.06 236.92)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;否&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(572 283.55)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;装配&lt;/tspan&gt;&lt;tspan x=&#34;-18&#34; y=&#34;21.6&#34;&gt;目标程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;530.5&#34; y=&#34;260.5&#34; width=&#34;119&#34; height=&#34;53&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(358 283.55)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;运行&lt;/tspan&gt;&lt;tspan x=&#34;-18&#34; y=&#34;21.6&#34;&gt;目标程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;316.5&#34; y=&#34;260.5&#34; width=&#34;119&#34; height=&#34;53&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g id=&#34;arrow-5&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;530.5&#34; y1=&#34;287&#34; x2=&#34;441.47&#34; y2=&#34;287&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;444.28 283.3 442.71 287 444.28 290.7 435.5 287 444.28 283.3&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&#34;arrow-6&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;227.5&#34; y1=&#34;287&#34; x2=&#34;227.5&#34; y2=&#34;47.79&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;231.21 50.6 227.5 49.03 223.8 50.6 227.5 41.82 231.21 50.6&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&#34;arrow-7&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;316.5&#34; y1=&#34;287&#34; x2=&#34;233.47&#34; y2=&#34;287&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;236.28 283.3 234.71 287 236.28 290.7 227.5 287 236.28 283.3&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g id=&#34;dot-2&#34; data-name=&#34;dot&#34;&gt;
    &lt;circle cx=&#34;227.5&#34; cy=&#34;169&#34; r=&#34;3&#34;/&gt;
  &lt;/g&gt;
  &lt;g id=&#34;arrow-8&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;516.65&#34; y1=&#34;168.8&#34; x2=&#34;233.47&#34; y2=&#34;168.8&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;236.28 165.1 234.71 168.8 236.28 172.5 227.5 168.8 236.28 165.1&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(492.24 159.8)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;是&lt;/tspan&gt;&lt;/text&gt;
  &lt;g id=&#34;arrow-9&#34; data-name=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;371.87&#34; y1=&#34;77.79&#34; x2=&#34;371.87&#34; y2=&#34;103.03&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;368.17 100.22 371.87 101.79 375.57 100.22 371.87 109 368.17 100.22&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(341.71 97.05)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;否&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(353.09 130.05)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;停止&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图4&amp;emsp;单道批处理系统的处理流程&lt;/p&gt;
&lt;h4 id=&#34;单道批处理系统的缺点&#34;&gt;单道批处理系统的缺点
&lt;/h4&gt;&lt;p&gt;  单道批处理系统最主要的缺点是，系统中的资源得不到充分的利用。这是因为在内存中仅有一道程序，每逢该程序在运行中发出I/O请求后，CPU便处于等待状态，必须在其I/O完成后才继续运行。又因I/O设备的低速性，更使CPU的利用率显著降低。&lt;a class=&#34;link&#34; href=&#34;#20240929215455CST&#34;&gt;图5&lt;/a&gt;示出了单道程序的运行情况，从图可以看出：在 $t_2$ ~ $t_3$ 、 $t_6$ ~ $t_7$ 时间间隔内CPU空闲。&lt;/p&gt;
&lt;span id=&#34;20240929215455CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_图层_1&#34; data-name=&#34; 图层 1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.69 277.54&#34;&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(60.42 32.25)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;用户程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(60.42 109.68)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;监督程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(68.99 186.56)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O操作&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;polyline points=&#34;143.27 25.41 188.67 25.41 188.67 102.84 229.67 102.84 229.67 179.72 376.67 179.72 376.67 102.84 412.67 102.84 412.67 25.41 504.39 25.41 504.39 102.57 535.63 102.57 535.63 179.72 682.67 179.72 682.67 102.57 711.67 102.57 711.67 25.41 790.67 25.41&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(146.64 16.29)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O中断请求&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(194.92 95.29)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;启动I/O&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(343.63 94.86)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O完成&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(383.63 122.86)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;结束中断&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(457.63 15.86)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O中断请求&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(505.63 96.26)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;启动I/O&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(641.3401 95.83)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I/O完成&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(688.3401 123.83)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;结束中断&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g id=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;143.27&#34; y1=&#34;247.12&#34; x2=&#34;797.3&#34; y2=&#34;247.12&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;794.49 250.82 796.07 247.12 794.49 243.41 803.27 247.12 794.49 250.82&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-82-TEX-I-1D461&#34; d=&#34;M181.7779,219.3725c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-82-TEX-N-31&#34; d=&#34;M191.2713,221.6856l-.1683.0647c-.1208.0431-.2934.0863-.5177.1294s-.4746.0733-.7507.0906h-.2459v-.5954h.2459c.4055-.0173.7809-.082,1.126-.1941s.5867-.2157.7248-.3106.2588-.1898.3624-.2847c.0173-.0259.069-.0388.1553-.0388.0777,0,.151.0259.22.0777v3.8698l.0129,3.8827c.0604.0604.1122.0992.1553.1165s.1467.0345.3106.0518.4314.0259.8024.0259h.3365v.5954h-.1424c-.1812-.0259-.8671-.0388-2.0579-.0388-1.1734,0-1.8508.0129-2.032.0388h-.1553v-.5954h.8283c.1381,0,.2459-.0043.3236-.0129s.1467-.0216.2071-.0388.0949-.0259.1035-.0259.0345-.0216.0777-.0647.069-.0604.0777-.0518v-6.6913Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-83-TEX-I-1D461&#34; d=&#34;M222.0062,219.3725c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-83-TEX-N-32&#34; d=&#34;M230.1537,223.614c-.233,0-.4185-.0777-.5565-.233-.1381-.1553-.2071-.3451-.2071-.5695,0-.6126.2287-1.1433.686-1.5919.4573-.4487,1.0268-.673,1.7084-.673.7852,0,1.4409.2416,1.9673.7248s.7938,1.1087.8024,1.8767c0,.371-.0863.7248-.2588,1.0613s-.3796.6299-.6212.8801-.5867.5695-1.0354.9577c-.3106.2675-.742.6644-1.2942,1.1907l-.7636.7248.9836.0129c1.3546,0,2.0751-.0216,2.1614-.0647.0604-.0173.1639-.4012.3106-1.1519v-.0388h.5177v.0388c-.0086.0259-.0647.4185-.1683,1.1778-.1035.7593-.1683,1.1562-.1941,1.1907v.0388h-4.8017v-.4012c0-.0604.0259-.1251.0777-.1941s.1812-.22.3883-.453c.2502-.2761.4659-.5177.6471-.7248.0777-.0863.2243-.2459.44-.4789s.3624-.3926.44-.4789.2028-.2287.3753-.4271c.1726-.1985.2934-.3451.3624-.44.069-.0949.1683-.2243.2977-.3883s.22-.302.2718-.4142.1165-.2373.1941-.3753.1337-.2761.1683-.4142.0647-.2675.0906-.3883.0388-.2632.0388-.4271c0-.5436-.1467-1.0138-.44-1.4107s-.7118-.5954-1.2554-.5954c-.2847,0-.535.0733-.7507.22s-.3667.289-.453.4271-.1294.22-.1294.2459c0,.0086.0216.0129.0647.0129.1553,0,.3149.0604.4789.1812s.2459.3192.2459.5954c0,.2157-.069.3969-.2071.5436s-.3322.2243-.5824.233Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-84-TEX-I-1D461&#34; d=&#34;M373.1476,219.2301c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-84-TEX-N-33&#34; d=&#34;M381.528,223.0316c-.233,0-.4142-.0733-.5436-.22s-.1985-.3365-.2071-.5695c0-.4746.2071-.8973.6212-1.2684s.9146-.5565,1.5013-.5565c.302,0,.4918.0043.5695.0129.6385.1035,1.126.3322,1.4625.686s.5091.7377.5177,1.1519c0,.4487-.1467.8844-.44,1.3072s-.6989.7291-1.2166.9189l-.0388.0259c0,.0086.0388.0216.1165.0388s.2028.0561.3753.1165.3365.151.4918.2718c.7075.4573,1.0613,1.0613,1.0613,1.8119,0,.6816-.2675,1.277-.8024,1.7861-.535.5091-1.2123.7636-2.032.7636-.6903,0-1.2856-.1855-1.7861-.5565-.5004-.371-.7507-.8413-.7507-1.4107,0-.2416.0777-.4357.233-.5824s.3494-.2243.5824-.233c.2416,0,.44.0777.5954.233s.233.3494.233.5824c0,.0949-.0129.1812-.0388.2588s-.0561.1467-.0906.2071-.082.1122-.1424.1553-.1122.0777-.1553.1035-.0863.0431-.1294.0518c-.0431.0086-.0777.0216-.1035.0388l-.0518.0129c.44.3883.975.5824,1.6049.5824.4746,0,.8326-.2287,1.0742-.686.1467-.2847.22-.7205.22-1.3072v-.2588c0-.8197-.2761-1.3676-.8283-1.6437-.1294-.0518-.3926-.082-.7895-.0906l-.5436-.0129-.0388-.0259c-.0173-.0259-.0259-.0949-.0259-.2071,0-.1553.0345-.233.1035-.233.2416,0,.4918-.0216.7507-.0647.2934-.0431.5608-.2243.8024-.5436s.3624-.8024.3624-1.4496v-.1035c0-.4918-.151-.8326-.453-1.0225-.1898-.1208-.3926-.1812-.6083-.1812-.2761,0-.5306.0475-.7636.1424s-.3969.1941-.4918.2977-.1424.1553-.1424.1553h.0388c.0259.0086.0604.0173.1035.0259s.0863.0302.1294.0647.0949.0647.1553.0906.1035.0733.1294.1424.0604.1337.1035.1941.0561.1467.0388.2588c0,.1898-.0604.3581-.1812.5048s-.3149.2243-.5824.233Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-85-TEX-I-1D461&#34; d=&#34;M406.4622,219.3725c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-85-TEX-N-34&#34; d=&#34;M419.1784,229.1664c-.1553-.0259-.7118-.0388-1.6696-.0388-1.0009,0-1.579.0129-1.7343.0388h-.1165v-.5954h.7507c.0604,0,.1337-.0086.22-.0259s.1467-.0388.1812-.0647.0647-.0604.0906-.1035c.0086-.0173.0129-.2502.0129-.6989v-.6471h-3.3521v-.5954l1.9543-2.9897c1.3201-2.0018,1.9888-3.007,2.0061-3.0156.0173-.0173.1079-.0259.2718-.0259h.233l.0777.0777v5.9535h1.1907v.5954h-1.1907v1.2813c0,.0604.0259.1122.0777.1553.069.0604.3149.0949.7377.1035h.3753v.5954h-.1165ZM416.9911,226.4355v-4.3228l-2.8344,4.3098,1.4107.0129h1.4237Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-86-TEX-I-1D461&#34; d=&#34;M506.4422,219.2301c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-86-TEX-N-35&#34; d=&#34;M515.3015,226.992c0,.2071-.069.3796-.2071.5177s-.3063.2071-.5048.2071h-.0906c.3969.6816.9232,1.0225,1.579,1.0225.604,0,1.044-.2588,1.3201-.7765.1639-.2847.2459-.8369.2459-1.6566,0-.8887-.1165-1.4884-.3494-1.799-.2243-.2847-.4746-.4271-.7507-.4271h-.0777c-.673,0-1.1821.2934-1.5272.8801-.0345.0604-.0647.0949-.0906.1035s-.0906.0173-.1941.0259c-.1467,0-.2287-.0259-.2459-.0777-.0173-.0345-.0259-.7895-.0259-2.2649v-1.6696c0-.4314.0216-.6471.0647-.6471.0173-.0173.0345-.0259.0518-.0259.0086,0,.0992.0345.2718.1035.1726.069.4098.1381.7118.2071s.6256.1035.9707.1035c.6126,0,1.1993-.1208,1.7602-.3624.069-.0345.1251-.0518.1683-.0518.069,0,.1035.0777.1035.233v.1683c-.7075.8369-1.5919,1.2554-2.6532,1.2554-.2675,0-.5091-.0259-.7248-.0777l-.1294-.0259v2.2261c.1639-.1208.2934-.2157.3883-.2847s.2502-.1381.4659-.2071.4357-.1035.6601-.1035c.6989,0,1.2899.2804,1.7731.8413s.7248,1.2252.7248,1.9931c0,.7938-.2761,1.4711-.8283,2.032-.5522.5608-1.2252.8456-2.019.8542-.6989,0-1.2597-.233-1.6825-.6989-.4228-.4659-.6342-.9923-.6342-1.579,0-.2071.0475-.371.1424-.4918.0949-.1208.1941-.1985.2977-.233s.2028-.0518.2977-.0518c.2157,0,.3926.0733.5306.22s.2071.3192.2071.5177Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-87-TEX-I-1D461&#34; d=&#34;M530.7702,219.2301c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-87-TEX-N-36&#34; d=&#34;M538.0505,224.973c0-1.4064.3494-2.5195,1.0483-3.3392.6989-.8197,1.4754-1.2295,2.3296-1.2295.5954,0,1.0225.1553,1.2813.4659s.3883.6558.3883,1.0354c0,.2157-.0604.3883-.1812.5177s-.289.1941-.5048.1941c-.1985,0-.3624-.0604-.4918-.1812-.1294-.1208-.1941-.289-.1941-.5048,0-.3796.2028-.6083.6083-.686-.1898-.1898-.4573-.2977-.8024-.3236-.6126,0-1.1174.2588-1.5143.7765-.4055.5695-.6083,1.4409-.6083,2.6144l.0129.0518c.0431-.0518.0777-.1079.1035-.1683.3538-.5177.8154-.7765,1.3848-.7765h.0518c.3969,0,.7463.082,1.0483.2459.2071.1208.4142.2934.6212.5177s.3753.4702.5048.7377c.1812.4228.2718.8844.2718,1.3848v.233c0,.1985-.0216.384-.0647.5565-.0949.5091-.371,1.0052-.8283,1.4884-.4573.4832-1.0354.7248-1.7343.7248-.2416,0-.4746-.0345-.6989-.1035-.2243-.069-.4659-.1985-.7248-.3883-.2588-.1898-.4789-.4444-.6601-.7636-.1812-.3192-.3365-.7377-.4659-1.2554s-.1898-1.126-.1812-1.8249ZM540.8331,223.8858c-.2588,0-.4832.0733-.673.22s-.3365.3408-.44.5824-.1769.4875-.22.7377-.069.5177-.0777.8024c0,.7161.0518,1.2295.1553,1.5402s.2675.5608.4918.7507c.2071.1553.4357.233.686.233.44,0,.7765-.1639,1.0095-.4918.1122-.1553.1898-.3494.233-.5824s.0647-.686.0647-1.359c0-.6903-.0216-1.1519-.0647-1.3848s-.1208-.4271-.233-.5824c-.233-.3106-.5436-.4659-.9319-.4659Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-88-TEX-I-1D461&#34; d=&#34;M679.3407,219.2301c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-88-TEX-N-37&#34; d=&#34;M686.7893,223.0963c.0086-.0173.082-.4875.22-1.4107l.2071-1.3848c0-.0173.0863-.0259.2588-.0259h.2588v.0518c0,.0863.0647.1596.1941.22s.3538.0992.673.1165,1.0483.0259,2.1873.0259h1.566v.5048l-.8801,1.2036c-.0777.1035-.2071.2761-.3883.5177s-.2977.4012-.3494.4789-.1424.2157-.2718.4142-.2157.3538-.2588.4659-.1035.2718-.1812.4789-.1337.4055-.1683.5954-.069.4228-.1035.6989-.0604.5695-.0777.8801-.0302.6644-.0388,1.0613v.3624c0,.1208-.0043.2243-.0129.3106v.1165c-.0345.1467-.1165.2718-.2459.3753s-.2761.1553-.44.1553c-.0949,0-.1855-.0129-.2718-.0388s-.1769-.1079-.2718-.2459-.1424-.3106-.1424-.5177c0-1.3633.4185-2.7783,1.2554-4.2451.1726-.2761.535-.7981,1.0872-1.566l.5954-.8154h-1.2036c-1.5013,0-2.2908.0259-2.3685.0777-.0518.0259-.0992.1294-.1424.3106s-.0863.3667-.1294.5565l-.0388.2718v.0388h-.5177v-.0388Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-89-TEX-I-1D461&#34; d=&#34;M714.635,219.2301c-.0854-.0854-.1281-.1464-.1281-.1831,0-.0488.0183-.1464.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3966-.0061.9336-.0183h.9702l.3478-1.4645c.0366-.1342.0793-.3112.1281-.5309s.0915-.3783.1281-.476.0732-.2197.1098-.3661.0854-.2502.1464-.3112.122-.1342.1831-.2197.1464-.1403.2563-.1648.2197-.0366.3295-.0366c.2197.0122.3722.0793.4577.2014.0854.122.1281.238.1281.3478,0,.0854-.0549.3722-.1648.8604s-.2319.9702-.3661,1.4462l-.1831.6773c0,.0244.3051.0366.9153.0366h.9336c.0854.0854.1281.1526.1281.2014,0,.2685-.0793.4821-.238.6407h-1.9588l-.659,2.6544c-.476,1.9527-.7139,3.0022-.7139,3.1487,0,.5126.1648.7689.4943.7689.4271,0,.8421-.2075,1.2448-.6224.4027-.4149.7261-.9275.9702-1.5377.0244-.0732.0549-.1159.0915-.1281s.1281-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1464,0,.0366-.0183.1098-.0549.2197-.061.1953-.1709.4271-.3295.6956s-.3661.5553-.6224.8604c-.2563.3051-.5675.5614-.9336.7689-.3661.2075-.7383.3112-1.1167.3112-.3661,0-.7139-.0915-1.0435-.2746s-.5675-.5004-.7139-.9519c-.0244-.0976-.0366-.2624-.0366-.4943v-.3295l.6407-2.5629c.4271-1.7208.6468-2.5873.659-2.5995,0-.0244-.3112-.0366-.9336-.0366h-.9336Z&#34;/&gt;
    &lt;path id=&#34;MJX-89-TEX-N-38&#34; d=&#34;M722.2777,223.627v-.9966c0-.6644.233-1.1993.6989-1.6049s1.0009-.6126,1.6049-.6212c.6126,0,1.1562.1812,1.6308.5436s.7118.8326.7118,1.4107c0,.2588-.0475.5004-.1424.7248s-.2071.4055-.3365.5436-.2632.2588-.4012.3624-.2502.1812-.3365.233-.1337.0863-.1424.1035l.1812.1165c.1208.0863.2416.1726.3624.2588s.1898.1337.2071.1424c.6471.5091.9707,1.1519.9707,1.9284,0,.6816-.2502,1.2727-.7507,1.7731-.5004.5004-1.1476.755-1.9414.7636-.7765,0-1.415-.22-1.9155-.6601-.5004-.44-.7507-.9836-.7507-1.6308,0-.9319.5565-1.7084,1.6696-2.3296l-.233-.1683c-.1812-.1122-.2977-.1985-.3494-.2588-.4918-.4228-.7377-.9664-.7377-1.6308v.9966ZM725.0732,224.0282l.0777-.0518c.0518-.0345.0906-.0604.1165-.0777s.069-.0475.1294-.0906.1122-.0863.1553-.1294.0906-.0949.1424-.1553.0992-.1165.1424-.1683.0863-.1208.1294-.2071.082-.1596.1165-.22.0561-.1467.0647-.2588.0173-.2071.0259-.2847c0-.371-.1251-.686-.3753-.9448s-.5393-.4228-.8671-.4918c-.0604-.0086-.2028-.0129-.4271-.0129-.3538,0-.686.1122-.9966.3365s-.4702.5048-.4789.8413c0,.1985.0561.3796.1683.5436s.2243.289.3365.3753.3279.2243.6471.4142c.0604.0431.1079.0733.1424.0906l.7507.4918ZM724.6073,228.7522c.5004,0,.9319-.1467,1.2942-.44.3624-.2934.5436-.6471.5436-1.0613,0-.1467-.0216-.2847-.0647-.4142s-.0949-.2373-.1553-.3236-.1553-.1812-.2847-.2847-.2287-.1812-.2977-.233-.1941-.1337-.3753-.2459c-.1812-.1122-.2977-.1855-.3494-.22-.1208-.0777-.2502-.1596-.3883-.2459s-.2502-.1596-.3365-.22l-.1035-.0647c-.0518,0-.1769.0733-.3753.22s-.4055.384-.6212.7118c-.2157.3279-.3279.6816-.3365,1.0613,0,.5091.1855.9275.5565,1.2554.371.3279.8024.4961,1.2942.5048Z&#34;/&gt;
  &lt;/g&gt;
  &lt;path id=&#34;MJX-90-TEX-I-1D461&#34; d=&#34;M799.0082,258.3184c-.0854-.0854-.1282-.1465-.1282-.1831,0-.0488.0183-.1465.0549-.2929s.0671-.2319.0915-.2563c.0244-.061.0793-.0915.1648-.0915s.3967-.0061.9338-.0183h.9704l.3479-1.4647c.0366-.1343.0793-.3113.1282-.531s.0915-.3784.1282-.476.0732-.2197.1099-.3662.0854-.2502.1465-.3113.1221-.1343.1831-.2197.1465-.1404.2563-.1648.2197-.0366.3296-.0366c.2197.0122.3723.0793.4577.2014.0854.1221.1282.238.1282.3479,0,.0854-.0549.3723-.1648.8605s-.2319.9704-.3662,1.4464l-.1831.6774c0,.0244.3052.0366.9155.0366h.9338c.0854.0854.1282.1526.1282.2014,0,.2685-.0793.4821-.238.6408h-1.9591l-.6591,2.6548c-.476,1.953-.7141,3.0027-.7141,3.1492,0,.5127.1648.769.4944.769.4272,0,.8422-.2075,1.245-.6225.4028-.415.7263-.9277.9704-1.538.0244-.0732.0549-.116.0915-.1282s.1282-.0244.2746-.0366h.0732c.1831,0,.2746.0488.2746.1465,0,.0366-.0183.1099-.0549.2197-.061.1953-.1709.4272-.3296.6958s-.3662.5554-.6225.8605c-.2563.3052-.5676.5615-.9338.769-.3662.2075-.7385.3113-1.1169.3113-.3662,0-.7141-.0915-1.0436-.2746s-.5676-.5005-.7141-.9521c-.0244-.0976-.0366-.2624-.0366-.4944v-.3296l.6408-2.5633c.4272-1.7211.6469-2.5877.6591-2.5999,0-.0244-.3113-.0366-.9338-.0366h-.9338Z&#34;/&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图5&amp;emsp;单道程序的运行情况&lt;/p&gt;
&lt;p&gt;  为了能在系统中运行较大的作业，通常在计算机中都配置了较大容量的内存，但实际情况是有80%以上的作业都属于中小型，因此在单道程序环境下，也必定造成内存的浪费。类似地，为了满足各种类型的作业需要，在系统中将会配置多种类型的I/O设备。显然在单道程序环境下也不能充分利用系统资源。&lt;/p&gt;

&lt;h3 id=&#34;多道批处理系统multiprogrammed-batch-processing-system&#34;&gt;多道批处理系统（Multiprogrammed Batch Processing System）
&lt;/h3&gt;&lt;p&gt;  20世纪60年代中期，IBM公司生产了第一台小规模集成电路计算机IBM 360（第三代计算机系统）。由于它较之于晶体管计算机无论在体积、功耗、速度和可靠性上都有了显著的改善，因而获得了极大的成功。IBM公司为该机开发的OS/360操作系统是第一个能运行多道程序的批处理系统。&lt;/p&gt;
&lt;h4 id=&#34;多道程序设计的基本概念&#34;&gt;多道程序设计的基本概念
&lt;/h4&gt;&lt;p&gt;  为了进一步提高资源的利用率和系统吞吐量，在20世纪60年代中期引入了&lt;strong&gt;多道程序设计技术&lt;/strong&gt;，由此形成了&lt;strong&gt;多道批处理系统&lt;/strong&gt;。在该系统中，用户所提交的作业先存放在外存上，并排成一个队列，称为“后备队列”。然后由&lt;strong&gt;作业调度程序&lt;/strong&gt;按一定的算法，从后备队列中选择若干个作业调入内存，使它们共享CPU和系统中的各种资源。由于同时在内存中装有若干道程序，这样便可以在运行程序A时，利用其因I/O操作而暂停执行时的CPU空挡时间，再调度另一道程序B运行，同样可以利用程序B在I/O操作时的空档时间，再调度程序C运行，使多道程序交替地运行，这样便可以保持CPU处于忙碌状态。&lt;a class=&#34;link&#34; href=&#34;#20240929215511CST&#34;&gt;图6&lt;/a&gt;示出了四道程序时的运行情况。&lt;/p&gt;
&lt;span id=&#34;20240929215511CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.69 506.54&#34;&gt;
  &lt;text transform=&#34;translate(34.79 111.79)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(34.79 189.9)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序B&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(34.79 268.01)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(33.58 346.12)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序D&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(12.06 424.23)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度程序&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;138.92&#34; y1=&#34;59.89&#34; x2=&#34;138.92&#34; y2=&#34;65.89&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;138.92&#34; y1=&#34;78.09&#34; x2=&#34;138.92&#34; y2=&#34;487.03&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;138.92&#34; y1=&#34;493.13&#34; x2=&#34;138.92&#34; y2=&#34;499.13&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g id=&#34;arrow&#34;&gt;
    &lt;g&gt;
      &lt;line x1=&#34;41.36&#34; y1=&#34;486.5&#34; x2=&#34;835.89&#34; y2=&#34;486.5&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;833.08 490.2 834.66 486.5 833.08 482.8 841.86 486.5 833.08 490.2&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;176.63&#34; y1=&#34;59.89&#34; x2=&#34;176.63&#34; y2=&#34;65.89&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;176.63&#34; y1=&#34;78.09&#34; x2=&#34;176.63&#34; y2=&#34;487.03&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;176.63&#34; y1=&#34;493.13&#34; x2=&#34;176.63&#34; y2=&#34;499.13&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;line x1=&#34;176.63&#34; y1=&#34;104.75&#34; x2=&#34;479.86&#34; y2=&#34;104.75&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12 6 1 6; stroke-miterlimit: 10;&#34;/&gt;
  &lt;line x1=&#34;740.75&#34; y1=&#34;417.19&#34; x2=&#34;789.36&#34; y2=&#34;417.19&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;261.15&#34; y1=&#34;59.89&#34; x2=&#34;261.15&#34; y2=&#34;65.89&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;261.15&#34; y1=&#34;78.09&#34; x2=&#34;261.15&#34; y2=&#34;487.03&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;261.15&#34; y1=&#34;493.13&#34; x2=&#34;261.15&#34; y2=&#34;499.13&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;298.87&#34; y1=&#34;59.74&#34; x2=&#34;298.87&#34; y2=&#34;65.74&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;298.87&#34; y1=&#34;77.95&#34; x2=&#34;298.87&#34; y2=&#34;486.88&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;298.87&#34; y1=&#34;492.99&#34; x2=&#34;298.87&#34; y2=&#34;498.99&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(178.48 177.97)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序B&lt;/tspan&gt;&lt;/text&gt;
  &lt;polyline points=&#34;298.87 182.86 322.03 182.86 399.87 182.86 841.86 182.86&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12 6 1 6; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;417.19&#34; y1=&#34;261.17&#34; x2=&#34;423.19&#34; y2=&#34;261.17&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;429.01&#34; y1=&#34;261.17&#34; x2=&#34;432.9&#34; y2=&#34;261.17&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: .97 5.82; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;435.81&#34; y1=&#34;261.17&#34; x2=&#34;675.58&#34; y2=&#34;261.17&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 11.65 5.82 .97 5.82; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;678.49&#34; y1=&#34;261.17&#34; x2=&#34;684.49&#34; y2=&#34;261.17&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(92.95 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A&lt;/tspan&gt;&lt;tspan x=&#34;-7.25&#34; y=&#34;21.6&#34;&gt;I/O请求&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(214.73 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序B&lt;/tspan&gt;&lt;tspan x=&#34;-7.69&#34; y=&#34;21.6&#34;&gt;I/O请求&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(84.45 99.25)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(183.58 78.33)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A &lt;/tspan&gt;&lt;tspan x=&#34;-3.92&#34; y=&#34;21.6&#34; style=&#34;letter-spacing: -.02em;&#34;&gt;I&lt;/tspan&gt;&lt;tspan x=&#34;3.04&#34; y=&#34;21.6&#34;&gt;O处理&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(309.18 157.05)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序B &lt;/tspan&gt;&lt;tspan x=&#34;-7.69&#34; y=&#34;21.6&#34;&gt;I/O处理&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(301.23 256.24)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;382.38&#34; y1=&#34;59.74&#34; x2=&#34;382.38&#34; y2=&#34;65.74&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;382.38&#34; y1=&#34;77.95&#34; x2=&#34;382.38&#34; y2=&#34;486.88&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;382.38&#34; y1=&#34;492.99&#34; x2=&#34;382.38&#34; y2=&#34;498.99&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;417.1&#34; y1=&#34;59.74&#34; x2=&#34;417.1&#34; y2=&#34;65.74&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;417.1&#34; y1=&#34;77.95&#34; x2=&#34;417.1&#34; y2=&#34;486.88&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;417.1&#34; y1=&#34;492.99&#34; x2=&#34;417.1&#34; y2=&#34;498.99&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;600.62&#34; y1=&#34;339.08&#34; x2=&#34;606.62&#34; y2=&#34;339.08&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;612.4&#34; y1=&#34;339.08&#34; x2=&#34;616.25&#34; y2=&#34;339.08&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: .96 5.78; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;619.14&#34; y1=&#34;339.08&#34; x2=&#34;832.97&#34; y2=&#34;339.08&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 11.56 5.78 .96 5.78; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;835.86&#34; y1=&#34;339.08&#34; x2=&#34;841.86&#34; y2=&#34;339.08&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(424.9 235.32)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C &lt;/tspan&gt;&lt;tspan x=&#34;-7.5&#34; y=&#34;21.6&#34;&gt;I/O处理&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(421.5 333.21)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序D&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(335.7 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C&lt;/tspan&gt;&lt;tspan x=&#34;-7.5&#34; y=&#34;21.6&#34;&gt;I/O请求&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;544.91&#34; y1=&#34;59.78&#34; x2=&#34;544.91&#34; y2=&#34;65.78&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;544.91&#34; y1=&#34;77.99&#34; x2=&#34;544.91&#34; y2=&#34;486.92&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;544.91&#34; y1=&#34;493.02&#34; x2=&#34;544.91&#34; y2=&#34;499.02&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;600.62&#34; y1=&#34;59.78&#34; x2=&#34;600.62&#34; y2=&#34;65.78&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;600.62&#34; y1=&#34;77.99&#34; x2=&#34;600.62&#34; y2=&#34;486.92&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;600.62&#34; y1=&#34;493.02&#34; x2=&#34;600.62&#34; y2=&#34;499.02&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(519.76 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序D&lt;/tspan&gt;&lt;tspan x=&#34;-6.79&#34; y=&#34;21.6&#34;&gt;I/O请求&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(455.15 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A &lt;/tspan&gt;&lt;tspan x=&#34;-7.25&#34; y=&#34;21.6&#34;&gt;I/O完成&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;479.44&#34; y1=&#34;59.78&#34; x2=&#34;479.44&#34; y2=&#34;65.78&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;479.44&#34; y1=&#34;77.99&#34; x2=&#34;479.44&#34; y2=&#34;486.92&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;479.44&#34; y1=&#34;493.02&#34; x2=&#34;479.44&#34; y2=&#34;499.02&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(589.99 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A&lt;/tspan&gt;&lt;tspan x=&#34;-11.54&#34; y=&#34;21.6&#34;&gt;再被调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(660.44 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C &lt;/tspan&gt;&lt;tspan x=&#34;-7.5&#34; y=&#34;21.6&#34;&gt;I/O完成&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;684.49&#34; y1=&#34;59.6&#34; x2=&#34;684.49&#34; y2=&#34;65.6&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;684.49&#34; y1=&#34;77.8&#34; x2=&#34;684.49&#34; y2=&#34;486.74&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;684.49&#34; y1=&#34;492.84&#34; x2=&#34;684.49&#34; y2=&#34;498.84&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(716.46 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A &lt;/tspan&gt;&lt;tspan x=&#34;6.46&#34; y=&#34;21.6&#34;&gt;完成&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;740.75&#34; y1=&#34;59.27&#34; x2=&#34;740.75&#34; y2=&#34;65.27&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;740.75&#34; y1=&#34;77.48&#34; x2=&#34;740.75&#34; y2=&#34;486.41&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;740.75&#34; y1=&#34;492.52&#34; x2=&#34;740.75&#34; y2=&#34;498.52&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(776.85 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C &lt;/tspan&gt;&lt;tspan x=&#34;-11.78&#34; y=&#34;21.6&#34;&gt;再被调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;802.86&#34; y1=&#34;59.13&#34; x2=&#34;802.86&#34; y2=&#34;65.13&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;802.86&#34; y1=&#34;77.34&#34; x2=&#34;802.86&#34; y2=&#34;486.27&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.21 12.21; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;802.86&#34; y1=&#34;492.37&#34; x2=&#34;802.86&#34; y2=&#34;498.37&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;polyline points=&#34;841.36 260.97 802.86 260.97 802.86 417.19 740.75 417.19 740.75 104.75 604.86 104.75 600.62 104.75 600.62 417.19 544.91 417.19 544.91 339.08 417.1 339.08 417.1 417.19 382.38 417.19 382.38 261.17 298.87 261.17 298.87 261.23 298.87 417.19 261.15 417.19 261.15 261.23 261.15 182.86 176.63 182.86 176.63 417.19 138.92 417.19 138.92 418.17 138.92 105.57 138.92 104.75 87.49 104.75&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: 2px;&#34;/&gt;
  &lt;text transform=&#34;translate(607.75 312.29)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序D &lt;/tspan&gt;&lt;tspan x=&#34;-6.79&#34; y=&#34;21.6&#34;&gt;I/O处理&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(154.38 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序B&lt;/tspan&gt;&lt;tspan x=&#34;-2.97&#34; y=&#34;21.6&#34;&gt;被调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(804.36 256.24)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(274.55 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序C&lt;/tspan&gt;&lt;tspan x=&#34;-2.78&#34; y=&#34;21.6&#34;&gt;被调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(393.84 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序D&lt;/tspan&gt;&lt;tspan x=&#34;-2.07&#34; y=&#34;21.6&#34;&gt;被调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;line x1=&#34;20.69&#34; y1=&#34;55.5&#34; x2=&#34;70.1&#34; y2=&#34;55.5&#34; style=&#34;fill: #fff; stroke: #000; stroke-miterlimit: 10; stroke-width: 2px;&#34;/&gt;
  &lt;text transform=&#34;translate(26.84 28.82)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;C&lt;/tspan&gt;&lt;tspan x=&#34;12.44&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.02em;&#34;&gt;P&lt;/tspan&gt;&lt;tspan x=&#34;23.63&#34; y=&#34;0&#34;&gt;U&lt;/tspan&gt;&lt;tspan x=&#34;-8.01&#34; y=&#34;21.6&#34;&gt;执行线&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(603.42 99.25)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;程序A&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(139.56 414.62)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(261.26 414.62)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(381.69 414.62)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(545.83 414.62)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(740.69 414.62)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图6&amp;emsp;多道程序的运行情况&lt;/p&gt;
&lt;h4 id=&#34;多道批处理系统的优缺点&#34;&gt;多道批处理系统的优缺点
&lt;/h4&gt;&lt;p&gt;  多道批处理系统的优点如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;资源利用率高。引入多道批处理能使多道程序交替运行，以保持CPU处于忙碌状态；在内存中装入多道程序可提高内存的利用率；此外还可以提高I/O设备的利用率。&lt;/li&gt;
&lt;li&gt;系统吞吐量大。能提高系统吞吐量的主要原因可归结为：
&lt;ol&gt;
&lt;li&gt;CPU和其他资源保持“忙碌状态”；&lt;/li&gt;
&lt;li&gt;仅当作业完成时或运行不下去时才进行切换，系统开销小。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  多道批处理系统的缺点如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;平均周转时间长。由于作业要排队依次进行处理，因而作业的周转时间较长，通常需几个小时，甚至几天。&lt;/li&gt;
&lt;li&gt;无交互能力。用户一旦把作业提交给系统后，直至作业完成，用户都不能与自己的作业进行交互，修改和调试程序极不方便。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;多道批处理系统需要解决的问题&#34;&gt;多道批处理系统需要解决的问题
&lt;/h4&gt;&lt;p&gt;  多道批处理系统是一种十分有效，但又非常复杂的系统，为使系统中的多道程序间能协调地运行，系统必须解决下述一系列问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;处理机争用问题。既要能满足各道程序运行的需要，又要能提高处理机的利用率。&lt;/li&gt;
&lt;li&gt;内存分配和保护问题。系统应能为每道程序分配必要的内存空间，使它们各得其所，且不会因某道程序出现异常情况而破坏其他程序。&lt;/li&gt;
&lt;li&gt;I/O设备分配问题。系统应采取适当的策略来分配系统中的I/O设备，以达到既能方便用户对设备的使用，又能提高设备利用率的目的。&lt;/li&gt;
&lt;li&gt;文件的组织和管理问题。系统应能有效地组织存放在系统中的大量的程序和数据，使它们既便于用户使用，又能保证数据的安全性。&lt;/li&gt;
&lt;li&gt;作业管理问题。系统中存在着各种作业（应用程序），系统应能对系统中所有的作业进行合理的组织，以满足这些作业用户的不同需求。&lt;/li&gt;
&lt;li&gt;用户与系统的接口问题。为使用户能方便的使用操作系统，OS还应提供用户与OS之间的接口。&lt;br&gt;
  为此，应在计算机系统中增加一组软件，用以对上述问题进行妥善、有效的处理。这组软件应包括：能有效地组织和管理&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;的软件、合理地对各类作业进行调度和控制它们运行的软件，以及方便用户使用计算机的软件。正是这样一组软件构成了操作系统。据此，我们可以把操作系统定义为：操作系统是一组能有效地组织和管理计算机硬件和软件资源，合理地对各类作业进行调度，以及方便用户使用的程序的集合。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;分时系统time-sharing-system&#34;&gt;分时系统（Time Sharing System）
&lt;/h3&gt;&lt;h4 id=&#34;分时系统的引入&#34;&gt;分时系统的引入
&lt;/h4&gt;&lt;p&gt;  如果说推动多道批处理系统形成和发展的主要动力是提高资源利用率和系统吞吐量，那么，推动分时系统的形成和发展的主要动力，则是为了满足用户对人&amp;mdash;机交互的需求，由此形成了一种新型OS，用户的需求具体表现在以下几个方面：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;人&amp;mdash;机交互。每当程序员写好一个新程序时，都需要上机进行调试。由于新编程序难免存在一些错误或不当之处，需要进行修改，因此用户希望能像早期使用计算机时一样，独占权及并对它进行直接控制，宜宾能方便地对程序中的错误进行修改。亦即，用户希望能进行人&amp;mdash;机交互。&lt;/li&gt;
&lt;li&gt;共享主机。在20世纪60年代，计算机还十分昂贵，一台计算机要同时供很多用户共享使用。显然，用户们在共享一台计算机时，每个人都希望能像独占时一样，不仅可以随时与计算机进行交互，而且还不会感觉到其他用户的存在。&lt;br&gt;
  由上述不难得知，&lt;strong&gt;分时系统&lt;/strong&gt;是指，在一台主机上连接了多个配有显示器和键盘的终端并由此所组成的系统，该系统允许多个用户同时通过自己的终端，以交互方式使用计算机，共享主机中的资源。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;分时系统实现中的关键问题&#34;&gt;分时系统实现中的关键问题
&lt;/h4&gt;&lt;p&gt;  在多道批处理系统中，用户无法与自己的作业进行交互的主要原因是：作业都先驻留在外存上，即使以后被调入内存，也要经过较长时间的等待后方能运行。用户无法与自己的作业进行交互。为了能够实现人机交互，必须解决的关键问题是，如何使用户能与自己的作业进行交互。为此，系统首先必须能提供多个终端，同时给多个用户使用。其次，当用户在自己的终端上键入命令时，系统应能及时接收，并及时处理该命令，再将结果返回给用户。此后，用户可根据系统返回的响应情况，再继续键入下一条命令，此即人&amp;mdash;机交互。亦即，允许有多个用户同时通过自己的键盘键入命令，系统也应能全部及时接收并处理。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;及时接收。要做到及时接收多个用户键入的命令或数据，只需在系统中配置一个&lt;strong&gt;多路卡&lt;/strong&gt;即可。例如当主机上要连接64个终端时，就配置一个64用户的多路卡。多路卡的作用是，实现分时多路复用。即主机以很快的速度周期性地扫描各个终端，在每个终端处停留很短的时间，如30ms，用于接收从终端发来的数据。对于64用户的多路卡，用不到2秒的时间便可完成一次扫描，即主机能用不到2秒的时间分时接收哥哥用户从终端上输入的数据一次。此外，为了能使从终端上输入的数据被依次逐条地进行处理，还需要为每个终端配置一个缓冲区，用来暂存用户键入的命令（或数据）。&lt;/li&gt;
&lt;li&gt;及时处理。人&amp;mdash;机交互的关键在于，用户键入命令后，能对自己的作业及其运行及时地实时控制，或进行修改。因此，各个用户的作业都必须驻留在内存中，并能频繁地获得处理机运行。否则，用户键入的命令将无法作用到自己的作业上。由此可见，为了实现人&amp;mdash;机交互，必须彻底地改变原来批处理系统的运行方式，转而采用下面的方式：
&lt;ol&gt;
&lt;li&gt;作业直接进入内存。因为作业在磁盘上是不能运行的，所以作业应该直接进入内存。&lt;/li&gt;
&lt;li&gt;采用轮转运行方式。如果一个作业独占CPU连续运行，那么其他作业就没有机会被调度运行。为避免一个作业长期独占处理机，引入了&lt;strong&gt;时间片&lt;/strong&gt;的概念。一个时间片，就是一段很短的时间（例如30ms）。系统规定每个作业每次只能运行一个时间片，然后就暂停该作业的运行，并立即调度下一个作业的运行。如果在不长时间内能使所有的作业都执行一个时间片的时间，便可以使每个用户都能及时地与自己的作业进行交互，从而可使用户的请求得到及时相应。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;分时系统的特征&#34;&gt;分时系统的特征
&lt;/h4&gt;&lt;p&gt;  分时系统与多道批处理系统相比，具有非常明显的不同特性，可归纳成以下四个方面。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;多路性。该特性是指系统允许将堕胎终端同时连接到一台主机上，并按分时原则为每个用户服务。多路性允许多个用户共享一台计算机，显著地提高了资源利用率，降低了使用费用，从而促进了计算机更广泛的应用。&lt;/li&gt;
&lt;li&gt;独立性。该特性是指系统提供了这样的用机环境，即每个用户在各自的终端上进行操作，彼此之间互不干扰，给用户的感觉就像是他一人独占主机进行操作。&lt;/li&gt;
&lt;li&gt;及时性。及时性是指用户的请求能在很短时间内获得响应。这一时间间隔是根据人们所能接受的等待时间确定的，通常仅为1~3秒钟。&lt;/li&gt;
&lt;li&gt;交互性。交互性是指用户可通过终端与系统进行广泛的人机对话。其广泛性表现在：用户可以请求系统提供多方面的服务，如进行文件编辑和数据处理，访问系统中的文件系统和数据库系统，请求提供打印服务等。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;实时系统real-time-system&#34;&gt;实时系统（Real Time System）
&lt;/h3&gt;&lt;p&gt;  所谓实时，是表示“及时”。而“实时计算”，则可定义为这样一类计算：系统的正确性，不仅由计算的逻辑结果来确定，而且还取决于产生结果的时间。事实上实时系统最主要的特征，是将时间作为关键参数，它必须对所接收到的某些信号做出“及时”或“实时”的反应。由此得知，&lt;strong&gt;实时系统&lt;/strong&gt;是指系统能及时响应外部事件的请求，在规定时间内完成对该事件的处理，并控制所有实时任务协调一致地运行。&lt;br&gt;
  &lt;/p&gt;
&lt;h4 id=&#34;实时系统的类型&#34;&gt;实时系统的类型
&lt;/h4&gt;&lt;p&gt;  随着计算机应用的普及，实时系统的类型也相应增多，下面列出当前常见的几种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;工业（武器）控制系统。当计算机被用于生产过程的控制，形成以计算机为中心的控制系统时，该系统应具有能实时采集现场数据，并对所采集的数据进行及时处理，进而能够自动地控制相应的执行机构，使之具有按预定的规律变化的功能，确保产品的质量和产量。类似地，也可将计算机用于对武器的控制，如火炮的自动控制系统、飞机的自动驾驶系统、以及导弹的制导系统等。&lt;/li&gt;
&lt;li&gt;信息查询系统。该系统接受从远程终端上发来的服务请求，根据用户提出的请求，对信息进行检索和处理，并能及时对用户做出正确的回答。实时信息处理系统由飞机或火车的订票系统等。&lt;/li&gt;
&lt;li&gt;多媒体系统。随着计算机硬件和软件的快速发展，已可将文本、图像、音频和视频等信息集成在一个文件中，形成一个多媒体文件。如在用DVD播放器所播放的数字电影中就包含了音频、适配和横向滚动的文字等信息。为了保证有好的听觉和视觉感受，用于播放音频和视频的多媒体系统等，也必须是实时信息处理系统。&lt;/li&gt;
&lt;li&gt;嵌入式系统。随着集成电路的发展，已制作出各种类型的芯片，可将这些芯片嵌入到各种一起和设备中，用于对设备进行控制或对其中的信息作出处理，这样就构成了所谓的智能仪器和设备。此时还需要配置嵌入式OS，它同样需要具有实时控制或处理的功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;实时任务的类型&#34;&gt;实时任务的类型
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;周期性实时任务和非周期性实时任务。&lt;strong&gt;周期性实时任务&lt;/strong&gt;是指这样一类任务，外部设备周期性地发出激励信号给计算机，要求它按指定周期循环执行，以便周期性地控制某我i不设备。反之，&lt;strong&gt;非周期性实时任务&lt;/strong&gt;并无明显的周期性，但都必须联系着一个&lt;strong&gt;截止时间（Deadline）&lt;/strong&gt;，或称为&lt;strong&gt;最后期限&lt;/strong&gt;。它又可分为：1. &lt;strong&gt;开始截止时间&lt;/strong&gt;：指某个任务在某时间以前必须开始执行；2. &lt;strong&gt;完成截止时间&lt;/strong&gt;：指某任务在某时间以前必须完成。&lt;/li&gt;
&lt;li&gt;硬实时任务和软实时任务。&lt;strong&gt;硬实时任务（Hard Real-time Task，HRT）&lt;/strong&gt; 是指系统必须满足任务对截止时间的要求，否则可能出现难以预测的后果。用于工业和武器控制的实时系统，通常它所执行的是硬实时任务。&lt;strong&gt;软实时任务（Soft Real-time Task, SRT）&lt;/strong&gt; 也联系着一个截止时间，但并不严格，若偶尔错过了截止时间，对系统产生的影响也不会太大。诸如用于信息查询系统和多媒体系统中的实时系统，通常是软实时任务。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;实时系统与分时系统特征的比较&#34;&gt;实时系统与分时系统特征的比较
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;多路性。信息查询系统和分时系统中的多路性都表现为系统按分时原则为多个终端用户服务；实时控制系统的多路性则是指系统周期性地对多路现场信息进行采集，以及对多个对象或多个执行机构进行控制。&lt;/li&gt;
&lt;li&gt;独立性。信息查询系统中的每个终端用户在与系统交互时，彼此相互独立互不干扰，同样在实时控制系统中，对信息的采集和对对象的控制也都是彼此互不干扰的。&lt;/li&gt;
&lt;li&gt;及时性。信息查询系统对实时性的要求是依据人所能接受的等待时间确定的。而多媒体系统实时性的要求是，播放出来的音乐和电视能令人满意。实时控制系统的实时性则是以控制对象所要求的截止时间来确定的，一般为秒级到毫秒级。&lt;/li&gt;
&lt;li&gt;交互性。在信息查询系统中，人与系统的交互性仅限于访问系统中某些特定的专用服务程序，它并不像分时系统那样，能向终端用户提供数据处理、资源共享等服务。而多媒体系统的交互性也仅限于用户发送某些特定的命令，如开始、停止、快进等，由系统立即响应。&lt;/li&gt;
&lt;li&gt;可靠性。分时系统要求系统可靠，实时系统要求系统高度可靠，因为任何差错都可能带来无法预料的灾难性的后果。因此，在实时系统中，往往都采取了多级容错措施来保障系统的安全性及数据的安全性。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;微机操作系统&#34;&gt;微机操作系统
&lt;/h3&gt;&lt;p&gt;  随着&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;和计算机体系结构的发展，以及应用需求的不断扩大，操作系统仍在继续发展。由此先后形成了微机操作系统、网络操作系统等。本小节对微机操作系统的发展作扼要的介绍。&lt;br&gt;
  配置在微型机上的操作系统称为&lt;strong&gt;微机操作系统&lt;/strong&gt;，最早诞生的危机操作系统是配置在8位微机上的CP/M，后来出现了16位微机，相应地，16位微机操作系统也就应运而生。当微机发展为32位、64位时，32位和64位微机操作系统也应运而生。可见微机操作系统可按微机的字长来分，但也可以将它按运行方式分为如下几类：&lt;/p&gt;
&lt;h4 id=&#34;单用户单任务操作系统&#34;&gt;单用户单任务操作系统
&lt;/h4&gt;&lt;p&gt;  单用户单任务操作系统的含义是：只允许一个用户上机，且只允许用户程序作为一个任务运行，这是最简单的微机操作系统，主要配置在8位和16位微机上，最有代表性的单用户单任务微机操作系统时CP/M和MS-DOS。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;CP/M&lt;br&gt;
  1974年第一代通用8位微处理机芯片Intel 8080出现后的第二年，Digital Research公司就开发出带有软盘系统的8位微机操作系统&lt;strong&gt;CP/M&lt;/strong&gt;。1977年Digital Research公司对CP/M进行了重写，使其剋配置在以Intel 8080、8085、Z80等8位芯片为基础的多种微机上。1979年又推出带有硬盘管理功能的CP/M 2.2版本。由于CP/M具有较好的体系结构，可适应性强，可以执行以及易学易用等优点，使之在8位微机中占据了统治地位。&lt;/li&gt;
&lt;li&gt;MS-DOS&lt;br&gt;
  1981年IBM公司首次推出了IBM-PC个人计算机（16位微机），在微机中采用了微软公司开发的&lt;strong&gt;MS-DOS（Disk Operating System）&lt;/strong&gt; 操作系统，该操作系统在CP/M的基础上进行了较大的扩充，使其在功能上有很大的提高。1983年IBM退出PC/AT（配有Intel 80286芯片），相应地微软又开发出MS-DOS 2.0版本，它不仅能支持硬盘设备，还采用了树形目录结构的文件系统。1987年又宣布了MS-DOS 3.3版本。从MS-DOS 1.0到3.3位置的版本都属于单用户单任务操作系统，内存被限制在640KB。从1989到1993年又先后推出了多个MS-DOS版本，它们都可以配置在Intel 80386、80486等32位微机上。从80年代到90年代初，由于MS-DOS性能优越受到当时用户的广泛欢迎，称为事实上的16位单用户单任务操作系统标准。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;单用户多任务操作系统&#34;&gt;单用户多任务操作系统
&lt;/h4&gt;&lt;p&gt;  单用户多任务操作系统的含义是，只允许一个用户上机，但允许用户把程序分为若干个任务，使它们&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;，从而有效地改善了系统的性能。目前在32位维基上配置的操作系统，基本上都是单用户多任务操作系统。其中最有代表性的是由微软公司推出的&lt;strong&gt;Windows&lt;/strong&gt;。1985年和1987年微软公司先后推出了Windows 1.0和Windows 2.0版本操作系统，由于当时的硬件平台还只是16位微机，对1.0和2.0版本不能很好地支持。1990年微软公式又发布了Windows 3.0版本，随后又宣布了Windows 3.1版本，它们主要是针对386和486等32位微机开发的，它较之以前的操作系统有着很重大的改进，引入了友善的图形用户界面，支持多任务和扩展内存的功能。使计算机更好使用，从而称为386和486等微机的主流操作系统。&lt;br&gt;
  1995年微软公司推出了Windows 95，它较之以前的Windows 3.1有许多重大改进，采用了全32位的处理技术，并兼容以前的16位应用程序，在该系统中还集成了支持Internet的网络功能。1998年微软公司又推出了Windows 95的改进版Windows 98，它已是最后一个仍然兼容以前16位应用程序的Windows。其最主要的改进是把微软公司自己开发的Internet浏览器整合到系统中，大大方便了用户上网浏览；另一个改进是增加了对多媒体的支持。2001年微软又发布了Windows XP，同时提供了家用和商业工作站两种版本，在此后相当长的一段时间，称为使用最广泛的个人操作系统之一。在开发上述Windows操作系统的同时，微软公司又开始对网络操作系统Windows NT进行开发，它是针对网络开发的操作系统，在系统中融入许多面向网络的功能，从2006年后推出的一系列内核版本号为NT6.X的桌面操作系统，包括Windows Vista、Windows 7、Windows 8等，这里就不对它们进行介绍。&lt;/p&gt;
&lt;h4 id=&#34;多用户多任务操作系统&#34;&gt;多用户多任务操作系统
&lt;/h4&gt;&lt;p&gt;  多用户多任务操作系统的含义是，允许多个用户通过各自的终端，使用同一台机器，共享主机系统中的各种资源，而每个用户程序又可进一步分为几个任务，使它们能&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;，从而可进一步提高资源利用率和系统吞吐量。在大、中和小型机中配置的大多是多用户多任务操作系统，而在32位微机上，也有不少配置的是多用户多任务操作系统，其中最有代表性的是UNIX OS。&lt;br&gt;
  &lt;strong&gt;UNIX OS&lt;/strong&gt;是美国电报电话公司的Bell实验室在1969~1970年期间开发的，1979年推出来的UNIX V.7已被广泛应用于多种小型机上。随着微机性能的提高，人们又将UNIX移植到微机上。在1980年后，将UNIX第7版本移植到Motorola公司的MC 680xx微机上，后来又将UNIX V7.0版本进行简化后，移植到Intel 8080上，把它称为Xenix。现在最有影响的两个能运行在微机上的UNIX操作系统变形是&lt;strong&gt;Solaris OS&lt;/strong&gt;和&lt;strong&gt;Linux OS&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Solaris OS：SUN公司于1982年推出的SUN OS 1.0，是一个运行在MOTOROLA 680X0平台上的UNIX OS，在1988年宣布的SUN OS 4.0，把运行平台从早期的MOTOROLA 680X0平台迁移到SPARC平台，并开始支持Intel公司的80X86；1992年SUN发布了Solaris 2.0。从1998年开始，Sun公司推出64位操作系统Solaris 2.7和2.8，这几款操作系统在网络特性、互操作性、兼容性以及易于配置和管理方面均有很大的提高。&lt;/li&gt;
&lt;li&gt;Linux OS：Linux是UNIX的一个重要变种，最初是由芬兰学生Linus Torvalds针对Intel 8086开发的，1991年，在Internet网上发布第一个Linux版本，由于源代码公开，因此有很多人通过Internet与之合作，使Linux的性能迅速提高，其应用范围也日益扩大，相应地，源代码而急剧膨胀，此时它已是具有全面功能的UNIX系统，大量在UNIX上运行的软件（包括1000多种使用工具软件和大量网络软件），被移植到Linux上，而且可以在主要的微机上运行，如Intel 80X86 Pentium等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;操作系统的基本特性&#34;&gt;操作系统的基本特性
&lt;/h2&gt;&lt;p&gt;  前面所介绍的&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;、&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;和&lt;span style=&#34;color:red;&#34;&gt;[未知标签引用]&lt;/span&gt;这三种基本草祖宗系统都具有各自不同的特征，如批处理系统有着高的资源利用率和系统吞吐量；分时系统能获得及时响应；实时系统具有实时特征。除此之外，它们还共同具有并发、共享、虚拟和异步四个基本特征。&lt;/p&gt;

&lt;h3 id=&#34;并发concurrence&#34;&gt;并发（Concurrence）
&lt;/h3&gt;&lt;p&gt;  正是系统中的程序能并发执行这一特征，才使得OS能有效地提尕奥系统中的资源利用率，增加系统的吞吐量。&lt;/p&gt;
&lt;h4 id=&#34;并行与并发&#34;&gt;并行与并发
&lt;/h4&gt;&lt;p&gt;  并行性和并发性是既相似又有区别的两个概念。&lt;strong&gt;并行性&lt;/strong&gt;是指两个或多个事件在同一时刻发生。而&lt;strong&gt;并发性&lt;/strong&gt;是指两个或多个事件在同一时间间隔内发生。在多道程序环境下，并发性是指在一段时间内宏观上有多个程序在同时运行，但在单处理机系统中，每一时刻却只能有一道程序执行，故微观上这些程序只能是分时地交替进行。例如，在1秒钟时间内，0~15ms程序A运行；15~30ms程序B运行；30~45ms程序C运行；45~60ms程序D运行，因此可以说，在1秒钟时间间隔内，宏观上有四道程序在同时运行，但微观上，程序A、B、C、D是分时地交替执行的。&lt;br&gt;
  倘若在计算机系统中有多个处理机，这些可以并发执行的程序便可被分配到多个处理机上，实现并行执行，即利用每个处理机来处理一个可并发执行的程序。这样，多个程序便可同时执行。&lt;/p&gt;
&lt;h4 id=&#34;引入进程&#34;&gt;引入进程
&lt;/h4&gt;&lt;p&gt;  在一个未引入进程的系统中，在属于同一个应用程序的计算程序和I/O程序之间只能是顺序执行，即只有在计算程序执行告一段落后，才允许I/O程序执行；反之，在程序执行I/O操作时,计算程序也不能执行。但在为计算程序和1/0程序分别建立一个&lt;strong&gt;进程（Process）&lt;/strong&gt;‌后，这两个进程便可并发执行。若对内存中的多个程序都分别建立一个进程，它们就可以并发执行，这样便能极大地提高系统资源的利用率，增加系统的吞吐量。&lt;br&gt;
  所谓进程，是指在系统中能独立运行并作为资源分配的基本单位。它是由一组机器指令、数据和堆栈等组成的，是一个能独立运行的活动实体。多个进程之间可以并发执行和交换信息。事实上，进程和并发是现代操作系统中最重要的基本概念，也是操作系统运行的基础。&lt;/p&gt;
&lt;h3 id=&#34;共享sharing&#34;&gt;共享（Sharing）
&lt;/h3&gt;&lt;p&gt;  一般情况下的共享与操作系统环境下的共享其含义并不完全相同。前者只是说明某种资源能被大家使用，如图书馆中的图书能提供给大家借阅，但并未限定借阅者必须在同一时间（间隔）和同一地点阅读。又如，学校中的计算机机房供全校学生上机，或者说，全校学生共享该机房中的计算机设备，虽然所有班级的上机地点是相同的，但各班的上机时间并不相同。对于这样的资源共享方式，只要通过适当的安排，用户之间并不会产生对资源的竞争，因此资源管理是比较简单的。&lt;br&gt;
  而在OS环境下的资源共享或称为资源复用，是指系统中的资源可供内存中多个并发执行的进程共同使用。这里在宏观上既限定了时间（进程在内存期间），也限定了地点（内存）。对于这种资源共享方式，其管理就要复杂得多，因为系统中的资源远少于多道程序需求的总和，会形成它们对共享资源的争夺。所以，系统必须对资源共享进行妥善管理。由于资 源属性的不同，进程对资源复用的方式也不同，目前主要实现资源共享的方式有如下两种。&lt;/p&gt;
&lt;h4 id=&#34;互斥共享方式&#34;&gt;互斥共享方式
&lt;/h4&gt;&lt;p&gt;  系统中的某些资源，如打印机、磁带机等，虽然可以提供给多个进程（线程）使用，但应规定在一段时间内，只允许一个进程访问该资源。为此，在系统中应建立一种机制，以保证多个进程对这类资源的互斥访问。当进程A要访问某资源时，必须先提出请求。若此时该资源空闲，系统便可将之分配给请求进程A使用。此后若再有其它进程也要访问该资源，只要A未用完就必须等待。仅当A进程访问完并释放系统资源后，才允许另一进程对该资源进行访问。这种资源共享方式称为&lt;strong&gt;互斥式共享&lt;/strong&gt;，把这种在一段时间内只允许一个进程访问的资源，称为&lt;strong&gt;临界资源（或独占资源）&lt;/strong&gt;。系统中的大多数物理设备，以及栈、变量和表格，都属于临界资源，都只能被互斥地共享。为此，在系统中必须配置某种机制，用于保证诸进程互斥地使用临界资源。&lt;/p&gt;
&lt;h4 id=&#34;同时访问方式&#34;&gt;同时访问方式
&lt;/h4&gt;&lt;p&gt;  系统中还有另一类资源，允许在一段时间内由多个进程“同时”对它们进行访问。这里所谓的“同时”，在单处理机环境下是宏观意义上的，而在微观上，这些进程对该资源的访问是交替进行的。典型的可供多个进程“同时”访问的资源是磁盘设备。一些用重入码编写的文件也可以被“同时”共享，即允许若干个用户同时访问该文件。&lt;/p&gt;
&lt;p&gt;  并发和共享是多用户（多任务）OS的两个最基本的特征。它们又是互为存在的条件。即一方面资源共享是以进程的并发执行为条件的，若系统不允许并发执行也就不存在资源共享问题：另一方面，若系统不能对资源共享实施有效管理，以协调好诸进程对共享资源的访问，也必然会影响到诸进程间并发执行的程度，甚至根本无法并发执行。&lt;/p&gt;
&lt;h3 id=&#34;虚拟virtual&#34;&gt;虚拟（Virtual）
&lt;/h3&gt;&lt;p&gt;  用于实现“虚拟”的技术最早出现在通信系统中。在早期，每一条物理信道只能供一对用户通话，为了提高通信信道的利用率而引入了&amp;quot;虚拟”技术。该技术是通过&amp;quot;空分复用”或“时分复用”技术，将一条物理信道变为若干条逻辑信道，使原来只能供一对用户通话的物理信道，变为能供多个用户同时通话的逻辑信道。&lt;br&gt;
  在OS中，把通过某种技术将一个物理实体变为若干个逻辑上的对应物的功能称为&amp;quot;虚拟”。前者是实的，即实际存在的，而后者是虚的，是用户感觉上的东西。相应地，把用于实现虚拟的技术称为虚拟技术。在OS中也是利用时分复用和空分复用技术来实现&amp;quot;虚拟”的。&lt;/p&gt;
&lt;h4 id=&#34;时分复用技术&#34;&gt;时分复用技术
&lt;/h4&gt;&lt;p&gt;  在计算机领域中，广泛利用时分复用技术来实现虚拟处理机、虚拟设备等，使资源的利用率得以提高。时分复用技术能提高资源利用率的根本原因在于，它利用某设备为一用户服务的空闲时间，又转去为其他用户服务，使设备得到最充分的利用。&lt;br&gt;
  1.虚拟处理机技术。利用多道程序设计技术，为每道程序建立至少一个进程，让多道程序并发执行。此时虽然系统中只有一台处理机，但通过分时复用的方法，能实现同时（宏观上）为多个用户服务，使每个终端用户都认为是有一个处理机在专门为他服务。亦即，利用多道程序设计技术，可将一台物理上的处理机虚拟为多台逻辑上的处理机，在每台逻辑处理机上运行一道程序，我们把用户所感觉到的处理机称为&lt;strong&gt;虚拟处理器&lt;/strong&gt;。&lt;br&gt;
  2.虚拟设备技术。我们还可以利用虚拟设备技术，也通过分时复用的方法，将一台物理I/O设备虚拟为多台逻辑上的I/O设备，并允许每个用户占用一台逻辑上的I/O设备。
这样便可使原来仅允许在一段时间内由一个用户访问的设备（即临界资源），变为允许多个用户&amp;quot;同时”访问的共享设备，既宏观上能&amp;quot;同时”为多个用户服务。例如原来的打印机属于临界资源，而通过虚拟设备技术又可以把它变为多台逻辑上的打印机，供多个用户&amp;quot;同时”打印。&lt;/p&gt;
&lt;h4 id=&#34;空分复用技术&#34;&gt;空分复用技术
&lt;/h4&gt;&lt;p&gt;  20世纪初，电信业中就已使用频分复用技术来提高信道的利用率。它是指将一个频率范围比较宽的信道划分成多个频率范围较窄的信道（称为频带），其中的任何一个频带都仅供一对用户通话。早期的频分复用技术只能将一条物理信道划分为几条到几十条话路，后来又很快发展到成千上万条话路，每条话路供一对用户通话。再后来在计算机中也把空分复用技术用于对存储空间的管理，用以提高存储空间的利用率。&lt;br&gt;
  如果说，多道程序技术（时分复用技术）是通过利用处理机的空闲时间运行其它程序，提高了处理机的利用率，那么，空分复用技术则是利用存储器的空闲空间分区域存放和运行其它的多道程序，以此来提高内存的利用率。&lt;br&gt;
  但是，单纯的空分复用存储器只能提高内存的利用率，并不能实现在逻辑上扩大存储器容量的功能，还必须引入&lt;strong&gt;虚拟存储技术&lt;/strong&gt;才能达到此目的。虚拟存储技术在本质上是实现内存的分时复用，即它可以通过分时复用内存的方式，使一道程序仅在远小于它的内存空间中运行。例如，一个100MB的应用程序之所以可以运行在30MB的内存空间，实质上就是每次只把用户程序的一部分调入内存运行，运行完成后将该部分换出，再换入另一部分到内存中运行，通过这样的置换功能，便实现了用户程序的各个部分分时地进入内存运行。应当着重指出：虚拟的实现，如果是采用分时复用的方法，即对某一物理设备进行分时使用，设N是某物理设备所对应的虚拟的逻辑设备数，则每台虚拟设备的平均速度必然等于或低于物理设备速度的1/N。类似地，如果是利用空分复用方法来实现虚拟，此时一台虚拟设备平均占用的空间必然也等于或低于物理设备所拥有空间的1/N。&lt;/p&gt;
&lt;h3 id=&#34;异步asynchronism&#34;&gt;异步（Asynchronism）
&lt;/h3&gt;&lt;p&gt;  在多道程序环境下，系统允许多个进程并发执行。在单处理机环境下，由于系统中只有一台处理机，因而每次只允许一个进程执行，其余进程只能等待。当正在执行的进程提出某种资源要求时，如打印请求，而此时打印机正在为其它进程打印，由于打印机属于临界资源，因此正在执行的进程必须等待，并释放出处理机，直到打印机空闲，并再次获得处理机时，该进程方能继续执行。可见，由于资源等因素的限制，使进程的执行通常都不可能&amp;quot;一气呵成”，而是以&amp;quot;停停走走”的方式运行。&lt;br&gt;
  对于内存中的每个进程，在何时能获得处理机运行，何时又因提出某种资源请求而暂停，以及进程以怎样的速度向前推进，每道程序总共需要多少时间才能完成等等，都是不可预知的。由于各用户程序性能的不同，比如，有的侧重于计算而较少需要I/O；而有的程序其计算少而I/O多，这样，很可能是先进入内存的作业后完成，而后进入内存的作业先完成。或者说，进程是以人们不可预知的速度向前推进的，此即进程的异步性。尽管如此,但只要在OS中配置有完善的进程同步机制，且运行环境相同，则作业即便经过多次运行，也都会获得完全相同的结果。因此异步运行方式是允许的，而且是操作系统的一个重要特征。&lt;/p&gt;
&lt;h2 id=&#34;操作系统的主要功能&#34;&gt;操作系统的主要功能
&lt;/h2&gt;&lt;p&gt;  引入OS的主要目的是，为多道程序的运行提供良好的运行环境，以保证多道程序能有条不紊地、高效地运行，并能最大程度地提高系统中各种资源的利用率，方便用户的使
用。为此，在传统的OS中应具有处理机管理、存储器管理、设备管理和文件管理等基本功能。此外，为了方便用户使用OS,还需向用户提供方便的用户接口。&lt;/p&gt;
&lt;h3 id=&#34;处理机管理功能&#34;&gt;处理机管理功能
&lt;/h3&gt;&lt;p&gt;  在传统的多道程序系统中，处理机的分配和运行都是以进程为基本单位的，因而对处理机的管理可归结为对进程的管理。处理机管理的主要功能有：创建和撤消进程，对诸进程的运行进行协调，实现进程之间的信息交换，以及按照一定的算法把处理机分配给进程。&lt;/p&gt;
&lt;h4 id=&#34;进程控制&#34;&gt;进程控制
&lt;/h4&gt;&lt;p&gt;  在多道程序环境下为使作业能并发执行，必须为每道作业创建一个或几个进程，并为之分配必要的资源。当进程运行结束时，应立即撤消该进程，以便能及时回收该进程所占用的各类资源，供其它进程使用。在设置有线程的OS中，进程控制还应包括为一个进程创建若干个线程，以提高系统的并发性。因此，进程控制的主要功能也就是为作业创建进程、撤消（终止）已结束的进程，以及控制进程在运行过程中的状态转换。&lt;/p&gt;
&lt;h4 id=&#34;进程同步&#34;&gt;进程同步
&lt;/h4&gt;&lt;p&gt;  为使多个进程能有条不紊地运行，系统中必须设置相应的进程同步机制。该机制的主要任务是为多个进程（含线程）的运行进行协调。常用的协调方式有两种：1. 进程互斥方式,这是指诸进程在对临界资源进行访问时，应采用互斥方式；2. 进程同步方式，指在相互合作去完成共同任务的诸进程间，由同步机构对它们的执行次序加以协调。最简单的用于实现进程互斥的机制是为每一个临界资源配置一把锁W,当锁打开时，进程可以对该临界资源进行访问:而当锁关上时，则禁止进程访问该临界资源。而实现进程同步时，最常用的机制是&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，进程部分还未写完~&#39;)&#34;&gt;信号量机制&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;进程通信&#34;&gt;进程通信
&lt;/h4&gt;&lt;p&gt;  当有一组相互合作的进程去完成一个共同的任务时，在它们之间往往需要交换信息。例如，有输入进程、计算进程和打印进程三个相互合作的进程，输入进程负责将所输入的数据传送给计算进程；计算进程利用输入数据进行计算，并把计算结果传送给打印进程；最后由打印进程把计算结果打印出来。进程通信的任务是实现相互合作进程之间的信息交换。&lt;br&gt;
  当相互合作的进程处于同一计算机系统时，通常在它们之间采用直接通信方式，即由源进程利用发送命令直接将&lt;strong&gt;消息（message）&lt;/strong&gt;‌挂到目标进程的消息队列上，以后由目标进程利用接收命令从其消息队列中取出消息。&lt;/p&gt;
&lt;h4 id=&#34;调度&#34;&gt;调度
&lt;/h4&gt;&lt;p&gt;  在传统OS中，调度包括作业调度和进程调度两步。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;作业调度。作业调度的基本任务是从后备队列中按照一定的算法选择出若干个作业，为它们分配运行所需的资源，在将这些作业调入内存后，分别为它们建立进程，使它们都成为可能获得处理机的就绪进程，并将它们插入就绪队列中。&lt;/li&gt;
&lt;li&gt;进程调度。进程调度的任务是从进程的就绪队列中按照一定的算法选出一个进程，将处理机分配给它，并为它设置运行现场，使其投入执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;存储器管理功能&#34;&gt;存储器管理功能
&lt;/h3&gt;&lt;p&gt;  存储器管理的主要任务，是为多道程序的运行提供良好的环境，提高存储器的利用率， 方便用户使用，并能从逻辑上扩充内存。为此，存储器管理应具有内存分配和回收、内存 保护、地址映射和内存扩充等功能。&lt;/p&gt;
&lt;h4 id=&#34;内存分配&#34;&gt;内存分配
&lt;/h4&gt;&lt;p&gt;  内存分配的主要任务是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为每道程序分配内存空间，使它们&amp;quot;各得其所”。&lt;/li&gt;
&lt;li&gt;提高存储器的利用率，尽量减少不可用的内存空间(碎片)。&lt;/li&gt;
&lt;li&gt;允许正在运行的程序申请附加的内存空间，以适应程序和数据动态增长的需要。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  OS在实现内存分配时，可采取静态和动态两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;静态分配方式。每个作业的内存空间是在作业装入时确定的，在作业装入后的整个运行期间不允许该作业再申请新的内存空间，也不允许作业在内存中“移动”。&lt;/li&gt;
&lt;li&gt;动态分配方式。每个作业所要求的基本内存空间虽然也是在装入时确定的，但允 许作业在运行过程中继续申请新的附加内存空间，以适应程序和数据的动态增长，也允许作业在内存中“移动&amp;quot;。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;内存保护&#34;&gt;内存保护
&lt;/h4&gt;&lt;p&gt;  内存保护的主要任务是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;确保每道用户程序都仅在自己的内存空间内运行，彼此互不干扰。&lt;/li&gt;
&lt;li&gt;绝不允许用户程序访问操作系统的程序和数据，也不允许用户程序转移到非共享的其它用户程序中去执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  为了确保每道程序都只在自己的内存区中运行，必须设置内存保护机制。一种比较简单的内存保护机制是设置两个界限寄存器，分别用于存放正在执行程序的上界和下界。在程序运行时，系统须对每条指令所要访问的地址进行检查，如果发生越界，便发出越界中断请求，以停止该程序的执行。&lt;/p&gt;
&lt;h4 id=&#34;地址映射&#34;&gt;地址映射
&lt;/h4&gt;&lt;p&gt;  在多道程序环境下，由于每道程序经编译和链接后所形成的可装入程序其地址都是从0开始的，但不可能将它们从&amp;quot;0”地址(物理)开始装入内存，致使(各程序段的)地址空间内的逻辑地址与其在内存空间中的物理地址并不相一致。为保证程序能正确运行，存储器管理必须提供地址映射功能，即能够将地址空间中的逻辑地址转换为内存空间中与之对应的物理地址。该功能应在硬件的支持下完成。&lt;/p&gt;
&lt;h4 id=&#34;内存扩充&#34;&gt;内存扩充
&lt;/h4&gt;&lt;p&gt;  内存扩充并非是从物理上去扩大内存的容量，而是借助于虚拟存储技术，从逻辑上扩充内存容量，使用户所感觉到的内存容量比实际内存容量大得多，以便让更多的用户程序能并发运行。这样既满足了用户的需要，又改善了系统的性能。为了能在逻辑上扩充内存，系统必须设置内存扩充机制(包含少量的硬件)，用于实现下述各功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;请求调入功能，系统允许在仅装入部分用户程序和数据的情况下，便能启动该程序运行。在程序运行过程中，若发现要继续运行时所需的程序和数据尚未装入内存，可向OS发出请求，由OS从磁盘中将所需部分调入内存，以便继续运行。&lt;/li&gt;
&lt;li&gt;置换功能，若发现在内存中已无足够的空间来装入需要调入的程序和数据时，系统应能将内存中的一部分暂时不用的程序和数据调至硬盘上，以腾出内存空间，然后再将所需调入的部分装入内存。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;设备管理功能&#34;&gt;设备管理功能
&lt;/h3&gt;&lt;p&gt;  设备管理的主要任务如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;完成用户进程提出的I/O请求，为用户进程分配所需的I/O设备，并完成指定的I/O操作。&lt;/li&gt;
&lt;li&gt;提高CPU和I/O设备的利用率，提高I/O速度，方便用户使用I/O设备。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  为实现上述任务，设备管理应具有缓冲管理、设备分配和设备处理以及虚拟设备等功能。&lt;/p&gt;
&lt;h4 id=&#34;缓冲管理&#34;&gt;缓冲管理
&lt;/h4&gt;&lt;p&gt;  如果在I/O设备和CPU之间引入缓冲，则可有效地缓和CPU和I/O设备速度不匹配的矛盾，提高CPU的利用率，进而提高系统吞吐量。因此在现代OS中，无一例外地在内存中设置了缓冲区，而且还可通过增加缓冲区容量的方法来改善系统的性能。不同的系统可采用不同的缓冲区机制。最常见的缓冲区机制有：单缓冲机制、能实现双向同时传送数据的双缓冲机制、能供多个设备同时使用的公用缓冲池机制。上述这些缓冲区都由OS缓冲
管理机制将它们管理起来。&lt;/p&gt;
&lt;h4 id=&#34;设备分配&#34;&gt;设备分配
&lt;/h4&gt;&lt;p&gt;  设备分配的基本任务是根据用户进程的I/O请求、系统现有资源情况以及按照某种设备分配策略，为之分配其所需的设备。如果在I/O设备和CPU之间还存在着设备控制器和I/O通道，则还需为分配出去的设备分配相应的控制器和通道。为实现设备分配，系统中应设置设备控制表、控制器控制表等数据结构，用于记录设备及控制器等的标识符和状态。根据这些表格可以了解指定设备当前是否可用，是否忙碌，以供进行设备分配时参考。在进行设备分配时，应针对不同的设备类型而采用不同的设备分配方式。对于独占设备的分配还应考虑到该设备被分配出去后系统是否安全。在设备使用完后，应立即由系统回收。&lt;/p&gt;
&lt;h4 id=&#34;设备处理&#34;&gt;设备处理
&lt;/h4&gt;&lt;p&gt;  设备处理程序又称为设备驱动程序。其基本任务是用于实现CPU和设备控制器之间的通信，即由CPU向设备控制器发出I/O命令，要求它完成指定的I/O操作：反之，由CPU接收从控制器发来的中断请求，并给予迅速的响应和相应的处理。&lt;br&gt;
  设备处理过程是：首先检查I/O请求的合法性，了解设备状态是否是空闲的，读取有关的传递参数及设置设备的工作方式。然后向设备控制器发出I/O命令，启动I/O设备完成指定的I/O操作。此外设备驱动程序还应能及时响应由控制器发来的中断请求，并根据该中断请求的类型，调用相应的中断处理程序进行处理。对于设置了通道的计算机系统，设备处理程序还应能根据用户的I/O请求自动地构成通道程序。&lt;/p&gt;
&lt;h3 id=&#34;文件管理功能&#34;&gt;文件管理功能
&lt;/h3&gt;&lt;p&gt;  文件管理的主要任务是对用户文件和系统文件进行管理以方便用户使用，并保证文件的安全性。为此，文件管理应具有对文件存储空间的管理、目录管理、文件的读/写管理以及文件的共享与保护等功能。&lt;/p&gt;
&lt;h4 id=&#34;文件存储空间的管理&#34;&gt;文件存储空间的管理
&lt;/h4&gt;&lt;p&gt;  在多用户环境下，若由用户自己对文件的存储进行管理，不仅非常困难，而且也必然十分低效。因而需要由文件系统对诸多文件及文件的存储空间实施统一的管理。其主要任务是：为每个文件分配必要的外存空间，提高外存的利用率，进而提高文件系统的存、取速度。为此，系统中应设置相应的数据结构，用于记录文件存储空间的使用情况，以供分配存储空间时参考。还应具有对存储空间进行分配和回收的功能。&lt;/p&gt;
&lt;h4 id=&#34;目录管理&#34;&gt;目录管理
&lt;/h4&gt;&lt;p&gt;  目录管理的主要任务是为每个文件建立一个目录项，目录项包括文件名、文件属性、文件在磁盘上的物理位置等，并对众多的目录项加以有效的组织，以实现方便的按名存取。即用户只需提供文件名，即可对该文件进行存取。目录管理还应能实现文件共享，这样，只需在外存上保留一份该共享文件的副本。此外，还应能提供快速的目录查询手段，以提高对文件检索的速度。&lt;/p&gt;
&lt;h4 id=&#34;文件的读写管理和保护&#34;&gt;文件的读/写管理和保护
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;文件的读/写管理。该功能是根据用户的请求，从外存中读取数据，或将数据写入外存。在进行文件读/写时，系统先根据用户给出的文件名去检索文件目录，从中获得文件在外存中的位置。然后，利用文件读/写指针，对文件进行读/写。一旦读/写完成，便修改读/写指针，为下一次读/写做好准备。由于读和写操作不会同时进行，故可合用一个读/写指针。&lt;/li&gt;
&lt;li&gt;文件保护。为了防止系统中的文件被非法窃取和破坏，在文件系统中必须提供有效的存取控制功能，以实现下述目标：①防止未经核准的用户存取文件；②防止冒名顶替存取文件：③防止以不正确的方式使用文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;操作系统与用户之间的接口&#34;&gt;操作系统与用户之间的接口
&lt;/h3&gt;&lt;p&gt;  为了方便用户对操作系统的使用，操作系统向用户提供了 &amp;ldquo;用户与操作系统的接口二 该接口通常可分为如下两大类：&lt;/p&gt;
&lt;h4 id=&#34;用户接口&#34;&gt;用户接口
&lt;/h4&gt;&lt;p&gt;  为了便于用户直接或间接地控制自己的作业，操作系统向用户提供了命令接口。用户可通过该接口向作业发出命令以控制作业的运行。该接口又进一步分为联机用户接口、脱机用户接口和图形用户接口三种。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;联机用户接口。这是为联机用户提供的，它由一组键盘操作命令及命令解释程序组成。当用户在终端或控制台上键入一条命令后，系统便立即转入命令解释程序，对该命令加以解释执行。在完成指定功能后系统又返回到终端或控制台上，等待用户键入下一条命令。这样，用户便可通过先后键入不同命令的方式来实现对作业的控制，直至作业完成。&lt;/li&gt;
&lt;li&gt;脱机用户接口。这是为批处理作业的用户提供的。用户用作业控制语言JCL把需要对作业进行的控制和干预的命令事先写在作业说明书上，然后将它与作业一起提供给系统。当系统调度到该作业运行时，通过调用命令解释程序去对作业说明书上的命令逐条解释执行，直至遇到作业结束语句时系统才停止该作业的运行。&lt;/li&gt;
&lt;li&gt;图形用户接口。通过联机用户接口取得OS的服务既不方便又花时间，用户必须熟
记所有命令及其格式和参数，并逐个字符地键入命令，于是图形用户接口便应运而生。图
形用户接口采用了图形化的操作界面，用非常容易识别的各种图标（icon）来将系统的各项功能、各种应用程序和文件直观、逼真地表示出来。用户可通过菜单（和对话框）用移动鼠标选择菜单项的方式取代命令的键入，以方便、快捷地完成对应用程序和文件的操作，从而把用户从繁琐且单调的操作中解脱出来。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;程序接口&#34;&gt;程序接口
&lt;/h4&gt;&lt;p&gt;  程序接口是为用户程序在执行中访问系统资源而设置的，是用户程序取得操作系统服务的唯一途径。它是由一组系统调用组成的，每一个系统调用都是一个能完成特定功能的子程序。每当应用程序要求OS提供某种服务（功能）时，便调用具有相应功能的系统调用（子程序）。早期的系统调用都是用汇编语言提供的，只有在用汇编语言书写的程序中才能直接使用系统调用。但在高级语言以及C语言中，往往提供了与各系统调用一一对应的库函数，这样，应用程序便可通过调用对应的库函数来使用系统调用。但在近几年所推出的操作系统中，如UNIX、OS/2版本中，其系统调用本身已经采用C语言编写，并以函数形式提供，故在用C语言编制的程序中，可直接使用系统调用。&lt;/p&gt;
&lt;h3 id=&#34;现代操作系统的新功能&#34;&gt;现代操作系统的新功能
&lt;/h3&gt;&lt;p&gt;  现代操作系统是在传统操作系统基础上发展起来的，它除了具有传统操作系统的功能外，还增加了面向安全、面向网络和面向多媒体等功能。&lt;/p&gt;

&lt;h4 id=&#34;系统安全&#34;&gt;系统安全
&lt;/h4&gt;&lt;p&gt;  通常，政府机关和企事业单位有大量的、重要的信息，必须高度集中地存储在计算机系统中。这样，如何确保在计算机系统中存储和传输数据的保密性、完整性和系统可用性，便成为信息系统亟待解决的重要问题，而保障系统安全性的任务也责无旁贷地落到了现代OS的身上。&lt;br&gt;
  虽然在传统的OS中也采取了一些保障系统安全的措施，但随着计算技术的进步和网络的普及，传统的安全措施已远不能满足要求。为此，在现代OS中采取了多种有效措施来确保系统的安全。在本书中我们仅局限于介绍保障系统安全的几个技术问题，包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;认证技术。这是一个用来确认被认证的对象是否名副其实的过程，以确定对象的真实性，防止入侵者进行假冒和篡改等。如身份认证，是通过验证被认证对象的一个或多个参数的真实性和有效性来确定被认证对象是否名副其实；因此，在被认证对象与要验证的那些参数之间应存在严格的对应关系。&lt;/li&gt;
&lt;li&gt;密码技术。即对系统中所需存储和传输的数据进行加密，使之成为密文，这样，攻击者即使截获到数据，也无法了解到数据的内容。只有指定的用户才能对该数据予以解密，了解其内容，从而有效地保护了系统中信息资源的安全性。近年来，国内外广泛应用数据加密技术来保障计算机系统的安全性。&lt;/li&gt;
&lt;li&gt;访问控制技术，可通过两种途径来保障系统中资源的安全：①通过对用户存取权限的设置，可以限定用户只能访问被允许访问的资源，这样也就限定了用户对系统资源的访问范围；②访问控制还可以通过对文件属性的设置来保障指定文件的安全性，如设置文件属性为只读时，该文件就只能被读而不能被修改等。&lt;/li&gt;
&lt;li&gt;反病毒技术。对于病毒的威胁，最好的解决方法是预防，不让病毒侵入系统，但要完全做到这一点是十分困难的，因此还需要非常有效的反病毒软件来检测病毒。在反病毒软件被安装到计算机后，便可对硬盘上所有的可执行文件进行扫描，检查盘上的所有可执行文件，若发现有病毒，便立即将它清除。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;网络功能和服务&#34;&gt;网络功能和服务
&lt;/h4&gt;&lt;p&gt;  在现代OS中，为支持用户联网取得各类网络所提供的服务，如电子邮件服务、Web服务等，应在操作系统中增加面向网络的功能，用于实现网络通信和资源管理，以及提供用户取得网络服务的手段。作为一个网络操作系统，应当具备多方面的功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;网络通信，用于在源主机和目标主机之间，实现无差错的数据传输，如建立和拆除通信链路、传输控制、差错控制和流量控制等。&lt;/li&gt;
&lt;li&gt;资源管理，即对网络中的共享资源(硬件和软件)实施有效的管理，协调诸用户对共享资源的使用，保证数据的安全性和一致性。典型的共享硬件资源有硬盘、打印机等，软
件资源有文件和数据。&lt;/li&gt;
&lt;li&gt;应用互操作，即在一个由若干个不同网络互连所构成的互连网络中，必须提供应
用互操作功能，以实现信息的互通性和信息的互用性。信息的互通性是指在不同网络中的用户之间，能实现信息的互通。信息的互用性是表示用户可以访问不同网络中的文件系统
和数据库系统中的信息。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;支持多媒体&#34;&gt;支持多媒体
&lt;/h4&gt;&lt;p&gt;  一个支持多媒体的操作系统必须能像一般OS处理文字、图形信息那样去处理音频和视频信息等多媒体信息，为此，现代操作系统增加了多媒体的处理功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接纳控制功能。在多媒体系统中，为了保证同时运行多个实时进程的截止时间，需要对在系统中运行的软实时任务，即SRT任务的数目、驻留在内存中的任务数目加以限制，为此设置了相应的接纳控制功能，如媒体服务器的接纳控制、存储器接纳控制和进程接纳控制。&lt;/li&gt;
&lt;li&gt;实时调度。多媒体系统中的每一个任务，往往都是一些要求较严格的、周期性的软实时任务SRT,如为了保证动态图像的连续性，图像更新的周期必须在40ms之内，因此在SRT调度时，不仅需要考虑进程的调度策略，还要考虑进程调度的接纳度等，相比传统的OS这就要复杂得多。&lt;/li&gt;
&lt;li&gt;多媒体文件的存储。为了存放多媒体文件，对OS最重要的要求是能把硬盘上的数据快速地传送到输出设备上。因此，对于在传统文件系统中数据的离散存放方式以及磁盘寻道方式都要加以改进。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;os结构设计&#34;&gt;OS结构设计
&lt;/h2&gt;&lt;p&gt;  早期OS的规模很小，如只有几十KB,完全可以由一个人以手工方式，用几个月的时间编制出来。此时，编制程序基本上是一种技巧，OS是否是有结构的并不那么重要，重要的是程序员的程序设计技巧。但随着OS规模的愈来愈大，其所具有的代码也愈来愈多，往往需要由数十人或数百人甚至更多的人参与，分工合作，共同来完成操作系统的设计。这意味着，应采用工程化的开发方法对大型软件进行开发。由此产生了&amp;quot;软件工程学”。&lt;br&gt;
  软件工程的目标是十分明确的，所开发出的软件产品应具有良好的软件质量和合理的费用。整个费用应能为用户所接受：软件质量可用这样几个指标来评价：功能性、有效性、可靠性、易使用性、可维护性和易移植性。为此，先后产生了多种操作系统的开发方法，如模块化方法、结构化方法和面向对象的方法等。利用不同的开发方法所开发出的操作系统将具有不同的操作系统结构。&lt;/p&gt;
&lt;h3 id=&#34;传统操作系统的结构&#34;&gt;传统操作系统的结构
&lt;/h3&gt;&lt;p&gt;  软件开发技术的不断发展，促进了 OS结构的更新换代。这里，我们把早期的无结构的OS（第一代）、模块化结构的OS（第二代）和分层式结构的OS（第三代），都统称为&lt;strong&gt;传统结构的OS&lt;/strong&gt;,而把微内核结构的OS称为&lt;strong&gt;现代结构的OS&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&#34;无结构操作系统&#34;&gt;无结构操作系统
&lt;/h4&gt;&lt;p&gt;  在早期开发操作系统时，设计者只是把他的注意力放在功能的实现和获得高的效率上，缺乏首尾一致的设计思想。此时的OS是为数众多的一组过程的集合，每个过程可以任意地相互调用其它过程，致使操作系统内部既复杂又混乱，因此，这种OS是&lt;strong&gt;无结构的&lt;/strong&gt;，也有人把它称为整体系统结构。&lt;br&gt;
  此时程序设计的技巧，只是如何编制紧凑的程序，以便于有效地利用内存。当系统不太大，在一个人能够完全理解和掌握的情况下问题还不是太大，但随着系统的不断扩大，所设计出的操作系统就会变得既庞大又杂乱。这一方面会使所编制出的程序错误很多，给调试工作带来很多困难；另一方面也使程序难以阅读和理解，增加了维护人员的负担。&lt;/p&gt;

&lt;h4 id=&#34;模块化结构操作系统&#34;&gt;模块化结构操作系统
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. 模块化程序设计技术的基本概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;模块化程序设计技术&lt;/strong&gt;是20世纪60年代出现的一种结构化程序设计技术。该技术基于&amp;quot;分解&amp;quot;和“模块化”的原则来控制大型软件的复杂度。为使OS具有较清晰的结构，OS不再是由众多的过程直接构成的，而是按其功能精心地划分为若干个具有一定独立性和大小的模块。每个模块具有某方面的管理功能，如进程管理模块、存储器管理模块、I/O设备管理模块等，并仔细地规定好各模块间的接口，使各模块之间能通过接口实现交互。然后再进一步将各模块细分为若干个具有一定功能的子模块，如把进程管理模块又分为进程控制、进程同步等子模块，同样也规定好各子模块之间的接口。若子模块较大，可再进一步将它细分。我们把这种设计方法称为&lt;strong&gt;模块-接口法&lt;/strong&gt;，由此构成的操作系统就是&lt;strong&gt;具有模块化结构的操作系统&lt;/strong&gt;。&lt;a class=&#34;link&#34; href=&#34;#20241014103700CST&#34;&gt;图7&lt;/a&gt;示出了由模块、子模块等组成的模块化OS结构。&lt;/p&gt;
&lt;span id=&#34;20241014103700CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 283.5&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1 {
        fill: none;
        stroke: #000;
        stroke-miterlimit: 10;
      }

      .cls-2 {
        font-family: NotoSerifSC-Light, &#39;Noto Serif SC&#39;;
        font-weight: 300;
      }

      .cls-2, .cls-3 {
        font-size: 18px;
      }

      .cls-3 {
        font-family: NotoSerifSC-Regular, &#39;Noto Serif SC&#39;;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_图层_1&#34;&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;366.1&#34; y=&#34;5.8&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(395.8 31)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;操作系统&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;polyline class=&#34;cls-1&#34; points=&#34;180.1 120.5 431.8 41.8 431.8 120.5&#34;/&gt;
      &lt;line class=&#34;cls-1&#34; x1=&#34;431.8&#34; y1=&#34;41.8&#34; x2=&#34;683.6&#34; y2=&#34;120.5&#34;/&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(96.4 115.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;模块&lt;/tspan&gt;&lt;/text&gt;
      &lt;g&gt;
        &lt;g&gt;
          &lt;rect class=&#34;cls-1&#34; x=&#34;61.9&#34; y=&#34;242.1&#34; width=&#34;86&#34; height=&#34;36&#34;/&gt;
          &lt;text class=&#34;cls-2&#34; transform=&#34;translate(68.9 267.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;进程控制&lt;/tspan&gt;&lt;/text&gt;
        &lt;/g&gt;
        &lt;g&gt;
          &lt;rect class=&#34;cls-1&#34; x=&#34;212.4&#34; y=&#34;242.1&#34; width=&#34;86&#34; height=&#34;36&#34;/&gt;
          &lt;text class=&#34;cls-2&#34; transform=&#34;translate(219.3 267.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;进程调度&lt;/tspan&gt;&lt;/text&gt;
        &lt;/g&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(171.1 267.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;114.4&#34; y=&#34;120.5&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(144.1 145.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;进程管理&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;366.1&#34; y=&#34;120.5&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(386.8 145.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;存储器管理&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;617.9&#34; y=&#34;120.5&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(647.6 145.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;文件管理&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(297 145.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(548.7 145.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
      &lt;g&gt;
        &lt;g&gt;
          &lt;rect class=&#34;cls-1&#34; x=&#34;313.6&#34; y=&#34;242.1&#34; width=&#34;86&#34; height=&#34;36&#34;/&gt;
          &lt;text class=&#34;cls-2&#34; transform=&#34;translate(320.6 267.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;内存分配&lt;/tspan&gt;&lt;/text&gt;
        &lt;/g&gt;
        &lt;g&gt;
          &lt;rect class=&#34;cls-1&#34; x=&#34;464.1&#34; y=&#34;242.1&#34; width=&#34;86&#34; height=&#34;36&#34;/&gt;
          &lt;text class=&#34;cls-2&#34; transform=&#34;translate(471.1 267.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;内存保护&lt;/tspan&gt;&lt;/text&gt;
        &lt;/g&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(422.8 267.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;g&gt;
          &lt;rect class=&#34;cls-1&#34; x=&#34;565.4&#34; y=&#34;242.1&#34; width=&#34;86&#34; height=&#34;36&#34;/&gt;
          &lt;text class=&#34;cls-2&#34; transform=&#34;translate(572.4 267.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;磁盘管理&lt;/tspan&gt;&lt;/text&gt;
        &lt;/g&gt;
        &lt;g&gt;
          &lt;rect class=&#34;cls-1&#34; x=&#34;715.8&#34; y=&#34;242.1&#34; width=&#34;86&#34; height=&#34;36&#34;/&gt;
          &lt;text class=&#34;cls-2&#34; transform=&#34;translate(722.8 267.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;目录管理&lt;/tspan&gt;&lt;/text&gt;
        &lt;/g&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(674.6 267.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;polyline class=&#34;cls-1&#34; points=&#34;104.9 242.1 180.1 156.5 255.3 242.1&#34;/&gt;
      &lt;polyline class=&#34;cls-1&#34; points=&#34;356.6 242.1 431.8 156.5 507.1 242.1&#34;/&gt;
      &lt;polyline class=&#34;cls-1&#34; points=&#34;608.4 242.1 683.6 156.5 758.8 242.1&#34;/&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(34.9 236.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;子模块&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图7&amp;emsp;模块化结构的操作系统&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 模块独立性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在模块&amp;mdash;接口法中，关键问题是模块的划分和规定好模块之间的接口。如果我们在划分模块时将模块划分得太小，虽然可以降低模块本身的复杂性，但会引起模块之间的联系过多，从而会造成系统比较混乱；如果将模块划分得过大，又会增加模块内部的复杂性，使内部的联系增加，因此在划分模块时，应在两者间进行权衡。&lt;br&gt;
  另外，在划分模块时，必须充分注意模块的独立性问题，因为模块独立性越高，各模块间的交互就越少，系统的结构也就越清晰。衡量模块的独立性有以下两个标准：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;内聚性&lt;/strong&gt;。指模块内部各部分间联系的紧密程度。内聚性越高，模块独立性越强。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;耦合度&lt;/strong&gt;。指模块间相互联系和相互影响的程度。显然，耦合度越低，模块独立性越好。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;3. 模块接口法的优缺点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  利用模块&amp;mdash;接口法开发的OS,较之无结构OS具有以下明显的优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提高OS设计的正确性、可理解性和可维护性。&lt;/li&gt;
&lt;li&gt;增强OS的可适应性。&lt;/li&gt;
&lt;li&gt;加速OS的开发过程。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  模块化结构设计仍存在下述问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在OS设计时，对各模块间的接口规定很难满足在模块设计完成后对接口的实际需求。&lt;/li&gt;
&lt;li&gt;在OS设计阶段，设计者必须做出一系列的决定（决策），每一个决定必须建立在上一个决定的基础上，但模块化结构设计中，各模块的设计齐头并进，无法寻找一个可靠的决定顺序，造成各种决定的“无序性”，这将使程序人员很难做到“设计中的每一步决定”都是建立在可靠的基础上，因此模块-接口法又被称为“&lt;strong&gt;无序模块法&lt;/strong&gt;”。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;分层式结构操作系统&#34;&gt;分层式结构操作系统
&lt;/h4&gt;&lt;p&gt;&lt;strong&gt;1. 分层式结构的基本概念&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  为了将模块&amp;mdash;接口法中“决定顺序”的无序性变为有序性，引入了&lt;strong&gt;有序分层法&lt;/strong&gt;，分层法的设计任务是，在&lt;strong&gt;目标系统&lt;/strong&gt; \(A_n\) 和&lt;strong&gt;裸机系统&lt;/strong&gt;（又称&lt;strong&gt;宿主系统&lt;/strong&gt;） \(A_0\) 之间，铺设若干个层次的软件 \(A_1,A_2,A_3,\cdot,A_{n-1}\) ，使 \(A_n\) 通过 \(A_{n-1},A_{n-2},\cdots,A_2,A_1\) 层，最终能在 \(A_0\) 上运行。在操作系统中，常采用自底向上法来铺设这些中间层。&lt;br&gt;
  自底向上的分层设计的基本原则是：每一步设计都建立在可靠的基础上。为此规定，每一层仅能使用其底层所提供的功能和服务，这样可使系统的调试和验证都变得更容易。例如，在调试第一层软件 \(A_1\) 时，由于它使用的是一个完全确定的物理机器（宿主系统）所提供的功能，在对 \(A_1\) 软件经过精心设计和几乎是穷尽无遗的测试后，可以认为 \(A_1\) 是正确的，而且它与其所有的高层软件 \(A_2,\cdots,A_n\) 无关；同样在调试第二层软件 \(A_2\) 时，它也只使用了软件 \(A_1\) 和物理机器所提供的功能，而与其高层软件 \(A_3,\cdots,A_n\) 无关，如此一层一层地自底向上增添软件层，每一层都实现若干功能，最后总能构成一个能满足需要的OS。在用这种方法构成操作系统时，已将一个操作系统分为若干个层次，每层又由若干个模块组成，各层之间只存在着单向的依赖关系，即高层仅依赖于紧邻它的低层。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 分层结构的优缺点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  分层结构的主要优点有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;易保证系统的正确性。自下而上的设计方式使所有设计中的决定都是有序的，或
者说是建立在较为可靠的基础上的，这样比较容易保证整个系统的正确性。&lt;/li&gt;
&lt;li&gt;易扩充和易维护性。在系统中增加、修改或替换一个层次中的模块或整个层次时，只要不改变相应层次间的接口，就不会影响其他层次，这必将使系统维护和扩充变得更加容易。分层结构的主要缺点是系统效率降低。由于层次结构是分层单向依赖的，必须在每层之间都建立层次间的通信机制，OS每执行一个功能，通常要自上而下地穿越多个层次，这无疑会增加系统的通信开销，从而导致系统效率的降低。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;客户服务器模式clientserver-model简介&#34;&gt;客户/服务器模式（Client/Server Model）简介
&lt;/h3&gt;&lt;p&gt;  &lt;strong&gt;客户/服务器(Client/Server)模式&lt;/strong&gt;可简称为&lt;strong&gt;C/S模式&lt;/strong&gt;。其在20世纪90年代已风靡全球，不论是LAN,还是企业网，以及Internet所提供的多种服务，都广泛采用了客户/服务器的模式。&lt;/p&gt;
&lt;h4 id=&#34;客户服务器模式的由来组成和类型&#34;&gt;客户/服务器模式的由来、组成和类型
&lt;/h4&gt;&lt;p&gt;  客户/服务器系统主要由三部分组成。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;客户机&lt;/strong&gt;：通常在一个LAN网络上连接有多台网络工作站（简称客户机），每台客户机都是一个自主计算机，具有一定的处理能力，客户进程在其上运行，平时它处理一些本 地业务，也可发送一个消息给服务器，以请求某项服务。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;服务器&lt;/strong&gt;：通常是一台规模较大的机器，在其上驻留有网络文件系统或数据库系统等，它应能为网上所有的用户提供一种或多种服务。平时它一直处于工作状态，被动地等待来自客户机的请求，一旦检查到有客户提出服务请求，便去完成客户的请求，并将结果送回客户，这样，工作站中的用户进程与服务器进程就形成了&lt;strong&gt;客户/服务器关系&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络系统&lt;/strong&gt;：是用于连接所有客户机和服务器，实现它们之间通信和网络资源共享的系统。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;客户服务器之间的交互&#34;&gt;客户/服务器之间的交互
&lt;/h4&gt;&lt;p&gt;  在采用客户/服务器的系统中，通常是客户机和服务器共同完成对应用（程序）的处理。这时，在客户机和服务器之间就需要进行交互，即必须利用消息机制在这两者之间进行多次通信。一次完整的交互过程可分成以下四步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;客户发送请求消息。当客户机上的用户要请求服务器进行应用处理时，应输入相应的命令和有关参数。由客户机上的发送进程先把这些信息装配成请求消息，然后把它发往服务器；客户机上的接收进程则等待接收从服务器发回来的响应消息。&lt;/li&gt;
&lt;li&gt;服务器接收消息。服务器中的接收进程平时处于等待状态，一旦有客户机发来请
求，接收进程就被激活，根据请求信息的内容，将之提供给服务器上的相应软件进行处理。&lt;/li&gt;
&lt;li&gt;服务器回送消息。服务器的软件根据请求进行处理，在完成指定的处理后，把处
理结果装配成一个响应消息，由服务器中的发送进程将之发往客户机。&lt;/li&gt;
&lt;li&gt;客户机接收消息。客户机中的接收进程把收到的响应消息转交给客户机软件，再
由后者做出适当处理后提交给发送该请求的客户。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;客户服务器模式之间的优点&#34;&gt;客户/服务器模式之间的优点
&lt;/h4&gt;&lt;p&gt;  C/S模式之所以能成为在分布式系统和网络环境下软件的一种主要工作模式，是由于该模式具有传统集中模式所无法比拟的一系列优点。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;数据的分布处理和存储。由于客户机具有相当强的处理和存储能力，可进行本地处理和数据的分布存储，从而摆脱了由于把一切数据都存放在主机中而造成的既不可靠又容易产生瓶颈现象的困难局面。&lt;/li&gt;
&lt;li&gt;便于集中管理。尽管C/S模式具有分布处理功能，但公司(单位)中的有关全局的重
要信息、机密资料、重要设备以及网络管理等，仍可采取集中管理方式，这样可较好地保障系统的“可靠”和&amp;quot;安全”。&lt;/li&gt;
&lt;li&gt;灵活性和可扩充性。C/S模式非常灵活，极易扩充。理论上，客户机和服务器的数
量不受限制，其灵活性还表现在可以配置多种类型的客户机和服务器上。&lt;/li&gt;
&lt;li&gt;易于改编应用软件。在客户/服务器模式中，对于客户机程序的修改和增删，比传
统集中模式要容易得多，必要时也允许由客户进行修改。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;  基本客户/服务器模式的不足之处是存在着不可靠性和瓶颈问题。在系统仅有一个服务器时，一旦服务器故障，将导致整个网络瘫痪。当服务器在重负荷下工作时，会因忙不过来而显著地延长对用户请求的响应时间。如果在网络中配置多个服务器，并采取相应的安全措施，则这种不足可加以改善。&lt;/p&gt;
&lt;h3 id=&#34;面向对象的程序设计object-orientated-programming技术简介&#34;&gt;面向对象的程序设计（Object-Orientated Programming）技术简介
&lt;/h3&gt;&lt;h4 id=&#34;面向对象技术的基本概念&#34;&gt;面向对象技术的基本概念
&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;面向对象技术&lt;/strong&gt;是20世纪80年代初提出并很快流行起来的。该技术是基于&amp;quot;抽象&amp;quot;和&amp;quot;隐蔽”原则来控制大型软件的复杂度的。所谓&lt;strong&gt;对象&lt;/strong&gt;，是指在现实世界中具有相同属性、服从相同规则的一系列事物（事物可以是一个物理实体、一个概念或一个软件模块等）的抽象，而把其中的具体事物称为对象的实例。如果在OS中的各类实体如进程、线程、消息、存储器和文件等都使用了对象这一概念，相应地，便有了进程对象、线程对象、消息对象、存储器对象和文件对象等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 对象&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在面向对象的技术中，是利用被封装的数据结构（变量）和一组对它进行操作的过程（方法）来表示系统中的某个对象的，如&lt;a class=&#34;link&#34; href=&#34;#20241014132525CST&#34;&gt;图8&lt;/a&gt;所示。对象中的变量（数据）也称为属性，它可以是单个标量或一张表。面向对象中的方法是用于执行某种功能的过程，它可以改变对象的状态，更新对象中的某些数据值或作用于对象所要访问的外部资源。如果把一个文件作为一个对象&lt;a class=&#34;link&#34; href=&#34;#20241014132606CST&#34;&gt;图9&lt;/a&gt;,该对象的变量便是文件类型、文件大小、文件的创建者等。对象中的方法包含对文件的操作，如创建文件、打开文件、读文件、写文件、关闭文件等。&lt;/p&gt;
&lt;span id=&#34;20241014132525CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 156.6&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1 {
        fill: none;
        stroke: #000;
        stroke-miterlimit: 10;
      }

      .cls-2 {
        font-family: NotoSerifSC-Light, &#39;Noto Serif SC&#39;;
        font-size: 18px;
        font-weight: 300;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34;&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;366.1&#34; y=&#34;6.7&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(395.9 31.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;数据结构&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;366.1&#34; y=&#34;42.7&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(406.6 67.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;过程 1&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;366.1&#34; y=&#34;78.7&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(406.6 103.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;过程 2&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;366.1&#34; y=&#34;114.7&#34; width=&#34;131.4&#34; height=&#34;36&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(406.6 139.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;过程 3&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图8&amp;emsp;一个对象的示意图&lt;/p&gt;
&lt;p&gt;  对象中的变量（数据）对外是隐蔽的，因而外界不能对它直接进行访问，必须通过该对象中的一组方法（操作函数）对它进行访问。例如要想对&lt;a class=&#34;link&#34; href=&#34;#20241014132606CST&#34;&gt;图9&lt;/a&gt;所示的文件A执行打开操作，必须用该对象中的打开过程去打开它。同样地，对象中的一组方法的实现细节也是隐蔽的，因此对象中的变量可以得到很好的保护，而不会允许未经受权者使用和对它进行不正确的操作。&lt;/p&gt;
&lt;span id=&#34;20241014132606CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 246.1&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1 {
        stroke-miterlimit: 10;
      }

      .cls-1, .cls-2 {
        fill: none;
        stroke: #000;
      }

      .cls-3 {
        font-family: NotoSerifSC-Light, &#39;Noto Serif SC&#39;;
        font-size: 18px;
        font-weight: 300;
      }

      .cls-2 {
        stroke-linejoin: round;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34;&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;147.8&#34; y=&#34;124.9&#34; width=&#34;105.9&#34; height=&#34;114&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(182.8 150.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;类名&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;173.9&#34; y1=&#34;162.5&#34; x2=&#34;227.7&#34; y2=&#34;162.5&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(182.8 188.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;属性&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(182.8 226.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;操作&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;173.9&#34; y1=&#34;200.7&#34; x2=&#34;227.7&#34; y2=&#34;200.7&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(191.8 114.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;类&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-2&#34; x=&#34;277.7&#34; y=&#34;124.9&#34; width=&#34;139&#34; height=&#34;114&#34; rx=&#34;20&#34; ry=&#34;20&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(294.3 150.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(类名)对象名&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;320.3&#34; y1=&#34;162.5&#34; x2=&#34;374.1&#34; y2=&#34;162.5&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(320.1 188.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;属性值&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(329.2 226.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;操作&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;320.3&#34; y1=&#34;200.7&#34; x2=&#34;374.1&#34; y2=&#34;200.7&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(301.9 114.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;类的实例&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-2&#34; x=&#34;462&#34; y=&#34;5.7&#34; width=&#34;93&#34; height=&#34;233.2&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(490.1 31)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;文件&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;481.5&#34; y1=&#34;40.6&#34; x2=&#34;535.4&#34; y2=&#34;40.6&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(490.1 62.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;类型&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(483.6 149.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;打开()&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;481.5&#34; y1=&#34;126.2&#34; x2=&#34;535.4&#34; y2=&#34;126.2&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(490.4 89.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;大小&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(481.4 116.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;创建者&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(492.7 174.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;读()&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(492.7 200.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;写()&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(483.6 225.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;关闭()&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-2&#34; x=&#34;585&#34; y=&#34;5.7&#34; width=&#34;130.9&#34; height=&#34;233.2&#34; rx=&#34;20&#34; ry=&#34;20&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(594.4 31)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;（文件）文件&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(632.1 62.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;图表&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(625.6 149.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;打开()&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;607.7&#34; y1=&#34;126.2&#34; x2=&#34;693.2&#34; y2=&#34;126.2&#34;/&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(634.2 89.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;20K&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(626.1 116.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;X用户&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(634.6 174.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;读()&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(634.6 200.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;写()&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-3&#34; transform=&#34;translate(625.6 225.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;关闭()&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;607.7&#34; y1=&#34;40.6&#34; x2=&#34;693.2&#34; y2=&#34;40.6&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图9&amp;emsp;类和对象的关系&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 对象类&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在实践中，有许多对象可能表示的是同一类事物，每个对象具有自己的变量集合，而它们所具有的方法是相同的。如果为每一个相似的对象都定义一组变量和方法，显然是低效的，由此产生了“&lt;strong&gt;对象类&lt;/strong&gt;”的概念，利用&amp;quot;对象类”来定义一组大体相似的对象。一个类同样定义了一组变量和针对该变量的一组方法，用它们来描述一组对象的共同属性和行为。类是在对象上的抽象，对象则是类的实例。对象类中所定义的变量在实例中均有具体的值。&lt;br&gt;
  例如，我们将文件设计成一个类，类的变量同样是文件类型、文件大小和创建者等。类中的方法是文件的创建、打开、读写、关闭等。&lt;a class=&#34;link&#34; href=&#34;#20241014132606CST&#34;&gt;图9&lt;/a&gt;示出了一个文件类，在类的变量中没有具体数值，一旦被赋予了具体数值就成了文件A对象。对象类的概念非常有用，因为它极大地提高了创建多个相似对象的效率。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 继承&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在面向对象的技术中，可以根据已有类来定义一个新的类，新类被称为子类（B）,原来的类被称为父类（A）,见&lt;a class=&#34;link&#34; href=&#34;#20241014153331CST&#34;&gt;图10&lt;/a&gt;所示。&lt;strong&gt;继承&lt;/strong&gt;是父类和子类之间共享变量和方法的机制，该机制规定子类自动继承父类中定义的变量和方法，并允许子类再增加新的内容。继承特性可使定义子类变得更容易。一个父类可以定义多个子类，它们分别是父类的某种特例，父类描述了这些子类的公共变量和方法。类似地，这些子类又可以定义自己的子类，通过此途经可以生成一个继承的层次。另外，也允许一个子类有两个父类或多个父类，它可以从多个父类获得继承，此时称为&amp;quot;多重继承”。&lt;/p&gt;
&lt;span id=&#34;20241014153331CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 181.7&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1 {
        fill: none;
        stroke: #000;
        stroke-miterlimit: 10;
      }

      .cls-2 {
        font-family: NotoSerifSC-Light, &#39;Noto Serif SC&#39;;
        font-size: 18px;
        font-weight: 300;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34;&gt;
      &lt;g&gt;
        &lt;ellipse class=&#34;cls-1&#34; cx=&#34;414.5&#34; cy=&#34;28&#34; rx=&#34;105.5&#34; ry=&#34;23.2&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(378.5 115)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;继承部分&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(272.3 34.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;A&lt;/tspan&gt;&lt;/text&gt;
        &lt;ellipse class=&#34;cls-1&#34; cx=&#34;414.5&#34; cy=&#34;129.5&#34; rx=&#34;105.5&#34; ry=&#34;47.1&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;309&#34; y1=&#34;129.5&#34; x2=&#34;520&#34; y2=&#34;129.5&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(378.5 159.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;增加部分&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(272.3 134.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;B&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(524.1 75.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;从A继承&lt;/tspan&gt;&lt;/text&gt;
        &lt;path d=&#34;M414.5,51.3&#34;/&gt;
        &lt;g&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;414.5&#34; y1=&#34;82.4&#34; x2=&#34;414.5&#34; y2=&#34;57.2&#34;/&gt;
          &lt;polygon points=&#34;418.2 60 414.5 58.5 410.8 60 414.5 51.3 418.2 60&#34;/&gt;
        &lt;/g&gt;
      &lt;/g&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图10&amp;emsp;类和继承的关系&lt;/p&gt;
&lt;h4 id=&#34;面向对象技术的优点&#34;&gt;面向对象技术的优点
&lt;/h4&gt;&lt;p&gt;  在操作系统设计时，将计算机中的实体作为对象来处理，可带来如下好处:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过“重用”提高产品质量和生产率。在面向对象技术中可通过“重用”以前项目中经过精心测试的对象或“重用”由其他人编写、测试和维护的对象类来构建新的系统，这不仅可大大降低开发成本，而且能获得更好的系统质量。&lt;/li&gt;
&lt;li&gt;使系统具有更好的易修改性和易扩展性。通过封装，可隐蔽对象中的变量和方法，因而当改变对象中的变量和方法时，不会影响到其它部分，从而可方便地修改老的对象类。另外，继承是面向对象技术的重要特性，在创建一个新对象类时，通过利用继承特性可显著减少开发的时空开销，使系统具有更好的易扩展性和灵活性。&lt;/li&gt;
&lt;li&gt;更易于保证系统的&amp;quot;正确性”和&amp;quot;可靠性”。对象是构成操作系统的基本单元，由于可以独立地对它进行测试，易于保证每个对象的正确性和可靠性，因此也就比较容易保证整个系统的正确性和可靠性。此外，封装对对象类中的信息进行了隐蔽，这样又可有效地防止未经授权者的访问和用户不正确的使用，有助于构建更为安全的系统。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;微内核操作系统&#34;&gt;微内核操作系统
&lt;/h3&gt;&lt;p&gt;  &lt;strong&gt;微内核（MicroKernel）操作系统&lt;/strong&gt;结构是20世纪80年代后期发展起来的。由于它能有效地支持多处理机运行，故非常适用于分布式系统环境，当前比较流行的、能支持多处理机运行的OS,几乎全部都采用了微内核结构，如CarngieMellon大学研制的MachOS,便属于微内核结构OS；又如当前广泛使用的Windows2000/XP操作系统，也采用了微内核结构。&lt;/p&gt;
&lt;h4 id=&#34;微内核操作系统的基本概念&#34;&gt;微内核操作系统的基本概念
&lt;/h4&gt;&lt;p&gt;  为了提高操作系统的&amp;quot;正确性”、“灵活性”、&amp;ldquo;易维护性”和“可扩充性”，在进行现代操作系统结构设计时，即使在单计算机环境下，大多也采用基于客户/服务器模式的微内核结构，将操作系统划分为两大部分：微内核和多个服务器。至于什么是微内核操作系统结构,现在尚无一致公认的定义，但我们可以从下面四个方面对微内核结构的操作系统进行描述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 足够小的内核&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在微内核操作系统中，内核是指精心设计的、能实现现代OS最基本核心功能的小型内核，微内核并非是一个完整的OS,而只是将操作系统中最基本的部分放入微内核，通常包含有：①与硬件处理紧密相关的部分：②一些较基本的功能；③客户和服务器之间的通信。这些OS最基本的部分只是为构建通用OS提供一个重要基础，这样就可以确保把操作系统内核做得很小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 基于客户/服务器模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  由于客户/服务器模式具有非常多的优点，故在单机微内核操作系统中几乎无一例外地都采用客户/服务器模式，将操作系统中最基本的部分放入内核中，而把操作系统的绝大部分功能都放在微内核外面的一组服务器（进程）中实现，如用于提供对进程（线程）进行管理的进程（线程）服务器、提供虚拟存储器管理功能的虚拟存储器服务器、提供I/O设备管理的I/O设备管理服务器等，它们都是被作为进程来实现的，运行在用户态，客户与服务器之间是借助微内核提供的消息传递机制来实现信息交互的。&lt;a class=&#34;link&#34; href=&#34;#20241014160927CST&#34;&gt;图11&lt;/a&gt;示出了在单机环境下的客户/服务器模式。&lt;/p&gt;
&lt;span id=&#34;20241014160927CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 145.5&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1 {
        fill: none;
        stroke: #000;
        stroke-miterlimit: 10;
      }

      .cls-2 {
        font-family: NotoSerifSC-Light, &#39;Noto Serif SC&#39;;
        font-size: 18px;
        font-weight: 300;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34;&gt;
      &lt;g&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;205.2&#34; y=&#34;6.3&#34; width=&#34;453.2&#34; height=&#34;131.9&#34;/&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(219.8 29.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;客户&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6&#34;&gt;进程&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(283.6 29.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;客户&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6&#34;&gt;进程&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(347.4 29.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;进程&lt;/tspan&gt;&lt;tspan x=&#34;-9&#34; y=&#34;21.6&#34;&gt;服务器&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(411.2 29.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;终端&lt;/tspan&gt;&lt;tspan x=&#34;-9&#34; y=&#34;21.6&#34;&gt;服务器&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(484.2 40.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(538.7 29.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;文件&lt;/tspan&gt;&lt;tspan x=&#34;-9&#34; y=&#34;21.6&#34;&gt;服务器&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(593.5 29.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;存储器&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6&#34;&gt;服务器&lt;/tspan&gt;&lt;/text&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;267.6&#34; y1=&#34;6.6&#34; x2=&#34;267.6&#34; y2=&#34;62.8&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;331.7&#34; y1=&#34;6.6&#34; x2=&#34;331.7&#34; y2=&#34;62.8&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;395.9&#34; y1=&#34;6.6&#34; x2=&#34;395.9&#34; y2=&#34;62.8&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;460&#34; y1=&#34;6.6&#34; x2=&#34;460&#34; y2=&#34;62.8&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;524.1&#34; y1=&#34;6.6&#34; x2=&#34;524.1&#34; y2=&#34;62.8&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;588.3&#34; y1=&#34;6.6&#34; x2=&#34;588.3&#34; y2=&#34;62.8&#34;/&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;205.2&#34; y1=&#34;62.9&#34; x2=&#34;658.5&#34; y2=&#34;62.9&#34;/&gt;
        &lt;g&gt;
          &lt;polyline class=&#34;cls-1&#34; points=&#34;301.6 68.8 301.6 102.8 556.7 102.8 556.7 68.9&#34;/&gt;
          &lt;polygon points=&#34;297.9 71.6 301.6 70 305.3 71.6 301.6 62.8 297.9 71.6&#34;/&gt;
          &lt;polygon points=&#34;560.4 71.7 556.7 70.1 553 71.7 556.7 62.9 560.4 71.7&#34;/&gt;
        &lt;/g&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(413.8 123.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;核心&lt;/tspan&gt;&lt;/text&gt;
        &lt;g&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;283.6&#34; y1=&#34;62.9&#34; x2=&#34;283.6&#34; y2=&#34;96.9&#34;/&gt;
          &lt;polygon points=&#34;279.9 94.1 283.6 95.6 287.3 94.1 283.6 102.8 279.9 94.1&#34;/&gt;
        &lt;/g&gt;
        &lt;g&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;572.2&#34; y1=&#34;63.4&#34; x2=&#34;572.2&#34; y2=&#34;97.4&#34;/&gt;
          &lt;polygon points=&#34;568.5 94.6 572.2 96.1 575.9 94.6 572.2 103.3 568.5 94.6&#34;/&gt;
        &lt;/g&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(267.6 123.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;请求&lt;/tspan&gt;&lt;/text&gt;
        &lt;text class=&#34;cls-2&#34; transform=&#34;translate(552.3 123.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;回答&lt;/tspan&gt;&lt;/text&gt;
      &lt;/g&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(668.9 41.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;用户方式&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(671 109.7)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;核心方式&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图11&amp;emsp;在单机环境下的客户/服务器模式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 应用“机制与策略分离”原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在现在操作系统的结构设计中，经常利用“&lt;strong&gt;机制与策略分离&lt;/strong&gt;”的原理来构造OS结构。所谓机制，是指实现某一功能的具体执行机构。而策略，则是在机制的基础上借助于某些参数和算法来实现该功能的优化，或达到不同的功能目标。通常，机制处于一个系统的基层，而策略则处于系统的高层。在传统的OS中，将机制放在OS的内核的较低层，把策略放在内核的较高层次中。而在微内核操作系统中，通常将机制放在OS的微内核中。正因为如此，才有可能将内核做得很小。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 采用面向对象技术&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  操作系统是一个极其复杂的大型软件系统，我们不仅可以通过结构设计来分解操作系统的复杂度，还可以基于面向对象技术中的&amp;quot;抽象”和&amp;quot;隐蔽”原则控制系统的复杂性，再进一步利用&amp;quot;对象”、&amp;ldquo;封装”和“继承”等概念来确保操作系统的&amp;quot;正确性”、&amp;ldquo;可靠性&amp;rdquo;、“易修改性&amp;rdquo;、&amp;ldquo;易扩展性”等，并提高操作系统的设计速度。正因为面向对象技术能带来如此多的好处，故面向对象技术被广泛应用于现代操作系统的设计中。&lt;/p&gt;
&lt;h4 id=&#34;微内核的基本功能&#34;&gt;微内核的基本功能
&lt;/h4&gt;&lt;p&gt;  微内核应具有哪些功能，或者说哪些功能应放在微内核内，哪些应放在微内核外，目前尚无明确的规定。现在一般都采用“机制与策略分离”的原理，将机制部分以及与硬件紧密相关的部分放入微内核中。由此可知微内核通常具有如下几方面的功能：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 进程（线程）管理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  大多数的微内核OS,对于进程管理功能的实现，都采用“机制与策略分离”的原理，例如，为实现进程（线程）调度功能，须在进程管理中设置一个或多个进程（线程）优先级队列;能将指定优先级进程（线程）从所在队列中取出，并将其投入执行。由于这一部分属于调度功能的机制部分，应将它放入微内核中。而对于用户（进程）如何进行分类，以及其优先级的确认方式或原则，则都是属于策略问题。可将它们放入微内核外的进程（线程）管理服务器中。由于进程（线程）之间的通信功能是微内核OS最基本的功能，被频繁使用，因此几乎所有的微内核OS都是将进程（线程）之间的通信功能放入微内核中。此外，还将进程的切换、线程的调度，以及多处理机之间的同步等功能也放入微内核中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 低级存储器管理。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  通常在微内核中，只配置最基本的低级存储器管理机制，如用于实现将用户空间的逻辑地址变换为内存空间的物理地址的页表机制和地址变换机制，这一部分是依赖于硬件的，因此放入微内核。而实现虚拟存储器管理的策略，则包含应采取何种页面置换算法、采用何种内存分配与回收的策略等，应将这部分放在微内核外的存储器管理服务器中去实现。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 中断和陷入处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  大多数微内核操作系统都是将与硬件紧密相关的一小部分放入微内核中处理，此时微内核的主要功能是捕获所发生的中断和陷入事件，并进行相应的前期处理，如进行中断现场保护，识别中断和陷入的类型，然后将有关事件的信息转换成消息后，把它发送给相关的服务器。由服务器根据中断或陷入的类型调用相应的处理程序来进行后期处理。在微内核OS中是将进程管理、存储器管理以及I/O管理这些功能-分为二，属于机制的很小一部分放入微内核中，另外绝大部分放在微内核外的各种服务器中来实现。事实上，其中大多数服务器都要比微内核大。这进一步说明了为什么能在采用客户/服务器模式后，还能把微内核做得很小的原因。&lt;/p&gt;
&lt;h4 id=&#34;微内核操作系统的优点&#34;&gt;微内核操作系统的优点
&lt;/h4&gt;&lt;p&gt;  由于微内核OS结构是建立在模块化、层次化结构的基础上的，并采用了客户/服务器模式和面向对象的程序设计技术，因此，微内核结构的操作系统是集各种技术优点之大成，因而使之具有如下优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;提高了系统的可扩展性。由于微内核OS的许多功能是由相对独立的服务器软件来实现的，当开发了新的硬件和软件时，微内核OS只需在相应的服务器中增加新的功能，
或再增加一个专门的服务器。与此同时，也必然改善系统的灵活性，不仅可在操作系统中增加新的功能,还可修改原有的功能，以及删除已过时的老功能，以形成一个更为精干的有效的操作系统。&lt;/li&gt;
&lt;li&gt;增强了系统的可靠性。这一方面是由于微内核是通过精心设计和严格测试的，容易保证其正确性，另一方面，它提供了规范而精简的应用程序接口（API）,为微内核外部的
程序编制高质量的代码创造了条件。此外，由于所有服务器都是运行在用户态，服务器与服务器之间采用的是消息传递通信机制，因此，当某个服务器出现错误时，不会影响内核，也不会影响其它服务器。&lt;/li&gt;
&lt;li&gt;可移植性强。随着硬件的快速发展，出现了各种各样的硬件平台，作为一个好的
操作系统，必须具备可移植性，使其能较容易地运行在不同的计算机硬件平台上。在微内
核结构的操作系统中，所有与特定CPU和I/O设备硬件有关的代码，均放在内核和内核下
面的硬件隐藏层中，而操作系统其它绝大部分——各种服务器，均与硬件平台无关，因而，
把操作系统移植到另一个计算机硬件平台上所需作的修改是比较小的。&lt;/li&gt;
&lt;li&gt;提供了对分布式系统的支持。由于在微内核0S中，客户和服务器之间、服务器和服务器之间的通信采用消息传递通信机制，致使微内核OS能很好地支持分布式系统和网络系统。事实上，只要在分布式系统中赋予所有进程和服务器唯一的标识符，在微内核中再配置一张系统映射表（即进程和服务器的标识符与它们所驻留的机器之间的对应表），在进行客户与服务器通信时，只需在所发送的消息中标上发送进程和接收进程的标识符，微内核便可利用系统映射表将消息发往目标，而无论目标是驻留在哪台机器上。&lt;/li&gt;
&lt;li&gt;融入了面向对象技术。在设计微内核OS时采用了面向对象的技术，其中的“封装”，&amp;ldquo;继承”，&amp;ldquo;对象类”和“多态性&amp;rdquo;，以及在对象之间采用消息传递机制等，都十分有利于提高系统的正确性、可靠性、易修改性、易扩展性等，而且还能显著地减少开发系统所付出的开销。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;微内核操作系统存在的问题&#34;&gt;微内核操作系统存在的问题
&lt;/h4&gt;&lt;p&gt;  应当指出，在微内核操作系统中，由于采用了非常小的内核，客户/服务器模式和消息传递机制虽给微内核操作系统带来了许多优点，但由此也使微内核OS存在着潜在缺点，其中最主要的是，较之早期的操作系统，微内核操作系统的运行效率有所降低。&lt;br&gt;
  效率降低最主要的原因是，在完成一次客户对操作系统提出的服务请求时，需要利用消息实现多次交互和进行用户/内核模式与上下文的多次切换。然而，在早期的OS中，用户进程在请求取得OS服务时，一般只需进行两次上下文的切换：一次是在执行系统调用后由用户态转向系统态时：另一次是在系统完成用户请求的服务后，由系统态返回用户态时。&lt;br&gt;
  在微内核OS中，由于客户和服务器、服务器和服务器之间的通信都需通过微内核，致使同样的服务请求至少需要进行四次上下文切换。第一次是发生在客户发送请求消息给内核，以请求取得某服务器特定的服务时；第二次是发生在由内核把客户的请求消息发往服务器时；第三次是当服务器完成客户请求后，把响应消息发送到内核时；第四次是在内核将响应消息发送给客户时。&lt;br&gt;
  实际情况是往往还会引起更多的上下文切换。例如，当某个服务器自身尚无能力完成客户请求而需要其它服务器的帮助时，如图1-12所示，其中的文件服务器还需要磁盘服务器的帮助，这时就需要进行8次上下文的切换。&lt;/p&gt;
&lt;span id=&#34;20241014164813CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 445&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1, .cls-2, .cls-3 {
        fill: none;
        stroke: #000;
        stroke-miterlimit: 10;
      }

      .cls-2 {
        stroke-dasharray: 11 5;
      }

      .cls-4 {
        font-family: NotoSerifSC-Light, &#39;Noto Serif SC&#39;;
        font-size: 18px;
        font-weight: 300;
        isolation: isolate;
      }

      .cls-3 {
        stroke-dasharray: 11.2 5.1;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_图层_1&#34; data-name=&#34;图层_1&#34;&gt;
      &lt;g&gt;
        &lt;text class=&#34;cls-4&#34; transform=&#34;translate(261.1 52.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;客户机应用&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;223.1&#34; y=&#34;13&#34; width=&#34;166.3&#34; height=&#34;64&#34;/&gt;
        &lt;text class=&#34;cls-4&#34; transform=&#34;translate(557.6 52.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;OS内核&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;474.3&#34; y=&#34;13&#34; width=&#34;166.3&#34; height=&#34;64&#34;/&gt;
        &lt;g&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;373.7&#34; y1=&#34;26.8&#34; x2=&#34;379.2&#34; y2=&#34;26.8&#34;/&gt;
          &lt;line class=&#34;cls-3&#34; x1=&#34;384.2&#34; y1=&#34;26.8&#34; x2=&#34;479&#34; y2=&#34;26.8&#34;/&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;481.6&#34; y1=&#34;26.8&#34; x2=&#34;487.1&#34; y2=&#34;26.8&#34;/&gt;
          &lt;polygon points=&#34;484.3 30.5 485.8 26.8 484.3 23.1 493 26.8 484.3 30.5&#34;/&gt;
        &lt;/g&gt;
        &lt;g&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;493&#34; y1=&#34;61.2&#34; x2=&#34;487.5&#34; y2=&#34;61.2&#34;/&gt;
          &lt;line class=&#34;cls-3&#34; x1=&#34;482.5&#34; y1=&#34;61.2&#34; x2=&#34;387.7&#34; y2=&#34;61.2&#34;/&gt;
          &lt;line class=&#34;cls-1&#34; x1=&#34;385.1&#34; y1=&#34;61.2&#34; x2=&#34;379.6&#34; y2=&#34;61.2&#34;/&gt;
          &lt;polygon points=&#34;382.5 57.5 380.9 61.2 382.5 64.9 373.7 61.2 382.5 57.5&#34;/&gt;
        &lt;/g&gt;
        &lt;g&gt;
          &lt;path class=&#34;cls-1&#34; d=&#34;M493,26.8c9.5,0,17.2,7.7,17.2,17.2s-4.7,13.8-11.3,16.2&#34;/&gt;
          &lt;polygon points=&#34;500.9 55.8 500.1 59.8 502.4 63.1 493 61.2 500.9 55.8&#34;/&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;text class=&#34;cls-4&#34; transform=&#34;translate(266.3 124.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(a)在整体式内核文件操作中的上下文切换&lt;/tspan&gt;&lt;/text&gt;
      &lt;g&gt;
        &lt;text class=&#34;cls-4&#34; transform=&#34;translate(141.3 217.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;客户机应用&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;103.2&#34; y=&#34;178.4&#34; width=&#34;166.3&#34; height=&#34;64&#34;/&gt;
        &lt;text class=&#34;cls-4&#34; transform=&#34;translate(401.3 218)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;文件服务器&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;363.3&#34; y=&#34;178.8&#34; width=&#34;166.3&#34; height=&#34;64&#34;/&gt;
        &lt;text class=&#34;cls-4&#34; transform=&#34;translate(613.2 218.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;磁盘设备驱动器&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;594.2&#34; y=&#34;179.2&#34; width=&#34;166.3&#34; height=&#34;64&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;text class=&#34;cls-4&#34; transform=&#34;translate(404.1 370.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;微内核&lt;/tspan&gt;&lt;/text&gt;
        &lt;rect class=&#34;cls-1&#34; x=&#34;137.3&#34; y=&#34;294.1&#34; width=&#34;589&#34; height=&#34;87.8&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;polyline class=&#34;cls-1&#34; points=&#34;378.6 230.9 378.6 190.8 516.3 190.8 516.3 224.9&#34;/&gt;
        &lt;polygon points=&#34;512.6 222.1 516.3 223.6 520 222.1 516.3 230.9 512.6 222.1&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;378.6&#34; y1=&#34;314&#34; x2=&#34;378.6&#34; y2=&#34;236.8&#34;/&gt;
        &lt;polygon points=&#34;382.3 239.6 378.6 238.1 374.9 239.6 378.6 230.9 382.3 239.6&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;251.7&#34; y1=&#34;314&#34; x2=&#34;372.6&#34; y2=&#34;314&#34;/&gt;
        &lt;polygon points=&#34;369.8 317.7 371.4 314 369.8 310.3 378.6 314 369.8 317.7&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;251.7&#34; y1=&#34;230.9&#34; x2=&#34;251.7&#34; y2=&#34;308.1&#34;/&gt;
        &lt;polygon points=&#34;248 305.2 251.7 306.8 255.4 305.2 251.7 314 248 305.2&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;643.1&#34; y1=&#34;314&#34; x2=&#34;643.1&#34; y2=&#34;236.8&#34;/&gt;
        &lt;polygon points=&#34;646.8 239.6 643.1 238.1 639.4 239.6 643.1 230.9 646.8 239.6&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;516.3&#34; y1=&#34;314&#34; x2=&#34;637.1&#34; y2=&#34;314&#34;/&gt;
        &lt;polygon points=&#34;634.3 317.7 635.9 314 634.3 310.3 643.1 314 634.3 317.7&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;516.3&#34; y1=&#34;230.9&#34; x2=&#34;516.3&#34; y2=&#34;308.1&#34;/&gt;
        &lt;polygon points=&#34;512.6 305.2 516.3 306.8 520 305.2 516.3 314 512.6 305.2&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;689&#34; y1=&#34;338&#34; x2=&#34;496.8&#34; y2=&#34;338&#34;/&gt;
        &lt;polygon points=&#34;499.7 334.3 498.1 338 499.7 341.7 490.9 338 499.7 334.3&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;689&#34; y1=&#34;231.1&#34; x2=&#34;689&#34; y2=&#34;332&#34;/&gt;
        &lt;polygon points=&#34;685.3 329.2 689 330.8 692.7 329.2 689 338 685.3 329.2&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;643.1&#34; y1=&#34;231.1&#34; x2=&#34;683&#34; y2=&#34;231.1&#34;/&gt;
        &lt;polygon points=&#34;680.2 234.8 681.8 231.1 680.2 227.4 689 231.1 680.2 234.8&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;490.9&#34; y1=&#34;338&#34; x2=&#34;490.9&#34; y2=&#34;236.8&#34;/&gt;
        &lt;polygon points=&#34;494.6 239.6 490.9 238.1 487.2 239.6 490.9 230.9 494.6 239.6&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;490.9&#34; y1=&#34;230.9&#34; x2=&#34;407.3&#34; y2=&#34;230.9&#34;/&gt;
        &lt;polygon points=&#34;410.1 227.2 408.5 230.9 410.1 234.6 401.3 230.9 410.1 227.2&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;401.3&#34; y1=&#34;230.1&#34; x2=&#34;401.3&#34; y2=&#34;332&#34;/&gt;
        &lt;polygon points=&#34;397.6 329.2 401.3 330.8 405 329.2 401.3 338 397.6 329.2&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-1&#34; x1=&#34;401.3&#34; y1=&#34;338&#34; x2=&#34;222.4&#34; y2=&#34;338&#34;/&gt;
        &lt;polygon points=&#34;225.2 334.3 223.6 338 225.2 341.7 216.4 338 225.2 334.3&#34;/&gt;
      &lt;/g&gt;
      &lt;g&gt;
        &lt;line class=&#34;cls-2&#34; x1=&#34;216.4&#34; y1=&#34;338&#34; x2=&#34;216.4&#34; y2=&#34;236.8&#34;/&gt;
        &lt;polygon points=&#34;220.1 239.6 216.4 238.1 212.7 239.6 216.4 230.9 220.1 239.6&#34;/&gt;
      &lt;/g&gt;
      &lt;text class=&#34;cls-4&#34; transform=&#34;translate(274.2 435.1)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(b)在微内核中等价操作中的上下文切换&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图12&amp;emsp;在传统OS和微内核OS中的上下文切换&lt;/p&gt;
&lt;p&gt;  为了改善运行效率，可以重新把一些常用的操作系统基本功能由服务器移入微内核中。这样可使客户对常用操作系统功能的请求所发生的用户/内核模式和上下文的切换的次数由4次或8次降为2次。但这又会使微内核的容量明显地增大，在小型接口定义和适应性方面的优点也有所下降，并提高了微内核的设计代价。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;&lt;div style=&#34;text-align: center;&#34;&gt;
我想念她。罪有应得。
&lt;/div&gt;
&lt;/p&gt;&lt;span class=&#34;cite&#34;&gt;&lt;span&gt;― &lt;/span&gt;&lt;span&gt;邱妙津, &lt;/span&gt;&lt;cite&gt;《鳄鱼手记》&lt;/cite&gt;&lt;/span&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
