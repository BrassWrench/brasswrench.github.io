<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>自然语言处理 on 黄铜扳手的图书馆</title>
        <link>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/</link>
        <description>Recent content in 自然语言处理 on 黄铜扳手的图书馆</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>黄铜扳手</copyright>
        <lastBuildDate>Sun, 22 Dec 2024 21:18:52 +0800</lastBuildDate><atom:link href="https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>自然语言处理（三）：基础工具集与常用数据集</title>
        <link>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/base_toolsets_and_common_datasets/</link>
        <pubDate>Wed, 18 Dec 2024 17:43:45 +0800</pubDate>
        
        <guid>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/base_toolsets_and_common_datasets/</guid>
        <description>&lt;img src="https://www.brasswrench.com/true" alt="Featured image of post 自然语言处理（三）：基础工具集与常用数据集" /&gt;







&lt;iframe
  class=&#34;netease-cloud-music-frame&#34;
  title=&#34;song&amp;#39;s 1432174098&#34;
  frameborder=&#34;no&#34;
  border=&#34;0&#34;
  marginwidth=&#34;0&#34;
  marginheight=&#34;0&#34;
  width=&#34;100%&#34;
  height=&#34;86&#34;
  loading=&#34;lazy&#34;
  src=&#34;https://music.163.com/outchain/player?type=2&amp;amp;id=1432174098&amp;amp;auto=0&amp;amp;height=66&#34;&gt;
&lt;/iframe&gt;

&lt;h1 id=&#34;基础工具集与常用工具集&#34;&gt;基础工具集与常用工具集
&lt;/h1&gt;&lt;p&gt;  本篇首先介绍两种常用的自然语言处理基础工具集，即英文处理工具集NLTK和中文工具集LTP。其次，介绍本书所使用的深度学习框架(PyTorch)。最后，介绍常用的大规模预训练数据集以及更多自然语言处理数据集的获取方法。通过本章的学习，读者将对基础自然语言处理技术、深度学习工具以及大规模数据集有一个更直观的感受，并为后续章节的学习做好准备。&lt;/p&gt;
&lt;h2 id=&#34;nltk工具集&#34;&gt;NLTK工具集
&lt;/h2&gt;&lt;p&gt;  NLTK(Natural Language Toolkit)是一个Python模块块，提供了多种语料库(Corpora)和词典(Lexicon)资源，如WordNet等，以及一系列基本的自然语言处理工具集，包括：分句、标记解析(Tokenization)、词干提取(Stemming)、词性标注(POS Tagging)和句法分析(Syntactic Parsing)等，是对英文文本数据进行处理的常用工具。&lt;br&gt;
  为了使用NLTK，需要对其进行安装，可以直接使用&lt;code&gt;pip&lt;/code&gt;包管理工具安装，具
体方法为，首先进入操作系统的控制台，然后执行以下命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install nltk
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  接下来简要介绍NLTK提供的常用语料库、词典资源及自然语言处理工具。&lt;/p&gt;
&lt;h3 id=&#34;常用语料库和词典资源&#34;&gt;常用语料库和词典资源
&lt;/h3&gt;&lt;p&gt;  为了使用NLTK提供的语料库和词典资源，首先需要进行下载。具体方法为， 进入Python的控制台（在操作系统控制台下，执行python命令），然后执行以下两行命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;nltk&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;download&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  此时会弹出一个对话框，允许用户选择所需下载的数据资源，可以简单地选
择“All”，然后单击“Download”。同时，还可以选择数据存储的目录。&lt;/p&gt;
&lt;h4 id=&#34;停用词&#34;&gt;停用词
&lt;/h4&gt;&lt;p&gt;  在进行自然语言处理时，有一些词对于表达语言的含义并不重要，如英文中 的冠词“a”“the”，介词“of”“to”等。因此，在对语言进行更深入的处理之前，可以将它们删除，从而加快处理的速度，减小模型的规模。这些词又被称为停用词(Stop words)。NLTK提供了多种语言的停用词词表，可以通过下面语句引入停用词词表。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;stopwords&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后，使用下面的语句查看一种语言的停用词词表（如英文）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stopwords&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;english&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[&amp;#39;i&amp;#39;, &amp;#39;me&amp;#39;, &amp;#39;my&amp;#39;, &amp;#39;myself&amp;#39;, &amp;#39;we&amp;#39;, &amp;#39;our&amp;#39;, &amp;#39;ours&amp;#39;, &amp;#39;ourselves&amp;#39;, &amp;#39;you&amp;#39;, &amp;#34;you&amp;#39;re&amp;#34;, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#34;you&amp;#39;ve&amp;#34;, &amp;#34;you&amp;#39;ll&amp;#34;, &amp;#34;you&amp;#39;d&amp;#34;, &amp;#39;your&amp;#39;, &amp;#39;yours&amp;#39;, &amp;#39;yourself&amp;#39;,&amp;#39;yourselves&amp;#39;, &amp;#39;he&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;him&amp;#39;, &amp;#39;his&amp;#39;, &amp;#39;himself&amp;#39;, &amp;#39;she&amp;#39;, &amp;#34;she&amp;#39;s&amp;#34;, &amp;#39;her&amp;#39;, &amp;#39;hers&amp;#39;, &amp;#39;herself&amp;#39;, &amp;#39;it&amp;#39;, &amp;#34;it&amp;#39;s&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;its&amp;#39;, &amp;#39;itself&amp;#39;, &amp;#39;they&amp;#39;, &amp;#39;them&amp;#39;, &amp;#39;their&amp;#39;, &amp;#39;theirs&amp;#39;, &amp;#39;themselves&amp;#39;, &amp;#39;what&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;which&amp;#39;, &amp;#39;who&amp;#39;, &amp;#39;whom&amp;#39;, &amp;#39;this&amp;#39;, &amp;#39;that&amp;#39;, &amp;#34;that&amp;#39;ll&amp;#34;, &amp;#39;these&amp;#39;, &amp;#39;those&amp;#39;, &amp;#39;am&amp;#39;, &amp;#39;is&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;are&amp;#39;, &amp;#39;was&amp;#39;, &amp;#39;were&amp;#39;, &amp;#39;be&amp;#39;, &amp;#39;been&amp;#39;, &amp;#39;being&amp;#39;, &amp;#39;have&amp;#39;, &amp;#39;has&amp;#39;, &amp;#39;had&amp;#39;, &amp;#39;having&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;do&amp;#39;, &amp;#39;does&amp;#39;, &amp;#39;did&amp;#39;, &amp;#39;doing&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;an&amp;#39;, &amp;#39;the&amp;#39;, &amp;#39;and&amp;#39;, &amp;#39;but&amp;#39;, &amp;#39;if&amp;#39;, &amp;#39;or&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;because&amp;#39;, &amp;#39;as&amp;#39;, &amp;#39;until&amp;#39;, &amp;#39;while&amp;#39;, &amp;#39;of&amp;#39;, &amp;#39;at&amp;#39;, &amp;#39;by&amp;#39;, &amp;#39;for&amp;#39;, &amp;#39;with&amp;#39;, &amp;#39;about&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;against&amp;#39;, &amp;#39;between&amp;#39;, &amp;#39;into&amp;#39;, &amp;#39;through&amp;#39;, &amp;#39;during&amp;#39;, &amp;#39;before&amp;#39;, &amp;#39;after&amp;#39;, &amp;#39;above&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;below&amp;#39;, &amp;#39;to&amp;#39;, &amp;#39;from&amp;#39;, &amp;#39;up&amp;#39;, &amp;#39;down&amp;#39;, &amp;#39;in&amp;#39;, &amp;#39;out&amp;#39;, &amp;#39;on&amp;#39;, &amp;#39;off&amp;#39;, &amp;#39;over&amp;#39;, &amp;#39;under&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;again&amp;#39;, &amp;#39;further&amp;#39;, &amp;#39;then&amp;#39;, &amp;#39;once&amp;#39;, &amp;#39;here&amp;#39;, &amp;#39;there&amp;#39;, &amp;#39;when&amp;#39;, &amp;#39;where&amp;#39;, &amp;#39;why&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;how&amp;#39;, &amp;#39;all&amp;#39;, &amp;#39;any&amp;#39;, &amp;#39;both&amp;#39;, &amp;#39;each&amp;#39;, &amp;#39;few&amp;#39;, &amp;#39;more&amp;#39;, &amp;#39;most&amp;#39;, &amp;#39;other&amp;#39;, &amp;#39;some&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;such&amp;#39;, &amp;#39;no&amp;#39;, &amp;#39;nor&amp;#39;, &amp;#39;not&amp;#39;, &amp;#39;only&amp;#39;, &amp;#39;own&amp;#39;, &amp;#39;same&amp;#39;, &amp;#39;so&amp;#39;, &amp;#39;than&amp;#39;, &amp;#39;too&amp;#39;, &amp;#39;very&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;s&amp;#39;, &amp;#39;t&amp;#39;, &amp;#39;can&amp;#39;, &amp;#39;will&amp;#39;, &amp;#39;just&amp;#39;, &amp;#39;don&amp;#39;, &amp;#34;don&amp;#39;t&amp;#34;, &amp;#39;should&amp;#39;, &amp;#34;should&amp;#39;ve&amp;#34;, &amp;#39;now&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;d&amp;#39;, &amp;#39;ll&amp;#39;, &amp;#39;m&amp;#39;, &amp;#39;o&amp;#39;, &amp;#39;re&amp;#39;, &amp;#39;ve&amp;#39;, &amp;#39;y&amp;#39;, &amp;#39;ain&amp;#39;, &amp;#39;aren&amp;#39;, &amp;#34;aren&amp;#39;t&amp;#34;, &amp;#39;couldn&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#34;couldn&amp;#39;t&amp;#34;, &amp;#39;didn&amp;#39;, &amp;#34;didn&amp;#39;t&amp;#34;, &amp;#39;doesn&amp;#39;, &amp;#34;doesn&amp;#39;t&amp;#34;, &amp;#39;hadn&amp;#39;, &amp;#34;hadn&amp;#39;t&amp;#34;, &amp;#39;hasn&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#34;hasn&amp;#39;t&amp;#34;, &amp;#39;haven&amp;#39;, &amp;#34;haven&amp;#39;t&amp;#34;, &amp;#39;isn&amp;#39;, &amp;#34;isn&amp;#39;t&amp;#34;, &amp;#39;ma&amp;#39;, &amp;#39;mightn&amp;#39;, &amp;#34;mightn&amp;#39;t&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;mustn&amp;#39;, &amp;#34;mustn&amp;#39;t&amp;#34;, &amp;#39;needn&amp;#39;, &amp;#34;needn&amp;#39;t&amp;#34;, &amp;#39;shan&amp;#39;, &amp;#34;shan&amp;#39;t&amp;#34;, &amp;#39;shouldn&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#34;shouldn&amp;#39;t&amp;#34;, &amp;#39;wasn&amp;#39;, &amp;#34;wasn&amp;#39;t&amp;#34;, &amp;#39;weren&amp;#39;, &amp;#34;weren&amp;#39;t&amp;#34;, &amp;#39;won&amp;#39;, &amp;#34;won&amp;#39;t&amp;#34;, &amp;#39;wouldn&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#34;wouldn&amp;#39;t&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;常用语料库&#34;&gt;常用语料库
&lt;/h4&gt;&lt;p&gt;  NLTK提供了多种语料库（文本数据集），如图书、电影评论和聊天记录等， 它们可以被分为两类，即未标注语料库（又称生语料库或生文本，Raw text）和人工标注语料库（Annotated corpus）。下面就其中的典型语料库加以简要介绍，关于全部语料库的详细信息，可以通过NLTK的网站了解。&lt;br&gt;
  (1)未标注语料库。可以使用两种方式访问之前下载的语料库，第一种是直接访问语料库的原始文本文件（目录为下载数据时选择的存储目录）；另一种是调用NLTK提供的相应功能。例如，通过以下方式，可以获得古腾堡（Gutenberg）语料库（目录为:nltk_data/corpora/gutenberg ）中简•奥斯汀（Jane Austen）所著的小说Emma原文。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gutenberg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gutenberg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;raw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;austen-emma.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  (2)人工标注语料库。人工标注的关于某项任务的结果。如在句子极性语料库（&lt;code&gt;sentence_polarity&lt;/code&gt;）中，包含了10662条来自电影领域的用户评论句子以及相应的极性信息（褒义或贬义）。通过以下命令，可以获得该语料库，其中，褒贬各5331句（经过了小写转换、简单的标记解析等预处理后）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentence_polarity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  &lt;code&gt;sentence_polarity&lt;/code&gt;提供了基本的数据访问方法，如&lt;code&gt;sentence_polarity.categories()&lt;/code&gt;返回褒贬类别列表，即&lt;code&gt;[&#39;neg&#39;, &#39;pos&#39;]&lt;/code&gt;; &lt;code&gt;sentence_polarity.words()&lt;/code&gt;返回语料库中全部单词的列表，如果调用时提供类别参数(&lt;code&gt;categories =&amp;quot;pos&amp;quot;或&amp;quot;neg&amp;quot;&lt;/code&gt;),则会返回相应类别的全部单词列表；&lt;code&gt;sentence_polarity.sents()&lt;/code&gt;返回语料库中全部句子的列表，调用时同样可以提供类别参数。可以使用以上方法的组合，构造出一个大列表，其中每个元素为一个句子的单词列表及其对应的褒贬类别构成的元组。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;category&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;category&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentence_polarity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;categories&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;polarity&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;categories&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;category&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;常用词典&#34;&gt;常用词典
&lt;/h4&gt;&lt;p&gt;  (1)&lt;strong&gt;WordNet&lt;/strong&gt;。WordNet是普林斯顿大学构建的英文语义词典(也称作辞典，Thesaurus)，其主要特色是定义了同义词集合(Synset)，每个同义词集合由具 有相同意义的词义组成。此外，WordNet为每一个同义词集合提供了简短的释义 (Gloss)，同时，不同同义词集合之间还具有一定的语义关系。下面演示WordNet的简单使用示例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordnet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;syns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordnet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;synsets&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;bank&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 返回“bank”的全部18个词义的synset&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;syns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回“bank”第1个词义的名称，其中“n”表示名词(Noun)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;bank.n.01
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;syns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回“bank”第一个词词义的定义，即“河岸”的定义&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;sloping land (especially the slope beside a body of water)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;syns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;definition&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回“bank”第2个词义的定义，即“银行”的定义&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;a financial institution that accepts deposits and channels the money into lending 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;activities
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;syns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;examples&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回“bank”第1个词义的使用示例&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[&amp;#39;they pulled the canoe up on the bank&amp;#39;, &amp;#39;he sat on the bank of the river and 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;watched the currents&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;syns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hypernyms&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#返回“bank”第1个词义的上位同义词集合&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[Synset(&amp;#39;slope.n.01&amp;#39;)]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dog&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordnet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;synset&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;dog.n.01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;wordnet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;synset&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;cat.n.01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dog&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;wup_similarity&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#计算两个同义词集合之间的Wu-Palmer相似度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;0.8571428571428571
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  (2)&lt;strong&gt;SentiWordNet&lt;/strong&gt;。SentiWordNet (Sentiment WordNet)是基于WordNet标注的词语（更准确地说是同义词集合）情感倾向性词典，它为WordNet中每个同义词集合人工标注了三个情感值，依次是褒义、贬义和中性。通过该词典，可以实现一个简单的情感分析系统。仍然通过一个例子演示SentiWordNet的使用方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentiwordnet&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentiwordnet&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;senti_synset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;good.a.01&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#词good在形容词(Adjective)下的第1号语义 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;lt;good.a.01: PosScore=0.75 NegScore=0.0&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;常用自然语言处理工具集&#34;&gt;常用自然语言处理工具集
&lt;/h3&gt;&lt;p&gt;  NLTK提供了多种常用的自然语言处理基础工具，如分句、标记解析和词性
标注等，下面简要介绍这些工具的使用方法。&lt;/p&gt;
&lt;h4 id=&#34;分句&#34;&gt;分句
&lt;/h4&gt;&lt;p&gt;  通常一个句子能够表达完整的语义信息，因此在进行更深入的自然语言处理之前，往往需要将较长的文档切分成若干句子，这一过程被称为分句。一般来讲，一个句子结尾具有明显的标志，如句号、问号和感叹号等，因此可以使用简单的规则进行分句。然而，往往存在大量的例外情况，如在英文中，句号除了可以作为句尾标志，还可以作为单词的一部分（如“Mr.”）。NLTK提供的分句功能可以较好地解决此问题。下面演示如何使用该功能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.corpus&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gutenberg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.tokenize&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sent_tokenize&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;gutenberg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;raw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;austen-emma.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sentences&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sent_tokenize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 对Emma小说全文进行分句&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 显示其中一个句子&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;Mr. Knightley loves to find fault with me, you know--in a joke--it is all a joke.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;标记解析&#34;&gt;标记解析
&lt;/h4&gt;&lt;p&gt;  一个句子是由若干标记(Token)按顺序构成的，其中标记既可以是一个词，
也可以是标点符号等，这些标记是自然语言处理最基本的输入单元。将句子分割为标记的过程叫作标记解析(Tokenization)。英文中的单词之间通常使用空格进行分割，不过标点符号通常和前面的单词连在一起，因此标记解析的一项主要工 作是将标点符号和前面的单词进行拆分。和分句一样，也无法使用简单的规则进 行标记解析，仍以符号为例，它既可作为句号，也可以作为标记的一部分，如不能简单地将“Mr.”分成两个标记。同样，NLTK提供了标记解析功能，也称作标记解析器(Tokenizer)。下面演示如何使用该功能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk.tokenize&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word_tokenize&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;word_tokenize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentences&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[&amp;#39;Mr.&amp;#39;, &amp;#39;Knightley&amp;#39;, &amp;#39;loves&amp;#39;, &amp;#39;to&amp;#39;, &amp;#39;find&amp;#39;, &amp;#39;fault&amp;#39;, &amp;#39;with&amp;#39;, &amp;#39;me&amp;#39;, &amp;#39;,&amp;#39;, &amp;#39;you&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;know&amp;#39;, &amp;#39;--&amp;#39;, &amp;#39;in&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;joke&amp;#39;, &amp;#39;--&amp;#39;, &amp;#39;it&amp;#39;, &amp;#39;is&amp;#39;, &amp;#39;all&amp;#39;, &amp;#39;a&amp;#39;, &amp;#39;joke&amp;#39;, &amp;#39;.&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;词性标注&#34;&gt;词性标注
&lt;/h4&gt;&lt;p&gt;  词性是词语所承担的语法功能类别，如名词、动词和形容词等，因此词性也
被称为词类。很多词语往往具有多种词性，如“fire”，即可以作名词(“火”)，也可
以作动词(“开火”)词性标注就是根据词语所处的上下文，确定其具体的词性。如在“They sat by the fire.”中，“fire”是名词，而在“They fire a gun.”中，“fire”就是动词。NLTK提供了词性标注器(POS Tagger)，下面演示其使用方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;nltk&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pos_tag&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos_tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word_tokenize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;They sat by the fire.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#对句子标记解析后再进行词性标注&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[(&amp;#39;They&amp;#39;, &amp;#39;PRP&amp;#39;), (&amp;#39;sat&amp;#39;, &amp;#39;VBP&amp;#39;), (&amp;#39;by&amp;#39;, &amp;#39;IN&amp;#39;), (&amp;#39;the&amp;#39;, &amp;#39;DT&amp;#39;), (&amp;#39;fire&amp;#39;, &amp;#39;NN&amp;#39;), 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;(&amp;#39;.&amp;#39;, &amp;#39;.&amp;#39;)]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos_tag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word_tokenize&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;They fire a gun.&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[(&amp;#39;They&amp;#39;, &amp;#39;PRP&amp;#39;), (&amp;#39;fire&amp;#39;, &amp;#39;VBP&amp;#39;), (&amp;#39;a&amp;#39;, &amp;#39;DT&amp;#39;), (&amp;#39;gun&amp;#39;, &amp;#39;NN&amp;#39;), (&amp;#39;.&amp;#39;, &amp;#39;.&amp;#39;)]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h4 id=&#34;其它工具&#34;&gt;其它工具
&lt;/h4&gt;&lt;p&gt;  除了以上介绍的分句、标记解析和词性标注，NLTK还提供了其他丰富的自 然语言处理工具，包括命名实体识别、组块分析(Chunking)和句法分析等。&lt;br&gt;
  另外，除了NLTK,还有很多其他优秀的自然语言处理基础工具集可供使用， 如斯坦福大学使用Java开发的CoreNLP、基于Python/Cython开发的spaCy等，它们的使用方法本书不再进行详细的介绍，感兴趣的读者可以自行查阅相关的参考资料。&lt;/p&gt;
&lt;h2 id=&#34;ltp工具集&#34;&gt;LTP工具集
&lt;/h2&gt;&lt;p&gt;  以上介绍的工具集主要用于英文的处理，而以中文为代表的汉藏语系与以英
语为代表的印欧语系不同，一个显著的区别在于词语之间不存在明显的分隔符，句子一般是由一串连续的字符构成的，因此在处理中文时，需要使用更有针对性的分析工具。&lt;br&gt;
  &lt;strong&gt;语言技术平台&lt;/strong&gt;（Language Technology Platform, LTP）是哈尔滨工业大学社会计算与信息检索研究中心（HIT-SCIR）历时多年研发的一整套高效、高精度的
中文自然语言处理开源基础技术平台。该平台集词法分析（分词、词性标注和命名实体识别）、句法分析（依存句法分析）和语义分析（语义角色标注和语义依存分析）等多项自然语言处理技术于一体。最新发布的LTP4.0版本使用Python语言编写，采用预训练模型以及多任务学习机制，能够以较小的模型获得非常高的分析精度。&lt;br&gt;
  LTP的安装也非常简单，可以直接使用pip包管理工具，具体方法为，首先进入操作系统的控制台，然后执行以下命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install ltp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  下面对LTP的使用方法进行简要的介绍。&lt;/p&gt;
&lt;h3 id=&#34;中文分词&#34;&gt;中文分词
&lt;/h3&gt;&lt;p&gt;  如上所述，由于中文词语之间没有空格进行分割，而自然语言处理中通常以
词为最小的处理单位，因此需要对中文进行分词处理。中文的分词与英文的标记解析功能类似，只是中文分词更强调识别句子中的词语信息，因此往往不被称为标记解析。另外，与标记解析相比，由于一个句子往往有多种可能的分词结果，因分词任务的难度更高，精度也更低。使用LTP进行分词非常容易，具体示例如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ltp&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LTP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ltp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LTP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ltp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pipeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;南京市长江大桥。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tasks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cws&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;return_dict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[[&amp;#39;南京市&amp;#39;, &amp;#39;长江&amp;#39;, &amp;#39;大桥&amp;#39;, &amp;#39;。&amp;#39;]]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;其他自然语言处理功能&#34;&gt;其他自然语言处理功能
&lt;/h3&gt;&lt;p&gt;  除了分词功能，LTP还提供了分句、词性标注、命名实体识别、依存句法分析和语义角色标注等功能。与NLTK类似，在此只演示如何使用LTP进行分句和词性标注，关于更多其他功能的使用方法，请参见LTP的官方文档。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ltp&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StnSplit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;sents&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;StnSplit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;batch_split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;南京市长江大桥。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;汤姆生病了。他去了医院。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[&amp;#39;南京市长江大桥。&amp;#39;, &amp;#39;汤姆生病了。&amp;#39;, &amp;#39;他去了医院。&amp;#39;]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;ltp&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LTP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;ltp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LTP&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ltp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pipeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tasks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cws&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;return_dict&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;([[&amp;#39;南京市&amp;#39;, &amp;#39;长江&amp;#39;, &amp;#39;大桥&amp;#39;, &amp;#39;。&amp;#39;], [&amp;#39;汤姆&amp;#39;, &amp;#39;生病&amp;#39;, &amp;#39;了&amp;#39;, &amp;#39;。&amp;#39;], [&amp;#39;他&amp;#39;, &amp;#39;去&amp;#39;, &amp;#39;了&amp;#39;, 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;&amp;#39;医院&amp;#39;, &amp;#39;。&amp;#39;]],)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ltp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pipeline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sents&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tasks&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cws&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;pos&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pos&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[[&amp;#39;ns&amp;#39;, &amp;#39;ns&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;wp&amp;#39;], [&amp;#39;nh&amp;#39;, &amp;#39;v&amp;#39;, &amp;#39;u&amp;#39;, &amp;#39;wp&amp;#39;], [&amp;#39;r&amp;#39;, &amp;#39;v&amp;#39;, &amp;#39;u&amp;#39;, &amp;#39;n&amp;#39;, &amp;#39;wp&amp;#39;]]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;pytorch基础&#34;&gt;Pytorch基础
&lt;/h2&gt;&lt;p&gt;  现代深度学习系统的模型结构变得越来越复杂，若要从头开始搭建则极其耗时耗力，而且非常容易出错。幸好，看似纷繁复杂的深度学习模型，都可以分解为一些同构的简单网络结构，通过将这些简单网络结构连接在一起，就可构成复杂的模型。因此，很多深度学习库应运而生，它们可以帮助用户快速搭建一个深度学习模型，并完成模型的训练（也称学习或优化）、预测和部署等功能。&lt;br&gt;
  本书使用的是PyTorch开源深度学习库,它由Facebook人工智能研究院(Facebook AI Research, FAIR)于2017年推出，可以使用Python语言调用。严格来 讲，PyTorch是一个基于张量(Tensor)的数学运算工具包，提供了两个高级功能：(1)具有强大的GPU（图形处理单元，也叫显卡）加速的张量计算功能；(2)能够自动进行微分计算，从而可以使用基于梯度的方法对模型参数进行优化。基于这些特点，它特别适合作为一个灵活、高效的深度学习平台。与其他深度学习库相比，PyTorch具有如下优点：&lt;br&gt;
  ◦框架简洁；&lt;br&gt;
  ◦入门简单，容易上手；&lt;br&gt;
  ◦支持动态神经网络构建；&lt;br&gt;
  ◦与Python语言无缝结合；&lt;br&gt;
  ◦调试方便。&lt;br&gt;
  因此，PyTorch获得了越来越多的用户，尤其是研究人员的青睐。本节将简要介绍PyTorch的基本功能，主要包括基本的数据存储结构——张量，张量的基本操作以及通过反向传播技术自动计算梯度。&lt;br&gt;
  首先，仍然可以使用pip包管理工具安装PyTorch，具体方法为，首先进入操
作系统的控制台，然后执行以下命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install torch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  本站更推荐使用Conda虚拟环境安装和运行PyTorch，具体安装方法可以参 见PyTorch官网。&lt;/p&gt;
&lt;h3 id=&#34;张量的基本概念&#34;&gt;张量的基本概念
&lt;/h3&gt;&lt;p&gt;  所谓&lt;strong&gt;张量&lt;/strong&gt;（Tensor），就是多维数组。当维度小于或等于2时，张量又有一些更熟悉的名字，例如，2维张量又被称为矩阵（Matrix），1维张量又被称为向量（Vector），而0维张量又被称为标量（Scalar），其实就是一个数值。使用张量，可以方便地存储各种各样的数据，如2维表格数据可以使用2维张量，即矩阵存储,而多张表格就可以使用3维张量表示和存储。一幅灰度图像（每个像素使用一个整数灰度值表示）也可以使用矩阵存储，而通常一副彩色图像（每个像素使用三个整数表示，分别代表红、绿、蓝的值）就可以使用3维张量表示和存储。&lt;br&gt;
  PyTorch提供了多种方式创建张量，如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;torch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#创建一个形状（Shape）为(2, 3)的空张量（未初始化）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[0.0000e+00, 3.6893e+19, 0.0000e+00],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[3.6893e+19, 6.3424e-28, 1.4013e-45]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#创建一个形状为（2, 3）的随机张量，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 每个值从[0,1）之间的均匀分布中采用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[0.4181, 0.3817, 0.6418],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.7468, 0.4991, 0.2972]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;randn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#创建一个形状为(2, 3)的随机张量，每个值从标准正态分布&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#（均值为0，方差为1）中采用&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[ 1.2760, 0.4784, -0.9421],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0.0435, -0.2632, -0.7315]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 创建一个形状为(2, 3)的0张量,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#其中dtype设置张量的数据类型，此处为整数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[0, 0, 0],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0, 0, 0]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;zeros&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#创建一个形状为(2, 3)的0张量，&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#类型为双精度浮点数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[0., 0., 0.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[0., 0., 0.]], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;1.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;8.6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;4.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#通过Python列表创建张量 &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1.0000, 3.8000, 2.1000],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[8.6000, 4.0000, 2.4000]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#生成包含0至9,共1O个数字的张量&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  以上张量都存储在内存中，并使用CPU进行运算。若要在GPU中创建和计算张量，则需要显式地将其存入GPU中，具体可以采用下列方法之一（前提是本机已经配置了 NVIDIA的GPU并且正确地安装了相应的CUDA库）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cuda&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cuda&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;device&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cuda&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;张量的基本运算&#34;&gt;张量的基本运算
&lt;/h3&gt;&lt;p&gt;  创建了张量后，即可以对其进行运算或操作，如加减乘除四则混合运算等。PyTorch中的加减乘除是按元素进行运算的，即将参与运算的两个张量按对应的元素进行加减乘除，如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dtype&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([5., 7., 9.], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([-3., -3., -3.], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([ 4., 10., 18.], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([0.2500, 0.4000, 0.5000], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  更多的运算方式可以通过&lt;code&gt;torch&lt;/code&gt;中的函数实现，如向量点积(&lt;code&gt;torch.dot&lt;/code&gt;)、矩阵相乘(&lt;code&gt;torch.mm&lt;/code&gt;)、三角函数和各种数学函数等。具体示例如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dot&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#向量x和y的点积&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor(32., dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#对x按元素求正弦值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([0.8415, 0.9093, 0.1411], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;exp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#对x按元素求e^x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([2.7183, 7.3891, 20.0855], dtype=torch.float64)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  除了以上常用的数学运算，PyTorch还提供了更多的张量操作功能，如聚合操 作(Aggregation)、拼接(Concatenation)操作、比较操作、随机采样和序列化等, 详细的功能列表和使用方法可以参考PyTorch官方文档。&lt;br&gt;
  其中，当对张量进行聚合（如求平均、求和、最大值和最小值等）或拼接操作时，还涉及一个非常重要的概念，即维(Dim)或轴(Axis)。如对于一个张量, 可以直接使用&lt;code&gt;mean&lt;/code&gt;函数求其平均值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor(3.5000)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  可见，直接调用&lt;code&gt;mean&lt;/code&gt;函数获得的是全部6个数字的平均值。然而，有时需要
对某一行或某一列求平均值，此时就需要使用维的概念。对于一个九维张量，其维分别是dim=0,dim=1,···,dim=n-1。在做张量的运算操作时，dim设定了哪个维，就会遍历这个维去做运算（也叫作沿着该维运算），其他维顺序不变。仍然是调用&lt;code&gt;mean&lt;/code&gt;函数，当设定的维不同时，其结果也是不同的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#按第i维(列)求平均&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([2.5000, 3.5000, 4.5000])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#按第2维(行)求平均&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tensor([2., 5.])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  实际上，这个平均聚合运算可以用数学直观表示为&lt;/p&gt;
&lt;span id=&#34;20241220132516CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
&amp;x.\text{mean}(\text{dim}=k)[i_1][i_2]\cdots[i_{k-1}][i_{k+1}]\cdots[i_{n-1}][i_n]\\[5pt]
=&amp;\frac{1}{x.\text{shape}[k]}\sum_{l=0}^{x.\text{shape}[k]}x[i_1][i_2]\cdots[i_{k-1}][l][i_{k+1}]\cdots[i_{n-1}][i_n]\quad\forall i_1,\cdots,i_{k-1},i_{k+1},\cdots,i_n
\end{aligned}
\tag{1}
    \]
&lt;p&gt;  因此，对于一个形状为 \((i_1,i_2,\cdots,i_n)\) 的张量，对第 \(k\) 维进行聚合之后，可得到一个形状为 \((i_1,i_2,\cdots,i_{k-1},i_{k+1},\cdots,i_{n-1},i_n)\) 的张量。&lt;br&gt;
  某些时候我们希望结果保持正确的维度，聚合操作还提供了keepdim参数，默认设置为False，需要显式地设为True。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keepdim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[2.5000, 3.5000, 4.5000]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mean&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;keepdim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[2.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [5.]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  此时的聚合运算可用数学直观表示为&lt;/p&gt;
&lt;span id=&#34;20241220132517CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
&amp;x.\text{mean}(\text{dim}=k)[i_1][i_2]\cdots[i_{k-1}][0][i_{k+1}]\cdots[i_{n-1}][i_n]\\[5pt]
=&amp;\frac{1}{x.\text{shape}[k]}\sum_{l=0}^{x.\text{shape}[k]}x[i_1][i_2]\cdots[i_{k-1}][l][i_{k+1}]\cdots[i_{n-1}][i_n]\quad\forall i_1,\cdots,i_{k-1},i_{k+1},\cdots,i_n
\end{aligned}
\tag{2}
    \]
&lt;p&gt;  因此，对于一个形状为 \((i_1,i_2,\cdots,i_n)\) 的张量，对第 \(k\) 维进行聚合之后，可得到一个形状为 \((i_1,i_2,\cdots,i_{k-1},i_{k+1},\cdots,i_{n-1},i_n)\) 的张量。&lt;/p&gt;
&lt;p&gt;  拼接(&lt;code&gt;torch.cat&lt;/code&gt;)操作也是类似的，通过指定维，获得不同的拼接结果。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1. ,2. , 3.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [4. ,5. , 6.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [7. ,8. , 9.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [10. , 11., 12.]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor( [[1., 2., 3., 7., 8., 9.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         [4., 5., 6., 10., 11., 12.]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  拼接操作的数学直观表示为&lt;/p&gt;
&lt;span id=&#34;20241220152207CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
&amp;\text{torch.cat}((x_1,x_2,\cdots),\text{dim}=k)[i_1][i_2]\cdots[i_k]\cdots[i_n]\\[5pt]
=&amp;\begin{cases}
x_1[i_1][i_2]\cdots[i_k]\cdots[i_n] &amp; \text{if } 0 \le i_k &lt;  x_1.\text{shape}[k] \\[5pt]
x_2[i_1][i_2]\cdots[i_k]\cdots[i_n] &amp; \text{if } x_1.\text{shape}[k] \le i_k &lt; x_1.\text{shape}[k] + x_2.\text{shape}[k] \\[5pt]
\hspace{5em}\vdots
\end{cases}
\end{aligned}
\tag{3}
    \]
&lt;p&gt;  通过对以上多种操作的组合使用，就可以写出复杂的数学计算表达式。如对
于数学表达式&lt;/p&gt;
&lt;span id=&#34;20241220181156CST&#34;&gt;&lt;/span&gt;\[
z=(x+y)\times(y-2)
\tag{4}
    \]
&lt;p&gt;  当 \(x=2,y=3\) 时，可以手动计算出 \(z=5\) ，当然也可以写一段简单的Python进行计算。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;2.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;3.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;5.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  那么，使用PyTorch如何计算 \(z\) 的值呢？其实PyTorch程序和Python非常类似，唯一不同之处在于数据使用张量进行保存。具体代码如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([5.])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  通过上面的例子可以看到，PyTorch的编程方式与Python非常相似，因此，当具备了Python编程基础后，学习和使用PyTorch都非常容易。而PyTorch带来的一个好处是更高效的执行速度，尤其是当张量存储的数据比较多，同时机器还装有GPU时，效率的提升是极其显著的。&lt;/p&gt;
&lt;h3 id=&#34;自动微分&#34;&gt;自动微分
&lt;/h3&gt;&lt;p&gt;  除了能显著提高执行速度，PyTorch还提供了自动计算梯度的功能（也叫自动
微分），使得无须人工参与，即可自动计算一个函数关于一个变量在某一取值下的导数。通过该功能，就可以使用基于梯度的方法对参数（变量）进行优化（也叫学习或训练）。使用PyTorch计算梯度非常容易，仅需要执行&lt;code&gt;tensor.backward()&lt;/code&gt;函数，就可以通过&lt;strong&gt;反向传播算法&lt;/strong&gt;(Back Propogation)自动完成。&lt;br&gt;
  需要注意的一点是，为了计算一个函数关于某一变量的导数，PyTorch要求显式地设置该变量(张量)是可求导的，否则默认不能对该变量求导。具体设置方法是在张量生成时，设置&lt;code&gt;requires_grad=True&lt;/code&gt;。&lt;br&gt;
  因此，计算 \(z=(x+y)\times(y-2)\) 的代码经过简单修改，就可以计算当 \(x=2,y=3\) 时， \(\displaystyle\frac{\partial z}{\partial x}\) 和 \(\displaystyle\frac{\partial z}{\partial y}\) 的值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;2.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requires_grad&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;3.&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;requires_grad&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([5.], grad_fn=&amp;lt;MulBackwardO&amp;gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;backward&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#自动调用反向转播算法计算梯度&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;grad&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 输出 dz/dx 和 dz/dy 的值tensor([1.]) tensor([6.])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([1.]) tensor([6.])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  也可手工求解，即： \(\displaystyle\frac{\partial z}{\partial
 x}=y-2,\frac{\partial z}{\partial y}=x+2y-2\) ，则当 \(x=2,y=3\) 时， \(\displaystyle\frac{\partial z}{\partial x}\) 和 \(\displaystyle\frac{\partial z}{\partial y}\) 的值分别为 \(1\) 和 \(6\) ，与以上PyTorch代码计算的结果一致。&lt;/p&gt;
&lt;h3 id=&#34;调整张量形状&#34;&gt;调整张量形状
&lt;/h3&gt;&lt;p&gt;  参与运算的张量需要满足一定的形状，比如两个矩阵相乘，前一个矩阵的第二维应该和后一个矩阵的第一维相同。为了做到这一点，有时需要对张量的形状进行调整。PyTorch一共提供了4种调整张量形状的函数，分别为&lt;code&gt;view&lt;/code&gt;、&lt;code&gt;reshape&lt;/code&gt;、&lt;code&gt;transpose&lt;/code&gt;和&lt;code&gt;permute&lt;/code&gt;。下面分别加以介绍。&lt;br&gt;
  &lt;code&gt;view&lt;/code&gt;函数的参数用于设置新的张量形状，因此需要保证张量总的元素个数不变。示例如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#打印x的内容和形状(6)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([1., 2., 3., 4., 5., 6.]) torch.Size([6])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将x的形状调整为(2, 3)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1., 2., 3.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [4., 5., 6.]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将x的形状调整为(3, 2)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1., 2.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [3., 4.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [5., 6.]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#-1位置的大小可以通过其他维的大小推断出，此处为2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1., 2., 3.],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [4., 5., 6.]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  &lt;code&gt;view&lt;/code&gt;操作的本质是将原来的张量的内容按照如下可数的方式进行排列：&lt;/p&gt;
&lt;span id=&#34;20241220191003CST&#34;&gt;&lt;/span&gt;\[
\begin{gather}
x[0]\cdots[0][0],x[0]\cdots[0][1],x[0]\cdots[0][2],\cdots,x[0]\cdots[0][m_n],\\[5pt]
x[0]\cdots[1][0],x[0]\cdots[1][1],x[0]\cdots[1][2],\cdots,x[0]\cdots[1][m_n],\\[5pt]
x[0]\cdots[2][0],x[0]\cdots[2][1],x[0]\cdots[2][2],\cdots,x[0]\cdots[2][m_n],\\[5pt]
\vdots \\[5pt]
x[m_1]\cdots[m_{n-1}][0],x[m_1]\cdots[m_{n-1}][1],x[m_1]\cdots[m_{n-1}][2],\cdots,x[m_1]\cdots[m_{n-1}][m_n]
\end{gather}
\tag{5}
    \]
&lt;p&gt;  其中 \((m_1,m_2,\cdots,m_n)\) 是原张量的形状。然后，按照上面的排列填入如下新的张量中&lt;/p&gt;
&lt;span id=&#34;20241220191823CST&#34;&gt;&lt;/span&gt;\[
\begin{gather}
x[0]\cdots[0][0],x[0]\cdots[0][1],x[0]\cdots[0][2],\cdots,x[0]\cdots[0][m&#39;_n],\\[5pt]
x[0]\cdots[1][0],x[0]\cdots[1][1],x[0]\cdots[1][2],\cdots,x[0]\cdots[1][m&#39;_n],\\[5pt]
x[0]\cdots[2][0],x[0]\cdots[2][1],x[0]\cdots[2][2],\cdots,x[0]\cdots[2][m&#39;_n],\\[5pt]
\vdots \\[5pt]
x[m&#39;_1]\cdots[m&#39;_{n-1}][0],x[m&#39;_1]\cdots[m&#39;_{n-1}][1],x[m&#39;_1]\cdots[m&#39;_{n-1}][2],\cdots,x[m&#39;_1]\cdots[m&#39;_{n-1}][m&#39;_n]
\end{gather}
\tag{6}
    \]
&lt;p&gt;  其中 \((m&#39;_1,m&#39;_2,\cdots,m&#39;_n)\) 是新张量的形状。要求必须保证&lt;/p&gt;
&lt;span id=&#34;20241220191933CST&#34;&gt;&lt;/span&gt;\[
m_1\times m_2 \times \cdots \times m_n = m&#39;_1\times m&#39;_2 \times \cdots \times m&#39;_n
\tag{7}
    \]
&lt;p&gt;  进行&lt;code&gt;view&lt;/code&gt;操作的张量要求是连续的(Contiguous)，可以调用&lt;code&gt;is_contiguous&lt;/code&gt;函数判断一个张量是否为连续的。如果张量非连续，则需要先调用&lt;code&gt;contiguous&lt;/code&gt;函数将其变为连续的，才能调用&lt;code&gt;view&lt;/code&gt;函数。好在PyTorch提供了新的&lt;code&gt;reshape&lt;/code&gt;函数，可以直接对非连续张量进行形状调整。除此之外，&lt;code&gt;reshape&lt;/code&gt;函数与&lt;code&gt;view&lt;/code&gt;函数功能一致。在此不再赘述。&lt;br&gt;
  &lt;code&gt;transpose&lt;/code&gt;(转置)函数用于交换张量中的两个维度，参数分别为相应的维。如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1, 2, 3],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [4, 5, 6]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;transpose&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#交换第1维和第2维&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1, 4],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [2, 5],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [3, 6]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  转置的数学直观表示为&lt;/p&gt;
&lt;span id=&#34;20241220192507CST&#34;&gt;&lt;/span&gt;\[
x.\text{transpose}(j,k)[i_1]\cdots[i_j]\cdots[i_k]\cdots[i_n]=x[i_1]\cdots[i_k]\cdots[i_j]\cdots[i_n]
\tag{8}
    \]
&lt;p&gt;  不过，&lt;code&gt;transpose&lt;/code&gt;函数只能同时交换两个维度，若要交换更多的维度，需要多次调用该函数。更便捷的实现方式是直接调用&lt;code&gt;permute&lt;/code&gt;函数，其需要提供全部的维度信息作为参数，即便有些维度无须交换也需要提供。示例如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[[1, 2, 3],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;         [4, 5, 6]]]) torch.Size( [1, 2, 3])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;permute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[[1, 4]],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [[2, 5]],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [[3, 6]]]) torch.Size([3, 1, 2])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  &lt;code&gt;permute&lt;/code&gt;的直观数学表示为&lt;/p&gt;
&lt;span id=&#34;20241220193207CST&#34;&gt;&lt;/span&gt;\[
x.\text{permute}(a_1,a_2,\cdots,a_n)[i_1]\cdots[i_n]=x[i_{a_1}][i_{a_2}]\cdots[i_{a_n}]
\tag{9}
    \]
&lt;h3 id=&#34;广播机制&#34;&gt;广播机制
&lt;/h3&gt;&lt;p&gt;  在上面介绍的张量运算中，都是假设两个参与运算的张量形状相同。在有些情
况下，即使两个张量的形状不同，也可以通过&lt;strong&gt;广播机制&lt;/strong&gt;(Broadcasting Mechanism)执行按元素计算。具体的执行规则是，首先，对其中一个或同时对两个张量的元素进行复制，使得这两个张量的形状相同；然后，在扩展之后的张量上再执行按元素运算。通常是沿着长度为1的维度进行扩展，下面通过一个具体的例子进行说明。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;aremge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [2],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [3]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[4, 5]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  生成两个张量，形状分别为(3,1)和(1,2),显然，它们不能直接执行按元素 运算。因此，在执行按元素运算之前，需要将它们扩展（广播）为形状(3, 2)的张量，具体扩展的方法为将x的第1列复制到第2列，将y的第1行复制到第2、3行。如下所示，可以直接进行加法运算，PyTorch会自动执行广播和按元素相加。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[5, 6],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [6, 7], 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [7, 8]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;索引与切片&#34;&gt;索引与切片
&lt;/h3&gt;&lt;p&gt;  与Python的列表类似，PyTorch中也可以对张量进行索引和切片操作，规则
也与Python语言基本一致，即索引值是从0开始的，切片的范围是从m开始，至n的前一个元素结束。与Python语言不同的是，PyTorch可以对张量的任意一个维度进行索引或切片。下面演示一些简单的示例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arange&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;view&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[0, 1, 2, 3],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [4, 5, 6, 7],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [8, 9, 10, 11]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#x的第2行，第4列的元素(7)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor(7)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#第2行全部元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([4, 5, 6, 7])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#第2、3两行元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[ 4, 5, 6, 7],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [8, 9, 10, 11]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#第3列全部元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([2, 6, 10])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#第3、4两列元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[2, 3],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [6, 7],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [10, 11]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#第3、4两列元素全部赋值为100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[0, 1, 100, 100],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [4, 5, 100, 100],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;        [8, 9, 100, 100]])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;降维与升维&#34;&gt;降维与升维
&lt;/h3&gt;&lt;p&gt;  有时为了适配某些运算，需要对一个张量进行降维或升维。如很多神经网络模块在调用时，需要同时输入一个批次，即多个样例，如果此时只输入1个输入样例，则需要将某一个维度提升，以适配该模块的调用要求。&lt;br&gt;
  具体来讲，所谓升维，就是通过调用&lt;code&gt;torch.unsqueeze(input, dim, out=None)&lt;/code&gt;函数，对输入张量的&lt;code&gt;dim&lt;/code&gt;位置后面插入维度1，并返回一个新的张量。与索引相同，&lt;code&gt;dim&lt;/code&gt;的值也可以为负数。&lt;br&gt;
  降维恰好相反，使用&lt;code&gt;torch.squeeze(input, dim=None, out=None)&lt;/code&gt;函数，在不指定&lt;code&gt;dim&lt;/code&gt;时，张量中形状为1的所有维都将被除去。如输入形状为&lt;code&gt;(A, 1, B, 1, C, 1, D)&lt;/code&gt;的张量，那么输出形状就为&lt;code&gt;(A, B, C, D)&lt;/code&gt;。当给定&lt;code&gt;dim&lt;/code&gt;时，那么降维操作只在给定维度上。例如，输入形状为&lt;code&gt;(A, 1, B)&lt;/code&gt;，&lt;code&gt;squeeze(input, dim=0)&lt;/code&gt;函数将会保持张量不变，只有用&lt;code&gt;squeeze(input, dim=1)&lt;/code&gt;函数时，形状才会变成&lt;code&gt;(A, B)&lt;/code&gt;。下面给出调用示例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;torch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tensor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;torch.Size([4])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;torch&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsqueeze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#将a的第1维升高&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#打印b以及b的形状&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor( [[1., 2., 3., 4.]]) torch.Size([1, 4])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;unsqueeze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dim&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#unsqueeze函数的另一种等价调用方式&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([[1., 2., 3., 4.]]) torch.Size([1, 4])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;squeeze&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#对b进行降维，去掉所有形状中为1的维&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;shape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;tensor([1., 2., 3., 4.]) torch.Size([4])
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;大规模预训练数据&#34;&gt;大规模预训练数据
&lt;/h2&gt;&lt;p&gt;  预训练语言模型需要通过海量文本学习语义信息，随着语料规模的增大，得到的统计信息将更加精准，更利于文本表示的学习。例如，在小型语料库中，单词“包袱”只出现在“他背着包袱就走了”这句话中，则模型只能学习到“包袱”作为一种“布包起来的衣物包裹”的含义。而随着语料库的增大，单词“包袱”可能出现在更多不同的上下文中，如“你不要有太大的思想包袱”“那位相声演员 的包袱很有趣”，则能够赋予“包袱”更多不同的含义。因此，为了训练效果更好的预训练模型，高质量、大规模的预训练数据是必不可少的。在本节中，将主要介绍典型的语料资源——维基百科数据的获取和基本处理方法。&lt;/p&gt;
&lt;h3 id=&#34;维基百科数据&#34;&gt;维基百科数据
&lt;/h3&gt;&lt;p&gt;  维基百科(Wikipedia)是一部用不同语言写成的网络百科全书，由吉米•威尔士与拉里•桑格两人合作创建，于2001年1月13日在互联网上推出网站服务，并在2001年1月15日正式展开网络百科全书的项目。维基百科内容由人工编辑，因此作为预训练的原始数据非常适合。接下来，将介绍维基百科数据的获取以及原始数据的处理方法。&lt;/p&gt;
&lt;h3 id=&#34;原始数据的获取&#34;&gt;原始数据的获取
&lt;/h3&gt;&lt;p&gt;  维基百科官方会以一定的时间间隔，对整个维基百科的内容进行快照并压缩，用户可以直接下载相应的压缩包，获取到某一时刻的维基百科数据。如以中文维基百科数据为例，存在比较重要的几个文件，如&lt;a class=&#34;link&#34; href=&#34;#20241221090851CST&#34;&gt;表1&lt;/a&gt;所示。&lt;/p&gt;
&lt;span id=&#34;20241221090851CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;文件名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;内容&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;大小/MB&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;zhwiki-latest-abstract.xml.gz&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;所有词条摘要&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;≈147&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;zhwiki-latest-all-titles.gz&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;所有词条标题&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;≈33&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;zhwiki-latest-page.sql.gz&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;所有词条标题及摘要&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;≈204&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;zhwiki-latest-pagelinks.sql.gz&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;所有词条外链&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;≈890&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;zhwiki-latest-pages-articles.xml.bz2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;所有词条正文&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;≈1952&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表1&amp;emsp;中文维基百科快照内容&lt;/p&gt;
&lt;p&gt;  预训练语言模型主要使用的是维基百科的正文内容，因此这里选择&amp;quot;zhwiki-latest-pages-articles.xml.bz2&amp;quot;，以下载最新快照的词条正文压缩包。以2020年10月23日的快照为例，该压缩包的大小约为1.95GB。由于后续进行处理时会直接对压缩包进行处理，这里不再进行解压缩操作。&lt;/p&gt;
&lt;h3 id=&#34;语料处理方法&#34;&gt;语料处理方法
&lt;/h3&gt;&lt;h4 id=&#34;纯文本语料抽取&#34;&gt;纯文本语料抽取
&lt;/h4&gt;&lt;p&gt;  处理维基百科快照的方法相对比较成熟，这里以WikiExtractor为例进行介绍。WikiExtractor是一款基于Python的工具包，专门用于处理维基百科的快照。为了方便安装工具包的相关依赖程序，这里推荐使用pip命令安装WikiExtractor。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install wikiextractor
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  接下来，直接通过一行命令即可对维基百科的快照压缩包进行处理，去除其中的图片、表格、引用和列表等非常规文本信息，最终得到纯文本的语料。需要注意的是，这一部分的处理需要花费一定处理时间，视系统配置不同可能耗费几十分钟至数小时不等。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python -m wikiextractor.WikiExtractor zhwiki-latest-pages-articles.xml.bz2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  对于WikiExtractor工具包的使用参数，可通过如下命令获取（普通用户使用默认参数即可）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; python -m wikiextractor.WikiExtractor -h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  处理完毕后，可以获得纯文本语料文件，其目录结构如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-plaintext&#34; data-lang=&#34;plaintext&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;./text
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; |- AA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  |- wiki_00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  |- wiki_01 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  |-...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  |- wiki_99
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; |- AB
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; |- ...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; |- AO
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  text文件夹由AA到AO子文件夹构成，而每个子文件夹包含了wiki_00至 wiki_99共100个文件。每个文件包含多个维基百科词条，其内容如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;doc id=&amp;#34;13&amp;#34; url=&amp;#34;https://zh.wikipedia.org/wiki?curid=13&amp;#34; title=&amp;#34;数学&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;数学
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;数学是利用符号语言研究數量、结构、变化以及空间等概念的一門学科，从某种角度看屬於形式科學
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;的一種。數學透過抽象化和邏輯推理的使用，由計數、計算、量度和對物體形狀及運動的觀察而产生
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;。數學家們拓展這些概念，为了公式化新的猜想以及從選定的公理及定義中建立起嚴謹推導出的定理
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/doc&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;doc id=&amp;#34;18&amp;#34; url=&amp;#34;https://zh.wikipedia.org/wiki?curid=18&amp;#34; title=&amp;#34;哲学&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;哲学
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;......
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;lt;/doc&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;可见，每个词条均由&lt;code&gt;&amp;lt;doc&amp;gt;&lt;/code&gt;标签开始并以&lt;code&gt;&amp;lt;/doc&amp;gt;&lt;/code&gt;结尾。&lt;/p&gt;
&lt;h4 id=&#34;中文繁简体切换&#34;&gt;中文繁简体切换
&lt;/h4&gt;&lt;p&gt;  中文维基百科中同时包含了简体中文和繁体中文的数据，如果使用者只需要 获得简体中文数据，需要将纯文本语料中的繁体中文内容转换为简体中文。这里使用一款较为成熟的中文繁简体转换工具——OpenCC。OpenCC工具可将简体中文、繁体中文(其中包括中国香港地区、中国台湾地区使用的繁体)和日本新字体等中文进行互转。OpenCC工具同样可以通过pip命令安装。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install opencc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  安装完毕后，可以通过如下Python脚本进行中文繁简转换。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python convert_t2s.py input_file &amp;gt; output_file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  其中，转换脚本&lt;code&gt;convert_t2s.py&lt;/code&gt;的内容如下所示。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;opencc&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;converter&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;opencc&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;OpenCC&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;t2s.json&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;f_in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;line_t2s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;converter&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;convert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line_t2s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  其中要用到的配置文件&lt;code&gt;t2s.json&lt;/code&gt;的内容如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Traditional Chinese to Simplified Chinese&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;segmentation&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mmseg&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;dict&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ocd2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TSPhrases.ocd2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nt&#34;&gt;&amp;#34;conversion_chain&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;dict&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nt&#34;&gt;&amp;#34;dicts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ocd2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TSPhrases.ocd2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ocd2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;file&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;TSCharacters.ocd2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  经过处理后，原始语料中的繁体中文将全部转换为简体中文。读者可根据实 际情况进行简繁体或繁简体的转换。&lt;/p&gt;
&lt;h4 id=&#34;数据清洗&#34;&gt;数据清洗
&lt;/h4&gt;&lt;p&gt;  经过上述处理后，可以得到包含简体中文的纯文本语料。然而，在从维基百科快照里抽取纯文本数据的过程中可能因文本编码、损坏的HTML标签等问题导致纯文本中包含一些乱码或机器字符。因此，在最后需要通过一个简单的后处理操作对纯文本语料进行二次过滤，进一步提升预训练语料的质量。需要注意的是，这里仅处理语料中的一些明显错误，而对于一般类型的错误则不会处理(如标点不统一等问题)，因为一般类型的错误在日常的文本中也会出现。这里的处理方式主要包括如下几类：&lt;br&gt;
  ◦删除空的成对符号，例如“()”“《》”“【】”“[]”等；&lt;br&gt;
  ◦删除&amp;lt;br&amp;gt;等残留的HTML标签。需要注意的是，这里不删除以“&amp;lt;doc id”和“&amp;lt;/doc&amp;gt;”为开始的行，因其表示文档的开始和结束，能为某些预训练语言模型的数据处理提供至关重要的信息；&lt;br&gt;
  ◦删除不可见控制字符，避免意外导致数据处理中断。&lt;br&gt;
  所以，数据清洗将最大限度地保留自然文本的统计特征，对于其中的“对”与“错”二则交由模型来进行学习，而非通过人工进行过多干预。&lt;br&gt;
  通过如下脚本启动数据清洗过程。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;python wikidata.cleaning.py input.file &amp;gt; output_file
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  其中，数据清洗脚本&lt;code&gt;wikidata_cleaning.py&lt;/code&gt;的内容如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;remove_empty_paired_punc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in_str&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;（）&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;《》&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;【】&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;replace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;remove_html_tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;html_pattern&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;[^&amp;gt;]+&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;html_pattern&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;remove_control_chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;in_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;control_chars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;join&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;chr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;127&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;160&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;control_chars&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%s&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;]&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;escape&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;control_chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;control_chars&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sub&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;in_str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;f_in&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f_in&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;re&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;search&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;sa&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;^(&amp;lt;doc id)|(&amp;lt;/doc&amp;gt;)&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remove_empty_paired_punc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remove_html_tags&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;remove_control_chars&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;commoncrawl数据&#34;&gt;CommonCrawl数据
&lt;/h3&gt;&lt;p&gt;  Common Crawl包含了超过7年的网络爬虫数据集，包含原始网页数据、元数据提取和文本提取。数据存储在Amazon Web服务的公共数据集和遍布全球的 多个学术云平台上，拥有PB级规模。Common Crawl的数据非常庞大，因此想处理好如此庞大的数据并不是一件容易的事情。Facebook提出的CC-Net工具可用于获取Common Crawl数据，并且提供了一套相对完整的数据处理流程。其应用方法较为简单。&lt;/p&gt;
&lt;h2 id=&#34;更多数据集&#34;&gt;更多数据集
&lt;/h2&gt;&lt;p&gt;  本节介绍的NLTK工具集提供了少量的自然语言处理数据集，可用于模型演示和简单的系统测试。近期，HuggingFace公司发布了更大规模的语料库集合——HuggingFace Datasets，与其他自然语言处理数据集相比，具有如下的特点：&lt;br&gt;
  ◦数据集数目多：截至2021年3月，共收录了近200种语言的700多个数据集，涵盖了文本分类、机器翻译和阅读理解等众多自然语言处理任务。之所以能有如此多的数据，主要依赖于社区的贡献，任何用户都可以共享相关的数据集。除了支持用户可以直接使用这些公开的数据集，还支持其方便地调用自己私有的数据集。&lt;br&gt;
  ◦兼容性好：可以直接被PyTorch、TensorFlow等深度学习框架，以及pandas、NumPy等数据处理工具调用，同时支持CSV、JSON等数据格式的读取，并提供了丰富、灵活的调用接口和数据处理接口。&lt;br&gt;
  ◦数据读取效率高：可以在仅占用少量内存的条件下，高速地读取大量的丰富的评价方法：如2.4节介绍的，由于自然语言处理任务类型众多，需要多种不同的评价指标对它们进行评价。为此，HuggingFace Datasets除了提供多种通用的评价方法，还针对不同的数据集提供了更有针对性的评价方法。&lt;br&gt;
  在使用HuggingFace Datasets之前，首先需要使用以下命令安装datasets包。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install datasets
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;下面通过一些示例，演示如何调用datasets提供的数据集以及评价方法。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;pprint&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pprint&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;datasets&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_dataset&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;sst&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;train&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;trust_remote_code&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 加载SST(Stanford Sentiment&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# Treebank)数据集(训练数据部分)。在第一次执行时，程序会自动下载相应的&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 数据集并放入本地的缓存目录中，当下次再运行时，会直接从本地加载&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#数据集中的样本数目&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;8544
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;pprint&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;dataset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#打印以字典对象存储的第1个样本，字典中存储了4个键值对&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 分别为标签(label： 0〜1的实数值，指示属于正例的可能性)、原始句子&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# (sentence)、标记序列(tokens：各标记之间使用|分隔)以及句法分析树(tree) &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;label&amp;#39;: 0.6944400072097778,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; &amp;#39;sentence&amp;#39;: &amp;#34;The Rock is destined to be the 21st Century &amp;#39;s new `` Conan &amp;#39;&amp;#39; &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;             &amp;#34;and that he &amp;#39;s going to make a splash even greater than Arnold &amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;             &amp;#39;Schwarzenegger , Jean-Claud Van Damme or Steven Segal .&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; &amp;#39;tokens&amp;#39;: &amp;#34;The|Rock|is|destined|to|be|the|21st|Century|&amp;#39;s|new|``|Conan|&amp;#39;&amp;#39;|and
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  |that|he|&amp;#39;s|going|to|make|a|splash|even|greater|than|Arnold|Schwarzenegger|,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  |Jean-Claud|Van|Damme|or|Steven|Segal|.&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; &amp;#39;tree&amp;#39;: &amp;#39;70|70|68|67|63|62|61|60|58|58|57|56|56|64|65|55|54|53|52|51|49|47|47
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  |46|46|45|40|40|41|39|38|38|43|37|37|69|44|39|42|41|42|43|44|45|50|48|48|49|50
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;  |51|52|53|54|55|66|57|59|59|60|61|62|63|64|65|66|67|68|69|71|71|0&amp;#39;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  datasets还提供了一些额外的函数，用于对数据进行处理或转换为PyTorch、TensorFlow等工具集能够处理的格式，具体调用方法见相应的使用文档。&lt;br&gt;
  Hugging Face还提供了evaluate库以提供评价方法。通过如下命令安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pip install evaluate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  使用方法如下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;evaluate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;accuracy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;evaluate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;accuracy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;accuracy&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;compute&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;references&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;predictions&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;results&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;{&amp;#39;accuracy&amp;#39;: 0.6666666666666666}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;小结&#34;&gt;小结
&lt;/h2&gt;&lt;p&gt;  本章介绍了三种常用的自然语言处理基础以及神经网络工具集，分别为：英文自然语言处理基础工具NLTK、中文自然语言处理基础工具LTP，以及本书所使用的深度学习框架PyTorch。另外，还介绍了预训练模型的基础之&amp;mdash;&amp;mdash;大规模文本数据的获取和简单处理方式，以及使用HuggingFace Datasets获取更多数据集的方法。本部分后续章节内容都紧密依赖这些工具和数据。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;

&lt;div style=&#34;text-align: center;&#34;&gt;
靠近你就靠近了痛苦，远离你就远离了幸福。
&lt;/div&gt;

&lt;/p&gt;&lt;span class=&#34;cite&#34;&gt;&lt;span&gt;― &lt;/span&gt;&lt;span&gt;安德烈·纪德, &lt;/span&gt;&lt;cite&gt;《窄门》&lt;/cite&gt;&lt;/span&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>自然语言处理（二）：自然语言处理基础</title>
        <link>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/fundamentals_of_natural_language_processing/</link>
        <pubDate>Wed, 13 Nov 2024 01:11:04 +0800</pubDate>
        
        <guid>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/fundamentals_of_natural_language_processing/</guid>
        <description>&lt;img src="https://www.brasswrench.com/true" alt="Featured image of post 自然语言处理（二）：自然语言处理基础" /&gt;







&lt;iframe
  class=&#34;netease-cloud-music-frame&#34;
  title=&#34;song&amp;#39;s 2067668285&#34;
  frameborder=&#34;no&#34;
  border=&#34;0&#34;
  marginwidth=&#34;0&#34;
  marginheight=&#34;0&#34;
  width=&#34;100%&#34;
  height=&#34;86&#34;
  loading=&#34;lazy&#34;
  src=&#34;https://music.163.com/outchain/player?type=2&amp;amp;id=2067668285&amp;amp;auto=0&amp;amp;height=66&#34;&gt;
&lt;/iframe&gt;

&lt;h1 id=&#34;自然语言处理基础&#34;&gt;自然语言处理基础
&lt;/h1&gt;&lt;p&gt;  本章首先介绍自然语言处理中最基础、最本质的问题，即文本如何在计算机内表示，才能达到易于处理和计算的目的。其中，词的表示大体经过了早期的独热（One-hot）表示，到后来的分布式表示，再到最近的词向量三个阶段。至于更长文本的表示方法，本章只对最简单的词袋模型加以介绍，后续章节将介绍其他更好的表示方法。接着介绍三大类自然语言处理任务，即：语言模型、基础任务以及应用任务。其中，基础任务包括中文分词、词性标注、句法分析和语义分析等，应用任务包括信息抽取、情感分析、问答系统、机器翻译和对话系统等。由于这些任务基本可以归纳为文本分类、结构预测和序列到序列三大类问题，所以同时介绍这三大类问题的解决思路。最后，介绍自然语言处理任务的评价方法，主要包括针对确定答案的准确率和F值，针对非确定答案的BLEU值，以及针对开放答案的人工评价等。&lt;/p&gt;
&lt;h2 id=&#34;文本的表示&#34;&gt;文本的表示
&lt;/h2&gt;&lt;p&gt;  若要利用计算机对自然语言进行处理，首先需要解决语言（本书特指文本）
在计算机内部的存储和计算问题。&lt;strong&gt;字符串(String)&lt;/strong&gt;‌是文本最自然，也是最常用的机内存储形式。所谓字符串，即字符序列，而其中的一个字符本质上就是一个整数。基于字符串的文本表示方式可以实现简单的字符串增删改查等编辑任务，并能够通过编辑距离等算法计算两个字符串之间的字面相似度。在使用字符串表示（也叫符号表示）计算文本的语义信息时，往往需要使用基于规则的方法。例如,要判断一个句子的情感极性（褒义或贬义），规则的形式可能为：如果句子中出现“喜欢””漂亮”等词则为褒义；如果出现“讨厌”“丑陋&amp;quot;等词则为贬义。&lt;br&gt;
  这种基于规则的方法存在很多问题。首先，规则的归纳依赖专家的经验，需 要花费大量的人力、物力和财力；其次，规则的表达能力有限，很多语言现象无法用简单的规则描述；最后，随着规则的增多，规则之间可能存在矛盾和冲突的情况，导致最终无法做出决策。例如，一个句子中既出现了“喜欢”，又出现了“讨厌”，那么其极性应该是什么呢？&lt;br&gt;
  为了解决基于规则的方法存在的以上诸多问题，基于机器学习的自然语言处理技术应运而生，其最本质的思想是将文本表示为向量，其中的每一维代表一个特征。在进行决策的时候，只要对这些特征的相应值进行加权求和，就可以得到一个分数用于最终的判断。仍然以情感极性识别为例，一种非常简单的将原始文本表示为向量的方法为：令向量 \(\bm{x}\) 的每一维表示某个词在该文本中出现的次数，如 \(x_1\) 表示“我”出现的次数， \(x_2\) 表示“喜欢”出现的次数， \(x_3\) 表示“电影”出现的次数， \(x_4\) 表示“讨厌”出现的次数等，如果某个词在该句中没有出现，则相应的维数被设置为0。可见，输入向量 \(\bm{x}\) 的大小恰好为整个词表（所有不相同的词）的大小。然后就可以根据每个词对判断情感极性的重要性进行加权，如“喜欢”（ \(x_2\) ）对应的权重 \(w_2\) 可能比较大，而“讨厌&amp;quot;（ \(x_4\) ）对应的权重 \(w_4\) 可能比较小（可以为负数），对于情感极性影响比较小的词，如“我”“电影”等，对应的权重可能会趋近于 \(0\) 。这种文本表示的方法是两种技术的组合，即词的独热表示和文本的词袋表示。除了可以应用于基于机器学习的方法，文本向量表示还可以用于计算两个文本之间的相似度，即使用余弦函数等度量函数表示两个向量之间的相似度，并应用于信息检索等任务。下面就以上提到的各项技术分别进行详细的介绍。&lt;/p&gt;
&lt;h3 id=&#34;词的独热表示&#34;&gt;词的独热表示
&lt;/h3&gt;&lt;p&gt;  所谓词的独热表示，即使用一个词表大小的向量表示一个词（假设词表为 \(
\mathbb{V}\) ，则其大小为 \(|\mathbb{V}|\) ),然后将词表中的第 \(i\) 个词 \(w_i\) 表示为向量：&lt;/p&gt;
&lt;span id=&#34;20241113014020CST&#34;&gt;&lt;/span&gt;\[
\bm{e}_{w_i}=[0,0,\cdots,\underbrace{1}_{第i个词},\cdots,0] \in \set{0,1}^{|\mathbb{V}|}
\tag{1}
    \]
&lt;p&gt;  在该向量中，词表中第 \(i\) 个词在第 \(i\) 维上被设置为 \(1\) ，其余维均为 \(0\) 。这种表示被称为词的&lt;strong&gt;独热表示&lt;/strong&gt;或&lt;strong&gt;独热编码（One-hot Encoding）&lt;/strong&gt;。&lt;br&gt;
  独热表示的一个主要问题就是不同词使用完全不同的向量进行表示，这会导 致即使两个词在语义上很相似，但是通过余弦函数来度量它们之间的相似度时值却为 \(0\) 。另外，当应用于基于机器学习的方法时，独热模型会导致&lt;strong&gt;数据稀疏(Data Sparsity)&lt;/strong&gt;‌问题。例如，假设在训练数据中只见过“漂亮”，在测试数据中出现了
“美丽”，虽然它们之间很相似，但是系统仍然无法恰当地对“美丽”进行加权。由于数据稀疏问题，导致当训练数据规模有限时，很多语言现象没有被充分地学习到。&lt;br&gt;
  为了缓解数据稀疏问题，传统的做法是除了词自身，再提取更多和词相关的泛化特征，如词性特征、词义特征和词聚类特征等。以语义特征为例，通过引入WordNet等语义词典，可以获知“漂亮”和“美丽”是同义词，然后引入它们的共同语义信息作为新的额外特征，从而缓解同义词的独热表示不同的问题。可以说，在使用传统机器学习方法解决自然语言处理问题时，研究者的很大一部分精力都用在了挖掘有效的特征上。&lt;/p&gt;
&lt;h3 id=&#34;词的分布式表示&#34;&gt;词的分布式表示
&lt;/h3&gt;&lt;p&gt;  词的独热表示容易导致数据稀疏问题，而通过引入特征的方法虽然可以缓解
该问题，但是特征的设计费时费力。那么有没有办法自动提取特征并设置相应的特征值呢？&lt;/p&gt;
&lt;h4 id=&#34;分布式语义假设&#34;&gt;分布式语义假设
&lt;/h4&gt;&lt;p&gt;  人们在阅读过程中遇到从未见过的词时，通常会根据上下文来推断其含义以 及相关属性。基于这种思想，John Rupert Firth于1957年提出了&lt;strong&gt;分布式语义假设&lt;/strong&gt;：词的含义可由其上下文的分布进行表示。基于该思想，可以利用大规模的未标注文本数据，根据每个词的上下文分布对词进行表示。当然，分布式语义假设仅仅提供了一种语义建模的思想。具体到表示形式和上下文的选择，以及如何利用上下文的分布特征，都是需要解决的问题。&lt;br&gt;
  下面用一个具体的例子演示如何构建词的分布式表示。假设语料库中有以下三句话：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;我 喜欢 自然 语言 处理 。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;我 爱 深度 学习 。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;我 喜欢 机器 学习 。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  假设以词所在句子中的其他词语作为上下文，那么可以创建如&lt;a class=&#34;link&#34; href=&#34;#20241113015119CST&#34;&gt;表1&lt;/a&gt;所示的词语共现频次表。其中，词表 \(\mathbb{V}\) 包含“我”“喜欢”···“。”共10个词，即 \(|\mathbb{V}|=10\) 。表中的每一项代表一个词 \(w_i\) 与另一个词 \(w_j\) （上下文）在同一个句子中的共现频次，每个词与自身的共现频次设置为 \(0\) 。&lt;/p&gt;
&lt;span id=&#34;20241113015119CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
        &lt;th class=&#34;diagonal_th&#34; style=&#34;width: 100px; height: 80px;&#34;&gt;
            &lt;span class=&#34;diagonal_th_right&#34; style=&#34;right: 15px;&#34;&gt;\(w_j\)&lt;/span&gt;
            &lt;span class=&#34;diagonal_th_bottom&#34; style=&#34;left: 15px;&#34;&gt;\(w_i\)&lt;/span&gt;
        &lt;/th&gt;
    &lt;th&gt;我&lt;/th&gt;&lt;th&gt;喜欢&lt;/th&gt;&lt;th&gt;自然&lt;/th&gt;&lt;th&gt;语言&lt;/th&gt;&lt;th&gt;处理&lt;/th&gt;&lt;th&gt;爱&lt;/th&gt;&lt;th&gt;深度&lt;/th&gt;&lt;th&gt;学习&lt;/th&gt;&lt;th&gt;机器&lt;/th&gt;&lt;th&gt;。&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;我&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;喜欢&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;自然&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;语言&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;处理&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;爱&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;深度&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;学习&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;机器&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;。&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表1&amp;emsp;词语共现频次表&lt;/p&gt;
&lt;p&gt;  表中的每一行代表一个词的向量。通过计算两个向量之间的余弦函数，就可 以计算两个词的相似度。如“喜欢”和“爱”，由于有共同的上下文“我”和“学习”，使得它们之间具有了一定的相似性，而不是如独热表示一样，没有任何关系。&lt;br&gt;
  除了词，上下文的选择有很多种方式，而选择不同的上下文得到的词向量表示性质会有所不同。例如，可以使用词在句子中的一个固定窗口内的词作为其上下文，也可以使用所在的文档本身作为上下文。前者得到的词表示将更多地反映词的局部性质：具有相似词法、句法属性的词将会具有相似的向量表示。而后者 将更多地反映词代表的主题信息。
不过，直接使用与上下文的共现频次作为词的向量表示，至少存在以下三个问题：&lt;br&gt;
  ◦高频词误导计算结果。如上例中，“我”“。”与其他词的共现频次很高，导致实际上可能没有关系的两个词由于都和这些词共现过，从而产生了较高的 相似度。&lt;br&gt;
  ◦共现频次无法反映词之间的高阶关系。例如，假设词“A”与”B”共现过，“B”与&amp;quot;C”共现过，“C”与“D&amp;quot;共现过，通过共现频次，只能获知“A”与“C”都与“B”共现过，它们之间存在一定的关系，而“A”与“D”这种高阶的关系则无法知晓。&lt;br&gt;
  ◦仍然存在稀疏性的问题。即向量中仍有大量的值为0，这一点从&lt;a class=&#34;link&#34; href=&#34;#20241113015119CST&#34;&gt;表1&lt;/a&gt;中也可以看出。&lt;br&gt;
  下面分别介绍如何通过点互信息和奇异值分解两种技术来解决这些问题。&lt;/p&gt;
&lt;h4 id=&#34;点互信息&#34;&gt;点互信息
&lt;/h4&gt;&lt;p&gt;  首先看如何解决高频词误导计算结果的问题。最直接的想法是：如果一个词与很多词共现，则降低其权重；反之，如果一个词只与个别词共现，则提高其权重。信息论中的&lt;strong&gt;点互信息（Pointwise Mutual Information，PMI）&lt;/strong&gt;‌恰好能够做到这一点。对于词 \(w\) 和上下文 \(c\) ，其PMI为：&lt;/p&gt;
&lt;span id=&#34;20241113020554CST&#34;&gt;&lt;/span&gt;\[
\text{PMI}(w,c)=\log_2\frac{P(w,c)}{P(w)P(c)}
\tag{2}
    \]
&lt;p&gt;  式中， \(P(w,c)\) 、 \(P(w)\) 、 \(P(c)\) 分别是 \(w\) 与 \(c\) 的共现概率，以及 \(w\) 和 \(c\) 分别出现的概率。可见，通过PMI公式计算，如果 \(w\) 和 \(c\) 的共现概率（与频次正相关）较高, 但是 \(w\) 或者 \(c\) 出现的概率也较高（高频词），则最终的PMI值会变小；反之，即便 \(w\) 和 \(e\) 的共现概率不高，但是 \(w\) 或者 \(c\) 出现的概率较低（低频词），则最终的PMI值也可能会比较大。从而较好地解决高频词误导计算结果的问题。&lt;br&gt;
  可以通过&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，“数理统计”还未上线~&#39;)&#34;&gt;最大似然估计（Maximum Likelihood Estimation，MLE）&lt;/a&gt;，分别计算相关的概率值。具体公式为：&lt;/p&gt;
&lt;span id=&#34;20241113020840CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
P(w,c)=&amp;\frac{C(w,c)}{\sum_{w&#39;,c&#39;}C(w&#39;,c&#39;)}\\[15pt]
P(w)=&amp;\frac{C(w)}{\sum_{w&#39;}C(w&#39;)}=\frac{\sum_{c&#39;}C(w,c&#39;)}{\sum_{w&#39;}\sum_{c&#39;}C(w&#39;,c&#39;)}\\[15pt]
P(c)=&amp;\frac{C(c)}{\sum_{c&#39;}C(c&#39;)}=\frac{\sum_{w&#39;}C(w&#39;,c)}{\sum_{w&#39;}\sum_{c&#39;}C(w&#39;,c&#39;)}
\end{aligned}
\tag{3}
    \]
&lt;p&gt;  式中： \(C(w,c)\) 表示词 \(w\) 和上下文 \(c\) 在语料库中出现的次数（也成为频次）； \(\sum_{c&#39;}C(w,c&#39;)\) 为&lt;a class=&#34;link&#34; href=&#34;#20241113015119CST&#34;&gt;表1&lt;/a&gt;按行求和， \(\sum_{w&#39;}C(w&#39;,c)\) 为&lt;a class=&#34;link&#34; href=&#34;#20241113015119CST&#34;&gt;表1&lt;/a&gt;按列求和； \(\sum_{w&#39;}\sum_{c&#39;}C(w&#39;,c&#39;)\) 为全部共现频次的和。代入以上 \(3\) 个公式，&lt;a class=&#34;link&#34; href=&#34;#20241113020554CST&#34;&gt;式(2)&lt;/a&gt;可进一步写为&lt;/p&gt;
&lt;span id=&#34;20241113173818CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
\text{PMI}(w,c)=&amp;\log_2\frac{P(w,c)}{P(w)P(c)}\\[15pt]
=&amp;\log_2\frac{\displaystyle\frac{C(w,c)}{\sum_{w&#39;,c&#39;}C(w&#39;,c&#39;)}}{\displaystyle\frac{\sum_{c&#39;}C(w,c&#39;)}{\sum_{w&#39;}\sum_{c&#39;}C(w&#39;,c&#39;)}\cdot\frac{\sum_{w&#39;}C(w&#39;,c)}{\sum_{w&#39;}\sum_{c&#39;}C(w&#39;,c&#39;)}}\\[30pt]
=&amp;\log_2\frac{\displaystyle C(w,c)}{\displaystyle\frac{\sum_{c&#39;}C(w,c&#39;)\sum_{w&#39;}C(w&#39;,c)}{\sum_{w&#39;}\sum_{c&#39;}C(w&#39;,c&#39;)}}
\end{aligned}
\tag{4}
    \]
&lt;p&gt;  另外，当某个词与上下文之间共现次数较低时，可能会得到负的PMI值。考虑到这种情况下的PMI不太稳定（具有较大的方差），在实际应用中通常采用&lt;strong&gt;PPMI(Positive PMI)&lt;/strong&gt;‌的形式，即：&lt;/p&gt;
&lt;span id=&#34;20241113174633CST&#34;&gt;&lt;/span&gt;\[
\text{PPMI}(w,c)=\max\set{\text{PMI}(w,c),0}
\tag{5}
    \]
&lt;p&gt;  接下来介绍PMI的代码实现。首先，将类似&lt;a class=&#34;link&#34; href=&#34;#20241113015119CST&#34;&gt;表1&lt;/a&gt;形式的共现频次表定义为&lt;strong&gt;共现矩阵&lt;/strong&gt;的形式，即 \(\bm{M} \in \mathbb{R}^{|\mathbb{V}|\times|\mathbb{C}|}\) ，其中 \(|\mathbb{V}|\) 为词表， \(\mathbb{C}\) 为全部的上下文， \(M_{ij}\) 为词 \(w_i\) 与上下文 \(c_j\) 在语料库中的共现频次。然后，编写如下代码计PPMI：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;numpy&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;np&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#共现矩阵&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;array&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#求PPMI值函数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;positive&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;col_totals&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;axis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#按列求和&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;row_totals&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;axis&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#按行求和&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;total&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col_totals&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#总频次&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;expected&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;outer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;row_totals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;col_totals&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;total&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#获得每个元素的分子&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;expected&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#取对数前的PMI值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;errstate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;divide&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;ignore&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#不显示log(0)的警告&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#取对数得PMI值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isinf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;#将log(0)置为0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;positive&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#执行PPMI的max操作&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;M&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#PPMI值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;M_pmi&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#计算PPMI值&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;set_printoptions&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;precision&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#控制输出结果精度为两位小数&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M_pmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#打印结果&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  则最终输出结果为&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt;[[0.   0.18 0.07 0.07 0.07 0.3  0.3  0.3  0.3  0.22]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.18 0.   0.44 0.44 0.44 0.   0.   0.   0.66 0.18]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.07 0.44 0.   1.03 1.03 0.   0.   0.   0.   0.07]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.07 0.44 1.03 0.   1.03 0.   0.   0.   0.   0.07]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.07 0.44 1.03 1.03 0.   0.   0.   0.   0.   0.07]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.3  0.   0.   0.   0.   0.   1.48 0.78 0.   0.3 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.3  0.   0.   0.   0.   1.48 0.   0.78 0.   0.3 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.3  0.   0.   0.   0.   0.78 0.78 0.   0.78 0.3 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.3  0.66 0.   0.   0.   0.   0.   0.78 0.   0.3 ]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;go&#34;&gt; [0.22 0.18 0.07 0.07 0.07 0.3  0.3  0.3  0.3  0.  ]]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  除了PMI,还有很多种其他方法可以达到类似的目的，如信息检索中常用的 TF-IDF等，在此不再加以赘述。&lt;/p&gt;
&lt;h4 id=&#34;奇异值分解&#34;&gt;奇异值分解
&lt;/h4&gt;&lt;p&gt;  下面看如何解决共现频次无法反映词之间高阶关系的问题。相关的技术有很
多，其中&lt;strong&gt;奇异值分解（Singular Value Decomposition，SVD）&lt;/strong&gt;‌是一种常见的做法。对共现矩阵 \(\bm{M}\) 进行奇异值分解：&lt;/p&gt;
&lt;span id=&#34;20241113214042CST&#34;&gt;&lt;/span&gt;\[
\bm{M}=\bm{U}\bm{\Sigma}\bm{V}^T
\tag{6}
    \]
&lt;p&gt;  式中： \(\bm{U} \in \mathbb{R}^{|\mathbb{V}|\times r}, \bm{V} \in \mathbb{R}^{r \times |\mathbb{C}}|\) 为正交矩阵，满足 \(\bm{U}^T\bm{U}=\bm{V}^T\bm{V}=\bm{I}\) ； \(\bm{\Sigma} \in \mathbb{R}^{r \times r}\) 是由 \(r\) 个&lt;strong&gt;奇异值(Singular Value)&lt;/strong&gt;‌构成的对角矩阵。&lt;br&gt;
  若在 \(\bm{\Sigma}\) 中仅保留 \(d\) 个（ \(d &lt; r\) ）最大的奇异值（ \(\bm{U}\) 和 \(\bm{V}\) 也只保留相应的维度），则被称为&lt;strong&gt;截断奇异值分解(Truncated Singular Value Decomposition)&lt;/strong&gt;。截断奇异值分解实际上是对矩阵M的低秩近似（详细见&lt;a class=&#34;link&#34; onclick=&#34;alert(&#39;抱歉，“矩阵分析”还未上线~&#39;)&#34;&gt;截断奇异值分解&lt;/a&gt;）。&lt;br&gt;
  通过截断奇异值分解所得到的矩阵 \(\bm{U}\) 中的每一行，则为相应词的 \(d\) 维向量表示，该向量一般具有连续、低维和稠密的性质。由于 \(\bm{U}\) 的各列相互正交，因此可以认为词表示的每一维表达了该词的一种独立的“潜在语义”，所以这种方法也被称作&lt;strong&gt;潜在语义分析（Latent Semantic Analysis，LSA）&lt;/strong&gt;。相应地， \(\bm{\Sigma}\bm{V}^T\) 的每一列也可以作为相应上下文的向量表示。&lt;br&gt;
  在Python的&lt;code&gt;numpy.linalg&lt;/code&gt;库中内置了SVD函数，只需要输入共现矩阵，然后调用相应的函数即可。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Vh&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;np&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;linalg&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;svd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;M_pmi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  执行结束后，矩阵 \(\bm{U}\) 中的每一行为相应词经过奇异值分解后的向量表示。如果仅保留前两维，每个词就可以显示为二维平面中的一个点，然后使用下面的代码进行可视化：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;plt&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rcParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;font.sans-serif&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;SimSun&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 正常显示中文&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rcParams&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;axes.unicode_minus&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 正常显示负号&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;我&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;喜欢&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;自然&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;语言&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;处理&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;爱&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;深度&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;学习&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;机器&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;。&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;text&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xlim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ylim&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;savefig&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;svd.svg&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;plt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  截断奇异值分解结果如&lt;a class=&#34;link&#34; href=&#34;#20241113224958CST&#34;&gt;图1&lt;/a&gt;所示，可见：上下文比较相近的词在空间上的距离比较近，如“深度”“学习”等；而“我”和等高频词则与其他词语距离比较远。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241113224958CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 390.7997 283.5612&#34; style=&#34;max-width:390.7997;&#34;&gt;
  &lt;g id=&#34;axes_1&#34;&gt;
    &lt;g id=&#34;matplotlib.axis_1&#34;&gt;
      &lt;g id=&#34;xtick_1&#34;&gt;
        &lt;g id=&#34;line2d_1&#34;&gt;
          &lt;path id=&#34;maae9ed10b9&#34; d=&#34;M26.6875,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_1&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d&#34; d=&#34;M17,280.1237v-.3516h4.3359v.3516h-4.3359Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30&#34; d=&#34;M24.1875,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM24.1875,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e&#34; d=&#34;M27.9375,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-36&#34; d=&#34;M32.8984,280.7877c0,.7813.1365,1.387.4094,1.8172.274.4292.6063.6438.9969.6438s.6901-.1432.8984-.4297.3125-.8203.3125-1.6016c0-.5208-.1109-.9245-.3328-1.2109-.2208-.2865-.4875-.4297-.8-.4297-.2865,0-.5536.0849-.8016.2547-.2469.1688-.4745.4875-.6828.9563h0ZM34.4219,279.1862c.625,0,1.074.2083,1.3469.625.274.4167.4109.8854.4109,1.4063,0,.7813-.1891,1.3609-.5672,1.7391-.3771.3771-.813.5656-1.3078.5656-.7031,0-1.237-.2667-1.6016-.8-.3646-.5344-.5469-1.3094-.5469-2.325,0-1.1979.2214-2.1156.6641-2.7531.4427-.6385,1.0417-.9578,1.7969-.9578.3646,0,.6573.1042.8781.3125.2219.2083.3328.3906.3328.5469s-.0328.2734-.0984.3516c-.0646.0781-.175.1172-.3313.1172-.1302,0-.2281-.0323-.2938-.0969-.0646-.0656-.0969-.1635-.0969-.2938,0-.0521.013-.1042.0391-.1563v-.1563c0-.1042-.0391-.1885-.1172-.2531-.0781-.0656-.2214-.0984-.4297-.0984-.4427,0-.8203.2021-1.1328.6063-.3125.4031-.4688,1.2818-.4688,2.6359.1563-.3385.3708-.5922.6438-.7609.274-.1698.5672-.2547.8797-.2547h0Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;xtick_2&#34;&gt;
        &lt;g id=&#34;line2d_2&#34;&gt;
          &lt;path id=&#34;maae9ed10b9-2&#34; d=&#34;M86.2075,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_2&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-2&#34; d=&#34;M76.52,280.1237v-.3516h4.3359v.3516h-4.3359Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-2&#34; d=&#34;M83.7075,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM83.7075,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-2&#34; d=&#34;M87.4575,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-35&#34; d=&#34;M93.9028,279.1471c.4948,0,.8984.1891,1.2109.5672.3125.3771.4688.8781.4688,1.5031,0,.7031-.163,1.263-.4891,1.6797-.325.4167-.826.625-1.5031.625-.4688,0-.8854-.1365-1.25-.4094-.3646-.274-.5469-.6063-.5469-.9969,0-.1563.0453-.2927.1359-.4094.0917-.1177.2156-.1766.3719-.1766s.2604.0521.3125.1563.0781.1953.0781.2734c0,.1563-.0391.2734-.1172.3516-.0781.1042-.1172.2083-.1172.3125,0,.2083.1234.3646.3703.4688.2479.1042.5151.1563.8016.1563.4167,0,.7354-.1693.9563-.5078.2219-.3385.3328-.8203.3328-1.4453,0-.5208-.0979-.9438-.2938-1.2688-.1948-.326-.4875-.4891-.8781-.4891-.2865,0-.5339.0521-.7422.1563-.2083.1042-.4036.3255-.5859.6641l-.3516-.0391.1953-3.5547h3.2031l-.1172.5859h-2.8125l-.1563,2.5781c.2604-.3646.5141-.5859.7609-.6641.2479-.0781.5021-.1172.7625-.1172h.0002Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;xtick_3&#34;&gt;
        &lt;g id=&#34;line2d_3&#34;&gt;
          &lt;path id=&#34;maae9ed10b9-3&#34; d=&#34;M145.7275,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_3&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-3&#34; d=&#34;M136.04,280.1237v-.3516h4.3359v.3516h-4.3359Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-3&#34; d=&#34;M143.2275,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM143.2275,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-3&#34; d=&#34;M146.9775,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-34&#34; d=&#34;M154.3212,282.7018c0,.1823.0521.3125.1563.3906s.2474.1172.4297.1172h.3516v.2344h-2.5781v-.2344h.4297c.2083,0,.3578-.0391.4484-.1172.0917-.0781.1375-.2083.1375-.3906v-1.2891h-2.6172v-.1953l2.8516-4.5313h.3906v4.4922h1.0547v.2344h-1.0547v1.2891h0ZM153.6572,277.6627l-2.2266,3.5156h2.2656v-3.5156h-.0391,0Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;xtick_4&#34;&gt;
        &lt;g id=&#34;line2d_4&#34;&gt;
          &lt;path id=&#34;maae9ed10b9-4&#34; d=&#34;M205.2475,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_4&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-4&#34; d=&#34;M195.56,280.1237v-.3516h4.3359v.3516h-4.3359Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-4&#34; d=&#34;M202.7475,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM202.7475,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-4&#34; d=&#34;M206.4975,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-33&#34; d=&#34;M214.6225,281.6471c0,.4948-.1823.9313-.5469,1.3094-.3646.3771-.8724.5656-1.5234.5656-.4688,0-.8724-.1302-1.2109-.3906s-.5078-.5599-.5078-.8984c0-.1563.0521-.2927.1563-.4094.1042-.1177.2083-.1766.3125-.1766.1563,0,.2667.0589.3313.1766.0656.1167.0984.2141.0984.2922,0,.1302-.026.2344-.0781.3125-.0521.1042-.0781.1953-.0781.2734,0,.1563.0974.2865.2922.3906.1958.1042.4109.1563.6453.1563.4688,0,.8203-.1365,1.0547-.4094.2344-.274.3516-.6974.3516-1.2703,0-.4688-.124-.8464-.3719-1.1328-.2469-.2865-.7089-.4297-1.3859-.4297v-.2734c.5208,0,.9047-.1234,1.1516-.3703.2479-.2479.3719-.5932.3719-1.0359,0-.3646-.0979-.6833-.2938-.9563-.1948-.274-.5005-.4109-.9172-.4109-.1823,0-.3776.0458-.5859.1375-.2083.0906-.3125.2401-.3125.4484s.026.3385.0781.3906.0781.1172.0781.1953c0,.1302-.026.2344-.0781.3125s-.1432.1172-.2734.1172c-.1042,0-.2021-.0391-.2938-.1172-.0906-.0781-.1359-.2214-.1359-.4297,0-.3906.1693-.7094.5078-.9563.3385-.2479.7292-.3719,1.1719-.3719.5208,0,.9375.163,1.25.4891.3125.325.4688.6698.4688,1.0344,0,.3906-.0979.7229-.2938.9969-.1948.2729-.5005.4745-.9172.6047.5729.2083.9635.4818,1.1719.8203.2083.3385.3125.6771.3125,1.0156h-.0003Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;xtick_5&#34;&gt;
        &lt;g id=&#34;line2d_5&#34;&gt;
          &lt;path id=&#34;maae9ed10b9-5&#34; d=&#34;M264.7675,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_5&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-5&#34; d=&#34;M255.08,280.1237v-.3516h4.3359v.3516h-4.3359Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-5&#34; d=&#34;M262.2675,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM262.2675,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-5&#34; d=&#34;M266.0175,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-32&#34; d=&#34;M273.4003,278.4049c0-.4688-.1042-.8266-.3125-1.0734-.2083-.2479-.5208-.3719-.9375-.3719-.3125,0-.5797.0849-.8016.2547-.2208.1688-.3313.3833-.3313.6438,0,.1563.0521.2865.1563.3906.0781.1042.1172.2083.1172.3125,0,.1302-.0328.2281-.0984.2938-.0646.0646-.162.0969-.2922.0969-.1563,0-.2802-.0453-.3719-.1359-.0906-.0917-.1359-.2417-.1359-.45,0-.5469.1953-.9635.5859-1.25s.8073-.4297,1.25-.4297c.625,0,1.087.1563,1.3859.4688.3.3125.45.7031.45,1.1719,0,.3125-.0719.625-.2156.9375-.1427.3125-.3703.612-.6828.8984-.7552.7292-1.3349,1.3219-1.7391,1.7781-.4031.4552-.6438.7609-.7219.9172h2.3047c.2344,0,.4297-.0911.5859-.2734s.2604-.4557.3125-.8203h.2344l-.2344,1.6797h-3.6328v-.5078c.1302-.2344.3448-.5339.6438-.8984.3-.3646.6974-.7943,1.1922-1.2891.4427-.4427.7682-.8594.9766-1.25.2083-.3906.3125-.7552.3125-1.0938v-.0002Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;xtick_6&#34;&gt;
        &lt;g id=&#34;line2d_6&#34;&gt;
          &lt;path id=&#34;maae9ed10b9-6&#34; d=&#34;M324.2875,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_6&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-6&#34; d=&#34;M314.6,280.1237v-.3516h4.3359v.3516h-4.3359Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-6&#34; d=&#34;M321.7875,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM321.7875,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-6&#34; d=&#34;M325.5375,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-31&#34; d=&#34;M332.1391,276.6471v5.9375c0,.2083.0651.3646.1953.4688s.3125.1563.5469.1563h.3906v.2344h-2.8516v-.2344h.3516c.2604,0,.449-.0521.5656-.1563.1177-.1042.1766-.2604.1766-.4688v-4.7266c0-.1042-.0328-.1885-.0984-.2531-.0646-.0656-.162-.0984-.2922-.0984h-.7031v-.2344h.3516c.3125,0,.5661-.0521.7609-.1563.1958-.1042.3458-.2604.45-.4688h.1563-.0002Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;xtick_7&#34;&gt;
        &lt;g id=&#34;line2d_7&#34;&gt;
          &lt;path id=&#34;maae9ed10b9-7&#34; d=&#34;M383.8075,269.4518v3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_7&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-30-7&#34; d=&#34;M378.8075,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM378.8075,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-7&#34; d=&#34;M382.5575,283.5612c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-8&#34; d=&#34;M388.8075,276.9987c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM388.8075,283.5221c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;matplotlib.axis_2&#34;&gt;
      &lt;g id=&#34;ytick_1&#34;&gt;
        &lt;g id=&#34;line2d_8&#34;&gt;
          &lt;path id=&#34;m700752b6b1&#34; d=&#34;M26.6875,269.4518h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_8&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-7&#34; d=&#34;M0,269.5495v-.3516h4.3359v.3516H0Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-9&#34; d=&#34;M7.1875,266.4245c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,272.9479c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-8&#34; d=&#34;M10.9375,272.987c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-36-2&#34; d=&#34;M15.8984,270.2136c0,.7813.1365,1.387.4094,1.8172.274.4292.6063.6438.9969.6438s.6901-.1432.8984-.4297c.2083-.2865.3125-.8203.3125-1.6016,0-.5208-.1109-.9245-.3328-1.2109-.2208-.2865-.4875-.4297-.8-.4297-.2865,0-.5536.0849-.8016.2547-.2469.1688-.4745.4875-.6828.9563h0ZM17.4219,268.612c.625,0,1.074.2083,1.3469.625.274.4167.4109.8854.4109,1.4063,0,.7813-.1891,1.3609-.5672,1.7391-.3771.3771-.813.5656-1.3078.5656-.7031,0-1.237-.2667-1.6016-.8-.3646-.5344-.5469-1.3094-.5469-2.325,0-1.1979.2214-2.1156.6641-2.7531.4427-.6385,1.0417-.9578,1.7969-.9578.3646,0,.6573.1042.8781.3125.2219.2083.3328.3906.3328.5469s-.0328.2734-.0984.3516c-.0646.0781-.175.1172-.3313.1172-.1302,0-.2281-.0323-.2938-.0969-.0646-.0656-.0969-.1635-.0969-.2938,0-.0521.013-.1042.0391-.1563v-.1563c0-.1042-.0391-.1885-.1172-.2531-.0781-.0656-.2214-.0984-.4297-.0984-.4427,0-.8203.2021-1.1328.6063-.3125.4031-.4688,1.2818-.4688,2.6359.1563-.3385.3708-.5922.6438-.7609.274-.1698.5672-.2547.8797-.2547h0Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;ytick_2&#34;&gt;
        &lt;g id=&#34;line2d_9&#34;&gt;
          &lt;path id=&#34;m700752b6b1-2&#34; d=&#34;M26.6875,225.0998h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_9&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-8&#34; d=&#34;M0,225.1975v-.3516h4.3359v.3516H0Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-10&#34; d=&#34;M7.1875,222.0725c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,228.5959c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-9&#34; d=&#34;M10.9375,228.635c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-34-2&#34; d=&#34;M18.2813,227.7756c0,.1823.0521.3125.1563.3906s.2474.1172.4297.1172h.3516v.2344h-2.5781v-.2344h.4297c.2083,0,.3578-.0391.4484-.1172.0917-.0781.1375-.2083.1375-.3906v-1.2891h-2.6172v-.1953l2.8516-4.5313h.3906v4.4922h1.0547v.2344h-1.0547v1.2891h0ZM17.6172,222.7365l-2.2266,3.5156h2.2656v-3.5156h-.0391.0001Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;ytick_3&#34;&gt;
        &lt;g id=&#34;line2d_10&#34;&gt;
          &lt;path id=&#34;m700752b6b1-3&#34; d=&#34;M26.6875,180.7478h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_10&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-2d-9&#34; d=&#34;M0,180.8455v-.3516h4.3359v.3516H0Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-11&#34; d=&#34;M7.1875,177.7205c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,184.2439c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-10&#34; d=&#34;M10.9375,184.283c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-32-2&#34; d=&#34;M18.3203,179.1267c0-.4688-.1042-.8266-.3125-1.0734-.2083-.2479-.5208-.3719-.9375-.3719-.3125,0-.5797.0849-.8016.2547-.2208.1688-.3313.3833-.3313.6438,0,.1563.0521.2865.1563.3906.0781.1042.1172.2083.1172.3125,0,.1302-.0328.2281-.0984.2938-.0646.0646-.162.0969-.2922.0969-.1563,0-.2802-.0453-.3719-.1359-.0906-.0917-.1359-.2417-.1359-.45,0-.5469.1953-.9635.5859-1.25s.8073-.4297,1.25-.4297c.625,0,1.087.1563,1.3859.4688.3.3125.45.7031.45,1.1719,0,.3125-.0719.625-.2156.9375-.1427.3125-.3703.612-.6828.8984-.7552.7292-1.3349,1.3219-1.7391,1.7781-.4031.4552-.6438.7609-.7219.9172h2.3047c.2344,0,.4297-.0911.5859-.2734s.2604-.4557.3125-.8203h.2344l-.2344,1.6797h-3.6328v-.5078c.1302-.2344.3448-.5339.6438-.8984.3-.3646.6974-.7943,1.1922-1.2891.4427-.4427.7682-.8594.9766-1.25.2083-.3906.3125-.7552.3125-1.0938v-.0002Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;ytick_4&#34;&gt;
        &lt;g id=&#34;line2d_11&#34;&gt;
          &lt;path id=&#34;m700752b6b1-4&#34; d=&#34;M26.6875,136.3958h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_11&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-30-12&#34; d=&#34;M7.1875,133.3685c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,139.8919c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-11&#34; d=&#34;M10.9375,139.931c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-30-13&#34; d=&#34;M17.1875,133.3685c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM17.1875,139.8919c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;ytick_5&#34;&gt;
        &lt;g id=&#34;line2d_12&#34;&gt;
          &lt;path id=&#34;m700752b6b1-5&#34; d=&#34;M26.6875,92.0438h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_12&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-30-14&#34; d=&#34;M7.1875,89.0165c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,95.5399c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-12&#34; d=&#34;M10.9375,95.579c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-32-3&#34; d=&#34;M18.3203,90.4227c0-.4688-.1042-.8266-.3125-1.0734-.2083-.2479-.5208-.3719-.9375-.3719-.3125,0-.5797.0849-.8016.2547-.2208.1688-.3313.3833-.3313.6438,0,.1563.0521.2865.1563.3906.0781.1042.1172.2083.1172.3125,0,.1302-.0328.2281-.0984.2938-.0646.0646-.162.0969-.2922.0969-.1563,0-.2802-.0453-.3719-.1359-.0906-.0917-.1359-.2417-.1359-.45,0-.5469.1953-.9635.5859-1.25s.8073-.4297,1.25-.4297c.625,0,1.087.1563,1.3859.4688.3.3125.45.7031.45,1.1719,0,.3125-.0719.625-.2156.9375-.1427.3125-.3703.612-.6828.8984-.7552.7292-1.3349,1.3219-1.7391,1.7781-.4031.4552-.6438.7609-.7219.9172h2.3047c.2344,0,.4297-.0911.5859-.2734s.2604-.4557.3125-.8203h.2344l-.2344,1.6797h-3.6328v-.5078c.1302-.2344.3448-.5339.6438-.8984.3-.3646.6974-.7943,1.1922-1.2891.4427-.4427.7682-.8594.9766-1.25.2083-.3906.3125-.7552.3125-1.0938v-.0002Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;ytick_6&#34;&gt;
        &lt;g id=&#34;line2d_13&#34;&gt;
          &lt;path id=&#34;m700752b6b1-6&#34; d=&#34;M26.6875,47.6918h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_13&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-30-15&#34; d=&#34;M7.1875,44.6645c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,51.1879c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-13&#34; d=&#34;M10.9375,51.227c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-34-3&#34; d=&#34;M18.2812,50.3676c0,.1823.0521.3125.1563.3906s.2474.1172.4297.1172h.3516v.2344h-2.5781v-.2344h.4297c.2083,0,.3578-.0391.4484-.1172.0917-.0781.1375-.2083.1375-.3906v-1.2891h-2.6172v-.1953l2.8516-4.5313h.3906v4.4922h1.0547v.2344h-1.0547v1.2891h0ZM17.6172,45.3286l-2.2266,3.5156h2.2656v-3.5156h-.0391.0001Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
      &lt;g id=&#34;ytick_7&#34;&gt;
        &lt;g id=&#34;line2d_14&#34;&gt;
          &lt;path id=&#34;m700752b6b1-7&#34; d=&#34;M26.6875,3.3398h-3.5&#34; style=&#34;stroke: #000; stroke-linejoin: round; stroke-width: .8px;&#34;/&gt;
        &lt;/g&gt;
        &lt;g id=&#34;text_14&#34;&gt;
          &lt;g&gt;
            &lt;path id=&#34;SimSun-30-16&#34; d=&#34;M7.1875.3125c-.3646,0-.6708.2802-.9188.8406-.2469.5594-.3703,1.3078-.3703,2.2453,0,.9896.1234,1.7578.3703,2.3047.2479.5469.5542.8203.9188.8203.3906,0,.6964-.2734.9172-.8203.2219-.5469.3328-1.3151.3328-2.3047,0-.9375-.1042-1.6859-.3125-2.2453-.2083-.5604-.5208-.8406-.9375-.8406ZM7.1875,6.8359c-.5729,0-1.0547-.2995-1.4453-.8984-.3906-.599-.5859-1.4453-.5859-2.5391,0-1.0156.1885-1.8359.5656-2.4609.3781-.625.8667-.9375,1.4656-.9375.5729,0,1.0479.2995,1.425.8984.3781.599.5672,1.4323.5672,2.5s-.1891,1.9078-.5672,2.5203c-.3771.6115-.8521.9172-1.425.9172Z&#34;/&gt;
            &lt;path id=&#34;SimSun-2e-14&#34; d=&#34;M10.9375,6.875c-.1563,0-.2932-.0521-.4109-.1563-.1167-.1042-.175-.2474-.175-.4297s.0583-.3255.175-.4297c.1177-.1042.2547-.1563.4109-.1563s.2927.0589.4094.1766c.1177.1167.1766.2531.1766.4094,0,.1823-.0589.3255-.1766.4297-.1167.1042-.2531.1563-.4094.1563Z&#34;/&gt;
            &lt;path id=&#34;SimSun-36-3&#34; d=&#34;M15.8984,4.1016c0,.7813.1365,1.387.4094,1.8172.274.4292.6063.6438.9969.6438s.6901-.1432.8984-.4297c.2083-.2865.3125-.8203.3125-1.6016,0-.5208-.1109-.9245-.3328-1.2109-.2208-.2865-.4875-.4297-.8-.4297-.2865,0-.5536.0849-.8016.2547-.2469.1688-.4745.4875-.6828.9563h0ZM17.4219,2.5c.625,0,1.074.2083,1.3469.625.274.4167.4109.8854.4109,1.4063,0,.7813-.1891,1.3609-.5672,1.7391-.3771.3771-.813.5656-1.3078.5656-.7031,0-1.237-.2667-1.6016-.8-.3646-.5344-.5469-1.3094-.5469-2.325,0-1.1979.2214-2.1156.6641-2.7531C16.263.3194,16.862,0,17.6172,0c.3646,0,.6573.1042.8781.3125.2219.2083.3328.3906.3328.5469s-.0328.2734-.0984.3516c-.0646.0781-.175.1172-.3313.1172-.1302,0-.2281-.0323-.2938-.0969-.0646-.0656-.0969-.1635-.0969-.2938,0-.0521.013-.1042.0391-.1563v-.1563c0-.1042-.0391-.1885-.1172-.2531-.0781-.0656-.2214-.0984-.4297-.0984-.4427,0-.8203.2021-1.1328.6063-.3125.4031-.4688,1.2818-.4688,2.6359.1563-.3385.3708-.5922.6438-.7609.274-.1698.5672-.2547.8797-.2547h0Z&#34;/&gt;
          &lt;/g&gt;
        &lt;/g&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;patch_3&#34;&gt;
      &lt;path d=&#34;M26.6875,269.4518V3.3398&#34; style=&#34;fill: none; stroke: #000; stroke-linecap: square; stroke-width: .8px;&#34;/&gt;
    &lt;/g&gt;
    &lt;g id=&#34;patch_4&#34;&gt;
      &lt;path d=&#34;M383.8075,269.4518V3.3398&#34; style=&#34;fill: none; stroke: #000; stroke-linecap: square; stroke-width: .8px;&#34;/&gt;
    &lt;/g&gt;
    &lt;g id=&#34;patch_5&#34;&gt;
      &lt;path d=&#34;M26.6875,269.4518h357.12&#34; style=&#34;fill: none; stroke: #000; stroke-linecap: square; stroke-width: .8px;&#34;/&gt;
    &lt;/g&gt;
    &lt;g id=&#34;patch_6&#34;&gt;
      &lt;path d=&#34;M26.6875,3.3398h357.12&#34; style=&#34;fill: none; stroke: #000; stroke-linecap: square; stroke-width: .8px;&#34;/&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_15&#34;&gt;
      &lt;path id=&#34;SimSun-6211&#34; d=&#34;M245.8894,116.7274c.3385.0521.6703.0911.9953.1172.326.026.476-.1172.45-.4297v-2.0703c-1.1458.4688-1.7708.7943-1.875.9766l-.4688-.7813c.3906-.0521,1.1719-.2604,2.3438-.625v-1.9531h-1.0547c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h2.3438v-1.7969c-.599.0781-1.25.1563-1.9531.2344v-.1563c.5469-.0781,1.1849-.2146,1.9141-.4094.7292-.1958,1.237-.424,1.5234-.6844l.5859.7031c-.4427.0521-.9505.1302-1.5234.2344v1.875h2.0703c-.0521-1.4583-.0911-2.4609-.1172-3.0078l1.0156.4688-.3906.2734c0,.599.013,1.3542.0391,2.2656h2.0313l.5469-.5469.7813.7813h-3.3203c.0781,1.3281.2083,2.2396.3906,2.7344.625-.7552,1.1198-1.5234,1.4844-2.3047l.6641.6641-.4297.1563c-.3125.4688-.8203,1.1328-1.5234,1.9922.599.8594,1.3281,1.4323,2.1875,1.7188l.3125-1.7188h.1563c-.0781,1.25.013,2.0182.2734,2.3047.0521.0521.0781.1042.0781.1563,0,0-.0068.0063-.0203.0188-.0125.0135-.0448.0203-.0969.0203-.1823,0-.599-.1109-1.25-.3328-.651-.2208-1.3281-.826-2.0313-1.8156-.7031.5469-1.5885,1.0286-2.6563,1.4453l-.0391-.1563c1.0938-.599,1.9141-1.1719,2.4609-1.7188-.2344-.599-.4036-1.6536-.5078-3.1641h-2.1094v1.7969l1.6797-.5078.0781.1172-1.7578.7422v2.6172c0,.4948-.3125.8333-.9375,1.0156,0-.3385-.3516-.625-1.0547-.8594v-.1563h0ZM251.4753,109.2664c.4688.2083.8396.4036,1.1125.5859.274.1823.424.3583.45.5281.026.1688-.013.312-.1172.4297-.1042.1167-.1823.175-.2344.175-.1042,0-.2083-.1042-.3125-.3125-.1563-.3125-.4818-.7422-.9766-1.2891l.0781-.1172h0Z&#34;/&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_16&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-559c&#34; d=&#34;M232.6838,179.8718h3.4766c0-.4688-.013-.8594-.0391-1.1719l.8984.3516-.3516.2734v.5469h2.3047l.5469-.5469.7813.7813h-3.6328v.9375h1.4844l.4688-.4688.7031.7031h-4.2969c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h2.4219v-.9375h-2.1875c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h0ZM239.0509,186.9421c0,.2604.013.5208.0391.7813l-.5469.1953v-.5859h-3.9844v.3906l-.5469.1953c.026-.4167.0391-.8594.0391-1.3281s-.013-.8984-.0391-1.2891l.5859.3125h3.9063l.2734-.3516.5469.4688-.2734.1953v1.0156h0ZM234.5588,185.8483v1.25h3.9844v-1.25h-3.9844ZM233.9728,181.5515l.5469.3125h3.8672l.2734-.3516.5469.4297-.2734.2344v.625c0,.2344.013.4948.0391.7813l-.5469.1953v-.3516h-3.9063v.2734l-.5469.1953c.026-.3385.0391-.7422.0391-1.2109s-.013-.8464-.0391-1.1328h0ZM234.5197,182.0983v1.0938h3.9063v-1.0938h-3.9063ZM234.8322,183.6608l.0781-.0781c.4427.1563.7161.2932.8203.4109.1042.1167.1563.2141.1563.2922,0,.1563-.0651.3125-.1953.4688h1.4453c.2604-.4688.4427-.8984.5469-1.2891l.5859.4297c-.1823.1042-.3453.2281-.4891.3719-.1427.1427-.2922.3052-.4484.4875h2.2656l.5469-.5469.7813.7813h-7.5781c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h3.3984c-.026-.2865-.2344-.651-.625-1.0938h0Z&#34;/&gt;
        &lt;path id=&#34;SimSun-6b22&#34; d=&#34;M245.5744,180.5358c-.1563.4948-.2995.9505-.4297,1.3672-.1302.4427-.3255.9635-.5859,1.5625.5208.651.8526,1.1328.9953,1.4453.1438.3125.2156.5339.2156.6641,0,.1563-.0391.2995-.1172.4297s-.1432.1953-.1953.1953c-.1042,0-.2083-.1693-.3125-.5078-.1823-.4688-.4688-1.0286-.8594-1.6797-.1823.3646-.4557.8141-.8203,1.3484-.3646.5333-.8594,1.0604-1.4844,1.5813l-.0781-.1172c.8854-.9635,1.5755-2.0573,2.0703-3.2813-.4948-.8073-1.0547-1.5625-1.6797-2.2656l.0781-.1172c.7292.651,1.3411,1.276,1.8359,1.875.2604-.625.5208-1.4974.7813-2.6172h-2.3438l-.3516.0781-.3125-.3125h2.9688l.4297-.4688.5859.5859-.3906.2344h0ZM249.4416,182.489l.5469-1.2109h-2.8125c-.3385.7552-.7682,1.4714-1.2891,2.1484l-.1172-.0781c.4427-.8073.7813-1.6339,1.0156-2.4797.2344-.8469.3906-1.5307.4688-2.0516l.8594.4688-.3516.2734c-.1302.3906-.2995.8854-.5078,1.4844h2.6563l.4297-.4688.6641.7422c-.2344.0521-.4688.1823-.7031.3906s-.4818.4948-.7422.8594l-.1172-.0781h-.0002ZM247.8009,181.6686l.8594.3906-.2734.2344c.1563,1.3281.4557,2.3958.8984,3.2031.4427.8073,1.0286,1.3411,1.7578,1.6016v.1172c-.3906,0-.6641.1302-.8203.3906-.7031-.6771-1.1849-1.3865-1.4453-2.1281-.2604-.7427-.4427-1.6609-.5469-2.7547-.2083,1.5625-.6318,2.7083-1.2703,3.4375-.6375.7292-1.4771,1.263-2.5188,1.6016l-.0391-.1563c1.0938-.4688,1.9141-1.1589,2.4609-2.0703.5469-.9115.8594-2.2005.9375-3.8672h0Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_17&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-81ea&#34; d=&#34;M209.0609,234.119c0,.2604.013.5208.0391.7813l-.625.2344v-.8203h-4.6875v.625l-.625.1953c.026-.4427.0391-1.7188.0391-3.8281s-.013-3.3724-.0391-3.7891l.625.3516h1.1719c.2865-.651.4818-1.276.5859-1.875l.9375.4297c-.2344.1302-.4755.3583-.7234.6844-.2469.325-.4224.5786-.5266.7609h3.1641l.3125-.4688.7422.5469-.3906.3125v5.8594h-.0001ZM203.7874,228.1034v1.7188h4.6875v-1.7188h-4.6875ZM203.7874,230.0565v1.9531h4.6875v-1.9531h-4.6875ZM203.7874,232.244v1.8359h4.6875v-1.8359h-4.6875Z&#34;/&gt;
        &lt;path id=&#34;SimSun-7136&#34; d=&#34;M218.2796,226.619l.0781-.1172c.599.3385.9635.5797,1.0938.7234.1302.1427.1953.2792.1953.4094s-.0458.2734-.1375.4297c-.0906.1563-.162.2344-.2141.2344-.1042,0-.1953-.1432-.2734-.4297-.1302-.4167-.3776-.8333-.7422-1.25h0ZM213.6312,225.994l.8594.4688-.2734.1953c-.1563.2865-.3255.651-.5078,1.0938h1.5234l.2734-.4297.6641.5078-.3125.2734c-.3646,1.4063-.8531,2.474-1.4656,3.2031-.6115.7292-1.5031,1.3281-2.675,1.7969l-.0391-.1172c.9896-.5469,1.7641-1.1911,2.3234-1.9328.5604-.7427.9839-1.7651,1.2703-3.0672h-1.6797c-.0781.1042-.1693.2604-.2734.4688.5208.1823.8526.3323.9953.45.1438.1167.2156.2401.2156.3703,0,.0521-.026.15-.0781.2938-.0521.1427-.1042.2141-.1563.2141s-.1172-.0781-.1953-.2344c-.1563-.2604-.4427-.5729-.8594-.9375-.1563.2604-.2995.4948-.4297.7031.4688.2865.7552.4885.8594.6063.1042.1167.1563.2271.1563.3313,0,.1302-.0458.2604-.1375.3906-.0906.1302-.162.1953-.2141.1953-.0781,0-.1432-.1042-.1953-.3125-.1042-.3385-.2995-.6901-.5859-1.0547-.3125.4167-.651.7682-1.0156,1.0547l-.1172-.0781c.5208-.599.9635-1.3281,1.3281-2.1875s.612-1.6146.7422-2.2656v-.0003ZM217.1859,228.8065c.026-1.1979.026-2.1224,0-2.7734l.8594.3906-.2734.2734c-.026.7031-.0391,1.4063-.0391,2.1094h1.4063l.5078-.5078.7031.7422h-2.3047c.5208,1.6406,1.3802,2.6172,2.5781,2.9297v.1563c-.4688.0521-.7682.1953-.8984.4297-.9896-.9115-1.6146-2.0833-1.875-3.5156h-.1563c-.1042,1.0156-.3646,1.7839-.7813,2.3047-.4167.5208-1.1068.9896-2.0703,1.4063l-.0781-.1172c.7292-.4167,1.2823-.8724,1.6594-1.3672.3781-.4948.6193-1.237.7234-2.2266h-.0781c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h1.4063ZM213.1624,232.9081l.1563.0391c.026.599-.026,1.0677-.1563,1.4063-.1302.3385-.3193.5271-.5672.5656-.2469.0396-.4094.0073-.4875-.0969s-.026-.2344.1563-.3906c.1823-.1823.3448-.3839.4875-.6047.1438-.2219.2807-.5281.4109-.9188h0ZM216.5999,232.9862l.1172-.0781c.4688.3646.7682.651.8984.8594.1302.2083.1953.3646.1953.4688,0,.1563-.0651.3057-.1953.4484-.1302.1438-.2214.2156-.2734.2156-.1042,0-.1693-.1302-.1953-.3906-.0521-.4167-.2344-.9245-.5469-1.5234h0ZM218.6312,232.9471l.0781-.1172c.7031.4427,1.113.7552,1.2297.9375.1177.1823.1766.3385.1766.4688,0,.1823-.0521.3385-.1563.4688s-.1823.1953-.2344.1953c-.1042,0-.1953-.1563-.2734-.4688-.1302-.4688-.4036-.9635-.8203-1.4844h0ZM214.5296,232.9471l.1172-.0781c.5208.4948.8073.8333.8594,1.0156.0521.1823.0781.3255.0781.4297,0,.2083-.0651.3646-.1953.4688s-.2214.1563-.2734.1563c-.1042,0-.1693-.1693-.1953-.5078-.026-.4688-.1563-.9635-.3906-1.4844h-.0001Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_18&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-8bed&#34; d=&#34;M205.8968,231.8925v2.1484h3.0469v-2.1484h-3.0469ZM204.5296,226.8143h4.2969l.5469-.4688.6641.7031h-3.0469l-.1953,1.2891h1.6016l.2734-.3906.5859.3906-.2734.3125v1.6016h.5859l.5078-.4688.625.7031h-5.3906c-.2865,0-.5729.0391-.8594.1172l-.3516-.3516h1.8359l.2734-1.6797h-.5078c-.0521,0-.2214.026-.5078.0781l-.3516-.3125h1.4063l.1563-1.2891h-.6641c-.2865,0-.5729.0391-.8594.1172l-.3516-.3516v.0002ZM206.7562,228.5721l-.2734,1.6797h1.9531v-1.6797h-1.6797,0ZM209.4905,232.0487c0,1.1719.013,2.0443.0391,2.6172l-.5859.2344v-.625h-3.0469v.5078l-.5859.2344c.026-.4167.0391-1.0026.0391-1.7578s-.013-1.4063-.0391-1.9531l.5859.3516h3.0078l.2734-.3906.5859.5078-.2734.2734h0ZM202.3421,226.4628l.1172-.0781c.4427.2865.7354.5016.8781.6453.1438.1427.2286.3052.2547.4875s-.013.3323-.1172.45c-.1042.1167-.1823.175-.2344.175-.1042,0-.1823-.1172-.2344-.3516-.0781-.3646-.2995-.8073-.6641-1.3281h.0001ZM202.7327,233.7284c.1563-.1042.2344-.2865.2344-.5469v-3.4375h-.2734c-.1823,0-.4557.0391-.8203.1172l-.3516-.3516h1.3672l.2734-.4297.625.4688-.3125.2734v3.4766l1.25-.9766.1172.1172c-.4167.4688-.7359.8333-.9578,1.0938-.2208.2604-.4224.5208-.6047.7813l-.5469-.5859h0Z&#34;/&gt;
        &lt;path id=&#34;SimSun-8a00&#34; d=&#34;M215.389,225.994c.8073.3385,1.2172.6318,1.2297.8797.0135.2469-.0385.4292-.1563.5469-.1167.1167-.188.175-.2141.175-.1042,0-.1953-.1302-.2734-.3906-.1042-.3385-.3255-.7031-.6641-1.0938l.0781-.1172h0ZM211.9515,227.7518h7.1094l.5469-.5469.7813.7813h-7.3438c-.2865,0-.5339.0391-.7422.1172l-.3516-.3516h0ZM213.2796,229.119h4.6484l.5469-.5469.7813.7813h-4.8828c-.2604,0-.5078.0391-.7422.1172l-.3516-.3516h0ZM213.2405,230.6425h4.8438l.5078-.5078.7422.7422h-5c-.2865,0-.5469.0391-.7813.1172l-.3125-.3516h0ZM213.553,231.619l.625.3516h3.9453l.3516-.3906.625.5078-.3516.2344c0,1.3021.013,2.1354.0391,2.5l-.625.2344v-.7813h-3.9844v.625l-.625.1953c.026-.2865.0391-.8594.0391-1.7188s-.013-1.4453-.0391-1.7578h0ZM214.178,232.205v1.8359h3.9844v-1.8359h-3.9844Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_19&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-5904&#34; d=&#34;M203.7874,228.6893c-.1042.3125-.2083.625-.3125.9375.2604,1.0417.625,1.901,1.0938,2.5781.4427-.9375.7813-2.1094,1.0156-3.5156h-1.7969,0ZM206.639,228.6893l-.3906.2344c-.1823.5469-.3646,1.1328-.5469,1.7578-.1823.651-.4427,1.3281-.7813,2.0313.3385.3906.8917.7099,1.6594.9578.7688.2469,2.1427.3443,4.1219.2922v.1172c-.4427.1563-.6901.3776-.7422.6641-1.6146-.0781-2.7865-.2474-3.5156-.5078-.7292-.2604-1.3411-.651-1.8359-1.1719-.2604.3125-.6188.638-1.075.9766-.4552.3385-1.0344.638-1.7375.8984l-.0781-.1172c.599-.3125,1.113-.6573,1.5422-1.0344.4302-.3781.7885-.7495,1.075-1.1141-.5469-.9635-.8724-1.901-.9766-2.8125-.3906.8854-.8594,1.6536-1.4063,2.3047l-.1563-.1172c.625-.9896,1.0938-2.0833,1.4063-3.2813.3125-1.1979.4818-2.0182.5078-2.4609l.8984.3906c-.1042.1302-.2021.2865-.2938.4688-.0906.1823-.2401.612-.4484,1.2891h1.6797l.4297-.4297.6641.6641h0ZM207.9671,228.9237v2.9688c0,.3906.013.8073.0391,1.25l-.625.2734c.026-.4948.0391-1.0026.0391-1.5234v-4.2188c0-.3385-.013-.8203-.0391-1.4453l.8984.4688-.3125.2734v1.7578c.8333.3125,1.4646.6188,1.8938.9188.4302.299.6063.5917.5281.8781s-.1563.4297-.2344.4297c-.1042,0-.2083-.1042-.3125-.3125-.2604-.4167-.8854-.9896-1.875-1.7188Z&#34;/&gt;
        &lt;path id=&#34;SimSun-7406&#34; d=&#34;M211.639,233.2596c.7813-.2083,1.3151-.3646,1.6016-.4688v-2.6172h-.1953c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h1.4844v-2.3828h-.2734c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h2.4609l.4688-.4688.6641.7031h-1.5234v2.3828h.3906l.4688-.4688.6641.7031h-1.5234v2.4609l1.6016-.5469.0391.1563c-.9896.4427-1.9792.9115-2.9688,1.4063l-.3125.3125-.4688-.7031-.0002.0002ZM215.5062,231.3456c.026-.8333.0391-1.6406.0391-2.4219s-.013-1.5885-.0391-2.4219l.5078.3516h3.2422l.2734-.3516.5859.4688-.3125.2344v1.8359c0,.8333.013,1.4844.0391,1.9531l-.5078.2344v-.4688h-1.4063v1.6797h1.1328l.4688-.4688.6641.7031h-2.2656v1.6016h1.6406l.5078-.5078.7031.7422h-5.3125c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h3.2813v-1.6016h-.8594c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h2.1484v-1.6797h-1.4453v.3906l-.5078.1953v.0002ZM216.014,227.0878v1.5625h1.4453v-1.5625h-1.4453ZM217.928,227.0878v1.5625h1.4063v-1.5625h-1.4063ZM216.014,228.8846v1.6406h1.4453v-1.6406h-1.4453ZM217.928,228.8846v1.6406h1.4063v-1.6406h-1.4063Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_20&#34;&gt;
      &lt;path id=&#34;SimSun-7231&#34; d=&#34;M144.4406,55.595c.4948-.4167.9245-.8984,1.2891-1.4453h-2.6563c.1302.2344.3385.5016.625.8016.2865.299.5339.5135.7422.6438h0ZM140.4952,51.4543c0,.5729-.0849.8984-.2547.9766-.1688.0781-.2922.1172-.3703.1172-.1042,0-.1953-.026-.2734-.0781s-.1172-.0911-.1172-.1172c0-.0781.1042-.2083.3125-.3906.2604-.2083.4427-.599.5469-1.1719h.1563v.4297h6.5234l.4297-.4297.6641.6641c-.1823.026-.3776.1109-.5859.2547-.2083.1427-.4427.3833-.7031.7219l-.1172-.0391.3906-.9375h-6.6017ZM143.1906,53.095c-.0781.2604-.1693.5339-.2734.8203h2.8125l.3516-.3516.5859.5859-.3516.1953c-.5469.6771-1.0417,1.1849-1.4844,1.5234.8854.4427,2.0313.6771,3.4375.7031v.1172c-.2865.026-.5078.2083-.6641.5469-1.3802-.2604-2.4219-.625-3.125-1.0938-.8594.599-2.0833,1.0026-3.6719,1.2109v-.1563c1.4063-.3125,2.513-.7552,3.3203-1.3281-.5729-.5208-1.0026-1.1068-1.2891-1.7578-.5469,1.224-1.5885,2.2396-3.125,3.0469l-.0391-.1563c1.6406-1.1198,2.6172-2.4219,2.9297-3.9063h-1.0938c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h2.4219c.0781-.4948.1172-.8984.1172-1.2109l.8594.3906-.2734.2344-.1172.5859h2.8906l.4688-.4688.6641.7031h-4.0625v.0004ZM141.3156,49.5012c.5208.2865.8396.5078.9563.6641.1177.1563.1766.2865.1766.3906s-.0458.2151-.1375.3328c-.0906.1167-.162.175-.2141.175-.0781,0-.1563-.1172-.2344-.3516-.1042-.3646-.3125-.7292-.625-1.0938l.0781-.1172h0ZM143.3077,49.3059c.625.3906.9698.6448,1.0344.7625.0656.1167.0984.2271.0984.3313,0,.1563-.0521.2932-.1563.4109-.1042.1167-.1693.175-.1953.175-.0781,0-.1432-.1302-.1953-.3906-.1042-.3646-.3255-.7682-.6641-1.2109l.0781-.0781h0ZM146.6671,49.6965c-.5729.7031-1.0156,1.1719-1.3281,1.4063l-.1172-.0781c.2083-.3125.3906-.6182.5469-.9172.1563-.3.2995-.6453.4297-1.0359l.7422.5078-.2734.1172h-.0001ZM140.2999,49.2278c1.5104-.0781,2.8906-.2083,4.1406-.3906s2.0964-.3906,2.5391-.625l.5859.7031c-.6771.026-1.6406.0911-2.8906.1953-1.25.1302-2.7083.2214-4.375.2734v-.1563h0Z&#34;/&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_21&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-6df1&#34; d=&#34;M142.9952,48.7981l.0391.4688h3.9844l.3516-.3516.625.625c-.3125,0-.7161.2995-1.2109.8984l-.1172-.0781.3906-.8594h-4.0234c.026.3385.0063.5667-.0594.6844-.0646.1167-.1427.188-.2344.2141-.0906.026-.162.0391-.2141.0391-.0781,0-.1432-.013-.1953-.0391s-.0781-.0521-.0781-.0781c0-.0781.0521-.1823.1563-.3125.1563-.1823.2865-.5859.3906-1.2109h.1953,0ZM143.8156,50.0481l.7031.5469c-.2865.1042-.612.3255-.9766.6641-.3646.3646-.7682.7161-1.2109,1.0547l-.0781-.1172c.7813-.8073,1.3021-1.5234,1.5625-2.1484h0ZM145.5343,50.1653c.9115.3646,1.4453.6318,1.6016.8016.1563.1688.2344.3313.2344.4875,0,.1042-.026.2214-.0781.3516s-.1042.1953-.1563.1953c-.0781,0-.1823-.1302-.3125-.3906-.2083-.3646-.6641-.8073-1.3672-1.3281l.0781-.1172h0ZM145.2999,53.134v2.5391c0,.4427.013.8854.0391,1.3281l-.625.2734c.026-.4948.0391-1.7969.0391-3.9063-.8854,1.5625-2.0052,2.6302-3.3594,3.2031l-.0781-.1172c1.1979-.7552,2.1745-1.862,2.9297-3.3203h-.7813c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h2.5781c0-.7292-.013-1.2891-.0391-1.6797l.8984.4297-.3125.2734v.9766h1.7188l.5078-.5469.6641.7813h-2.6172c.7813,1.4583,1.6667,2.3568,2.6563,2.6953v.1563c-.3646-.026-.651.1042-.8594.3906-.8854-.8594-1.5495-1.9401-1.9922-3.2422h-.0781,0ZM142.0577,50.0481c-.7552,2.6302-1.1719,4.1406-1.25,4.5313s-.1172.8203-.1172,1.2891v.9172c0,.1438-.0651.2156-.1953.2156-.1042,0-.2281-.026-.3719-.0781-.1427-.0521-.2141-.1693-.2141-.3516,0-.1302.0391-.3255.1172-.5859.0781-.2604.1172-.4688.1172-.625,0-.1823-.0589-.3255-.1766-.4297-.1167-.1042-.3703-.2083-.7609-.3125v-.1563c.4688.0521.7484.0719.8391.0594.0917-.0135.2089-.1307.3516-.3516.1438-.2219.6453-1.6089,1.5047-4.1609l.1563.0391h0ZM139.2452,50.9075c.8594.4167,1.2891.7552,1.2891,1.0156s-.0458.4297-.1375.5078c-.0906.0781-.149.1172-.175.1172-.0781,0-.1563-.1302-.2344-.3906-.1302-.3125-.4036-.7031-.8203-1.1719l.0781-.0781h0ZM140.1437,48.6418c.7031.3646,1.0938.625,1.1719.7813s.1172.2604.1172.3125c0,.1042-.0458.2151-.1375.3328-.0906.1167-.162.175-.2141.175-.1042,0-.1823-.1042-.2344-.3125-.1302-.3125-.3906-.7031-.7813-1.1719l.0781-.1172h0Z&#34;/&gt;
        &lt;path id=&#34;SimSun-5ea6&#34; d=&#34;M152.7609,53.2512c.026-.5208.0391-1.1198.0391-1.7969h-1.0156l-.4688.0781-.3125-.3125h1.7969c0-.3906-.013-.8203-.0391-1.2891l.8594.4297-.3125.1953v.6641h2.1875c0-.4427-.013-.8594-.0391-1.25l.8984.3906-.3516.2344v.625h.7422l.5078-.5078.7422.7422h-1.9922c0,.7552.013,1.25.0391,1.4844l-.5469.2344v-.3516h-2.1875v.1953l-.5469.2344h0ZM156.3937,54.0715c-.599.7552-1.1068,1.3151-1.5234,1.6797.8333.5208,1.9401.8073,3.3203.8594v.1563c-.4167.0781-.6641.2474-.7422.5078-1.224-.2344-2.2005-.638-2.9297-1.2109-1.25.7031-2.6042,1.1458-4.0625,1.3281l-.0391-.1563c1.3802-.2604,2.6302-.7682,3.75-1.5234-.4948-.4948-.9505-1.1068-1.3672-1.8359h-.3906l-.3516.0781-.3125-.3125h4.1016l.3516-.3516.5859.5859-.3906.1953ZM152.9952,53.8762c.4948.6771.9896,1.1979,1.4844,1.5625.5208-.4948.9635-1.0156,1.3281-1.5625h-2.8125ZM153.3077,51.4543v1.1328h2.1875v-1.1328h-2.1875ZM150.2999,49.1497l.6641.3906h3.0859c-.026-.1563-.0849-.3255-.1766-.5078-.0906-.1823-.2792-.4427-.5656-.7813l.1172-.0781c.599.2604.9438.4625,1.0344.6063.0917.1427.1375.2271.1375.2531,0,.1563-.1042.3255-.3125.5078h2.5391l.5469-.5469.7813.7813h-7.2266c.026,1.5625-.0198,2.7802-.1375,3.6531-.1167.8719-.3052,1.6203-.5656,2.2453-.2604.625-.5859,1.1979-.9766,1.7188l-.1172-.0781c.5208-.9115.8526-1.862.9953-2.8516.1438-.9896.2219-1.9984.2344-3.0266.0135-1.0292-.0057-1.7911-.0578-2.2859h-.0001Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_22&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-5b66&#34; d=&#34;M158.456,63.4949c.8333.5469,1.276.9573,1.3281,1.2313.0521.2729.013.4813-.1172.625-.1302.1427-.2214.2141-.2734.2141-.1042,0-.1953-.1432-.2734-.4297-.1042-.4167-.3646-.9375-.7813-1.5625l.1172-.0781h0ZM160.5264,63.2996c.7552.5729,1.1458.9964,1.1719,1.2703.026.2729-.026.4745-.1563.6047s-.2214.1953-.2734.1953c-.1302,0-.2214-.1563-.2734-.4688-.0781-.4427-.2734-.9505-.5859-1.5234l.1172-.0781h0ZM164.1982,67.2059l-.1172-.0781.625-1.0938h-6.6797c.0521.3385.0651.6188.0391.8406-.026.2208-.124.3573-.2938.4094-.1688.0521-.2792.0781-.3313.0781-.0781,0-.15-.0193-.2156-.0578-.0646-.0396-.0969-.0724-.0969-.0984,0-.1042.0651-.2474.1953-.4297.2083-.2865.3646-.7682.4688-1.4453h.1953l.0391.4688h4.4141c.4948-.9635.8464-1.8229,1.0547-2.5781l.8984.5859-.3906.1563c-.4427.599-.8854,1.2109-1.3281,1.8359h1.9922l.3906-.4688.7031.7813c-.4427.0521-.9635.4167-1.5625,1.0938h0ZM159.5498,71.2293c.651.1042,1.0807.1495,1.2891.1359.2083-.0125.3125-.149.3125-.4094v-1.5234h-2.9688c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h4.2578c0-.2344-.013-.5339-.0391-.8984l.4297.2344,1.3672-1.1328h-3.2422c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h4.4922l.4297-.3906.6641.7813c-.2083-.026-.4885.0521-.8406.2344-.351.1823-.8391.4688-1.4641.8594l.3125.1953-.2734.1563v.1953h2.5391l.625-.625.8594.8594h-4.0234v1.9141c0,.3906-.2995.7031-.8984.9375.026-.2865-.3906-.5729-1.25-.8594v-.1955Z&#34;/&gt;
        &lt;path id=&#34;SimSun-4e60&#34; d=&#34;M171.6201,70.7996c.8073.1563,1.3734.2281,1.6984.2156.326-.0135.4891-.2286.4891-.6453l.1563-5.8594h-5c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h6.2109l.3516-.4297.6641.5078-.3516.2734-.1563,5.8984c0,.7813-.3906,1.2891-1.1719,1.5234.026-.3646-.5208-.7161-1.6406-1.0547l.0391-.1953v.0002ZM167.3623,69.9402c.7031-.1042,2.6432-.8464,5.8203-2.2266l.0781.1563c-3.3073,1.6146-5.0391,2.6042-5.1953,2.9688l-.7031-.8984h0ZM169.3935,65.3699c.9896.4167,1.5625.7099,1.7188.8797.1563.1688.2344.3313.2344.4875s-.0391.3063-.1172.45c-.0781.1427-.1432.2141-.1953.2141-.1042,0-.2214-.1302-.3516-.3906-.2344-.4167-.6901-.9245-1.3672-1.5234l.0781-.1172h0Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_23&#34;&gt;
      &lt;g&gt;
        &lt;path id=&#34;SimSun-673a&#34; d=&#34;M246.5725,116.6576v3.3984c0,1.9271-.7292,3.3984-2.1875,4.4141l-.1172-.1172c1.1719-1.0677,1.7578-2.5,1.7578-4.2969v-1.875c0-.7031-.013-1.4193-.0391-2.1484l.5859.3906h1.7969l.3516-.3906.625.5469-.3906.2344v6.3672c0,.2604.1302.3906.3906.3906h.4688c.1302,0,.2214-.1042.2734-.3125.0521-.2083.0911-.6771.1172-1.4063h.1953c0,.5729.026.9573.0781,1.1531.0521.1948.1823.3443.3906.4484-.1563.3125-.3193.488-.4891.5266-.1688.0396-.3313.0594-.4875.0594h-.8203c-.4427,0-.6641-.2083-.6641-.625v-6.7578h-1.8359,0ZM243.9554,119.3529c0,2.7604.013,4.4271.0391,5l-.625.2734c.026-1.1458.0391-2.7344.0391-4.7656-.3906,1.0938-.9635,2.0573-1.7188,2.8906l-.0781-.1172c.7813-1.224,1.3672-2.7344,1.7578-4.5313h-.9375l-.3516.0781-.3125-.3125h1.6406c0-.9115-.013-1.7578-.0391-2.5391l.8594.3516-.2734.2734v1.9141h.5469l.4297-.4297.6641.6641h-1.6406v1.0547c.625.2344,1.0349.4167,1.2297.5469.1958.1302.2938.2995.2938.5078,0,.1302-.0198.2604-.0594.3906-.0385.1302-.0708.1953-.0969.1953-.0781,0-.1953-.1302-.3516-.3906-.2344-.3646-.5729-.7161-1.0156-1.0547h-.0001Z&#34;/&gt;
        &lt;path id=&#34;SimSun-5668&#34; d=&#34;M253.5647,116.3451v1.5234h1.5625v-1.5234h-1.5625ZM253.0179,118.767c.026-.5208.0391-1.0349.0391-1.5422,0-.5083-.013-.9969-.0391-1.4656l.5469.3516h1.5234l.2734-.3516.625.5078-.3516.2344c0,.9375.013,1.5495.0391,1.8359l-.5469.2344v-.4688h-1.5625v.3906l-.5469.2734h0ZM259.4632,121.6967c0,1.0938.013,1.8359.0391,2.2266l-.5859.2344v-.625h-1.7578v.5859l-.5469.1953c.026-.5469.0391-1.087.0391-1.6203,0-.5344-.013-1.049-.0391-1.5438l.5469.2734h1.6406l.0781-.0781c-.8854-.4948-1.5495-1.0677-1.9922-1.7188h-1.1719c-.6771.8073-1.4193,1.4063-2.2266,1.7969h1.6406l.2734-.3516.5859.4688-.2734.2344c0,1.0938.013,1.8099.0391,2.1484l-.5469.1953v-.5859h-1.5234v.5078l-.5469.1953c.026-.4427.0391-.9115.0391-1.4063v-1.25c-.5208.1823-1.0156.3255-1.4844.4297l-.0391-.1172c.7292-.2604,1.3672-.5661,1.9141-.9172.5469-.3521,1.0547-.8016,1.5234-1.3484h-1.875c-.3385,0-.651.0391-.9375.1172l-.3516-.3516h3.2813c.2344-.3646.4427-.7422.625-1.1328l.7422.5078c-.2604.1042-.5078.3125-.7422.625h2.4609c-.1302-.3646-.3906-.6771-.7813-.9375l.0781-.1172c.4948.1302.8073.2474.9375.3516s.1953.1953.1953.2734c0,.1302-.0651.2734-.1953.4297h.7813l.5469-.5469.7813.7813h-3.5156c.4427.4167.9568.7682,1.5422,1.0547.5865.2865,1.3094.4427,2.1688.4688v.1563c-.4167.0521-.6641.2344-.7422.5469l-.5859-.1953-.0391.0391h0ZM253.6819,121.6576v1.6406h1.5234v-1.6406h-1.5234ZM257.1585,121.6576v1.6406h1.7578v-1.6406h-1.7578ZM257.3929,116.3451v1.5234h1.5234v-1.5234h-1.5234ZM256.846,118.5717c.026-.4688.0391-.9438.0391-1.425,0-.4823-.013-.9448-.0391-1.3875l.5469.3516h1.4844l.2734-.3516.5859.4688-.3125.2734c0,.8594.013,1.4583.0391,1.7969l-.5469.1953v-.3906h-1.5234v.2734l-.5469.1953h0Z&#34;/&gt;
      &lt;/g&gt;
    &lt;/g&gt;
    &lt;g id=&#34;text_24&#34;&gt;
      &lt;path id=&#34;SimSun-3002&#34; d=&#34;M247.53,114.8524c.2083.0781.3516.2281.4297.45.0781.2208.1172.3833.1172.4875,0,.0781-.026.2151-.0781.4109-.0521.1948-.176.3573-.3719.4875-.1948.1302-.4224.1953-.6828.1953s-.4948-.1042-.7031-.3125c-.2083-.2083-.3193-.4359-.3328-.6828-.0125-.2479.0396-.4693.1563-.6641.1177-.1958.2677-.326.45-.3906.1823-.0656.3385-.0984.4688-.0984.1563,0,.3385.0391.5469.1172h-.0002ZM247.4909,116.3961c.1823-.1177.2667-.326.2531-.625-.0125-.3-.1099-.4953-.2922-.5859-.1823-.0917-.3385-.1375-.4688-.1375-.1563,0-.3193.0589-.4891.1766-.1688.1167-.2531.3182-.2531.6047s.0974.4818.2922.5859c.1958.1042.3458.1563.45.1563.1563,0,.3255-.0583.5078-.175h0Z&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图1&amp;emsp;截断奇异值分解结果&lt;/p&gt;
&lt;p&gt;  在信息检索等领域，也经常通过词与其出现的文档构成“词-文档”共现矩阵，此时也可以通过以上介绍的奇异值分解技术进行降维，并在低维空间（潜在语义空间）内计算词语或者文档之间的相似度，该技术也称&lt;strong&gt;潜在语义索引（Latent Semantic Indexing，LSI）&lt;/strong&gt;。&lt;br&gt;
  虽然在基于传统机器学习的方法中，词的分布式表示取得了不错的效果，但是其仍然存在一些问题。首先，当共现矩阵规模较大时，奇异值分解的运行速度非常慢；其次，如果想在原来语料库的基础上增加更多的数据，则需要重新运行奇异值分解算法，代价非常高；另外，分布式表示只能用于表示比较短的单元，如词或短语等，如果待表示的单元比较长，如段落、句子等，由于与其共现的上下文会非常少，则无法获得有效的分布式表示；最后，分布式表示一旦训练完成，则无法修改，也就是说，无法根据具体的任务调整其表示方式。为了解决这些问题，可引入一种新的词表示方式——词嵌入表示。&lt;/p&gt;
&lt;h3 id=&#34;词嵌入表示&#34;&gt;词嵌入表示
&lt;/h3&gt;&lt;p&gt;  与词的分布式表示类似，&lt;strong&gt;词嵌入表示(Word Embedding)&lt;/strong&gt;‌也使用一个连续、低维、稠密的向量来表示词，经常直接简称为词向量，但与分布式表示不同之处在于其赋值方式。在词的分布式表示中，向量值是通过对语料库进行统计得到的，然后再经过点互信息、奇异值分解等变换，一旦确定则无法修改。而词向量中的向量值，是随着目标任务的优化过程自动调整的，也就是说，可以将词向量中的向量值看作模型的参数。不过，如果目标任务的训练数据比较少，学习合适的词向量难度会比较大，因此，利用自然语言文本中所蕴含的自监督学习信号（即词与上下文的共现信息），先来预训练词向量，往往会获得更好的结果。&lt;/p&gt;
&lt;h3 id=&#34;文本的词袋表示&#34;&gt;文本的词袋表示
&lt;/h3&gt;&lt;p&gt;  上面介绍了几种常见的词表示方法，那么如何通过词的表示构成更长文本的
表示呢？在此介绍一种最简单的文本表示方法——**词袋（Bag-Of-Words，BOW）**表示。所谓词袋表示，就是假设文本中的词语是没有顺序的集合，将文本中的全部词所对应的向量表示（既可以是独热表示，也可以是分布式表示或词向量）相加，即构成了文本的向量表示。如在使用独热表示时，文本向量表示的每一维恰好是相应的词在文本中出现的次数。&lt;br&gt;
  虽然这种文本表示的方法非常简单、直观，但是其缺点也非常明显：首先是 没有考虑词的顺序信息，导致“张三打李四”和“李四打张三”，虽然含义不同，但是由于它们包含的词相同，即使词序不同，词袋表示的结果也是一样的；其次是无法融入上下文信息。比如要表示“不喜欢”，只能将两个词的向量相加，无法进行更细致的语义操作。当然，可以通过增加词表的方法加以解决，比如引入二元词(Bigram)词表，将&amp;quot;不+喜欢&amp;quot;等作为&amp;quot;词”，然后同时学习二元词的词向量表示。这种方法既能部分解决否定词的问题，也能部分解决局部词序的问题，但是随着词表的增大，会引入更严重的数据稀疏问题。深度学习技术的引入为解决这些问题提供了更好的方案，后续将详细介绍。&lt;/p&gt;
&lt;h2 id=&#34;自然语言处理任务&#34;&gt;自然语言处理任务
&lt;/h2&gt;&lt;p&gt;  本节依次介绍三大类常见的自然语言处理任务，即：语言模型、基础任务以
及应用任务。&lt;/p&gt;
&lt;h3 id=&#34;语言模型&#34;&gt;语言模型
&lt;/h3&gt;&lt;p&gt;  &lt;strong&gt;语言模型（Language Model，LM）&lt;/strong&gt;（也称&lt;strong&gt;统计语言模型&lt;/strong&gt;）是描述自然语言概率分布的模型，是一个非常基础和重要的自然语言处理任务。利用语言模型，可以计算一个词序列或一句话的概率，也可以在给定上文的条件下对接下来可能出现 的词进行概率分布的估计。同时，语言模型是一项天然的预训练任务，在基于预训练模型的自然语言处理方法中起到非常重要的作用，因此这种预训练模型有时也被称为预训练语言模型。本篇将主要介绍经典的&lt;strong&gt;N元语言模型（N-gramLanguage Model）&lt;/strong&gt;，现代的神经网络语言模型(Neural Network Language Model)将在后续进行详细的介绍。&lt;/p&gt;
&lt;h4 id=&#34;n元语言模型&#34;&gt;N元语言模型
&lt;/h4&gt;&lt;p&gt;  语言模型的基本任务是在给定词序列 \(w_1w_2\cdots w_{t-1}\) 的条件下，对下一时刻 \(t\) 可能出现的词 \(w_t\) 的条件概率 \(P(w_t | w_1w_2\cdots w_{t-1})\) 进行估计。一般地，把 \(w_1w_2\cdots w_{t-1}\) 一称为 \(w_t\) 的历史。例如，对于历史“我 喜欢”，希望得到下一个词为“读书”的概率，即： \(P(读书|我\space 喜欢)\) 。在给定一个语料库时，该条件概率可以理解为当语料中出现“我喜欢”时，有多少次下一个词为“读书”，然后通过最大似然估计进行计算：&lt;/p&gt;
&lt;span id=&#34;20241113234208CST&#34;&gt;&lt;/span&gt;\[
P(读书|我 喜欢)=\frac{C(我\space喜欢\space读书)}{C(我\space喜欢)}
\tag{7}
    \]
&lt;p&gt;  式中， \(C(\cdot)\) 表示相应词序列在语料库中出现的次数（也成为频次）。&lt;br&gt;
  通过以上的条件概率，可以进一步计算一个句子出现的概率，即相应单词序 列的联合概率 \(P(w_1w_2\cdots w_l)\) 为序列的长度。可以利用链式法则对该式进行分解，从而将其转化为条件概率的计算问题，即：&lt;/p&gt;
&lt;span id=&#34;20241113234416CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
P(w_1w_2\cdots w_l)=&amp;P(w_1)P(w_2|w_1)P(w_3|w_1w_2)\cdots P(w_l|w_1w_2\cdots w_{l-1})\\[10pt]
=&amp;\prod_{i=1}^{l}P(w_i|w_{1:i-1})
\end{aligned}
\tag{8}
    \]
&lt;p&gt;  式中， \(w_{i:j}\) 表示由位置 \(i\) 到 \(j\) 的子串 \(w_iw_{i+1}\cdots w_j\) 。&lt;br&gt;
  然而，随着句子长度的增加， \(w_{1:i-1}\) 出现的次数会越来越少，甚至从未出现过，那么 \(P(w_i|w_{1:i-1})\) 则很可能为 \(0\) ，此时对于概率估计就没有意义了。为了解决该问题，可以假设“下一个词出现的概率只依赖于它前面 \(n-1\) 个词&amp;quot;，即&lt;/p&gt;
&lt;span id=&#34;20241114002737CST&#34;&gt;&lt;/span&gt;\[
P(w_t|w_1w_2\cdots w_{t-1})\approx P(w_t|w_{t-(n-1):t-1})
\tag{9}
    \]
&lt;p&gt;  该假设被称为&lt;strong&gt;马尔可夫假设(Markov Assumption)&lt;/strong&gt;。满足这种假设的模型，被称为&lt;strong&gt;N元语法&lt;/strong&gt;或&lt;strong&gt;N元文法（N-gram）&lt;/strong&gt;‌模型。特别地，当 \(n=1\) 时，下一个词的出现独立于其历史，相应的一元语法通常记作unigram。当 \(n=2\) 时，下一个词只依赖于前 \(1\) 个词，对应的二元语法记作bigram。二元语法模型也被称为一阶马尔可夫链(MarkovChain)。类似的，三元语法假设（ \(n=3\) ）也被称为二阶马尔可夫假设，相应的三元语法记作trigram。 \(n\) 的取值越大，考虑的历史越完整。在unigram模型中，由于词与词之间相互独立，因此它是与语序无关的。&lt;br&gt;
  以bigram模型为例，&lt;a class=&#34;link&#34; href=&#34;#20241113234416CST&#34;&gt;式(8)&lt;/a&gt;可转换为&lt;/p&gt;
&lt;span id=&#34;20241114004143CST&#34;&gt;&lt;/span&gt;\[
P(w_1w_2 \cdots w_l)= \prod_{i=1}^{l}P(w_i|w_{i-1})
\tag{10}
    \]
&lt;p&gt;  为了使 \(P(w_i|w_{i-1})\) 对于 \(i=1\) 有意义，可在句子的开头增加一个句首标记&lt;code&gt;&amp;lt;BOS&amp;gt;&lt;/code&gt;( Begin Of Sentence)，并设 \(w_0=\) &lt;code&gt;&amp;lt;BOS&amp;gt;&lt;/code&gt;。同时，也可以在句子的结尾增加一个句尾标记&lt;code&gt;&amp;lt;EOS&amp;gt;&lt;/code&gt;(End Of Sentence)，设 \(w_{l+1}=\) &lt;code&gt;&amp;lt;EOS&amp;gt;&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;平滑&#34;&gt;平滑
&lt;/h4&gt;&lt;p&gt;  虽然马尔可夫假设（下一个词出现的概率只依赖于它前面 \(n-1\) 个词）降低了句子概率为 \(0\) 的可能性，但是当 \(n\) 比较大或者测试句子中含有&lt;strong&gt;未登录词（Out-Of-Vocabulary，OOV）&lt;/strong&gt;‌时，仍然会出现“零概率”问题。由于数据的稀疏性，训练数据很难覆盖测试数据中所有可能出现的N-gram，但这并不意味着这些N-gram出现的概率为0。为了避免该问题，需要使用&lt;strong&gt;平滑(Smoothing)&lt;/strong&gt;‌技术调整概率估计的结果。本节将介绍一种最基本，也最简单的平滑算法——折扣法。&lt;br&gt;
  &lt;strong&gt;折扣法(Discounting)&lt;/strong&gt;‌平滑的基本思想是“损有余而补不足”，即从频繁出现的N-gram中匀出一部分概率并分配给低频次（含零频次）的N-gram，从而使得整体概率分布趋于均匀。&lt;br&gt;
  &lt;strong&gt;加1平滑（Add-one Discounting）&lt;/strong&gt;‌是一种典型的折扣法，也被称为&lt;strong&gt;拉普拉斯平滑(Laplace Smoothing)&lt;/strong&gt;，它假设所有N-gram的频次比实际出现的频次多一次。例如，对于unigram模型来说，平滑之后的概率可由以下公式计算&lt;/p&gt;
&lt;span id=&#34;20241114004729CST&#34;&gt;&lt;/span&gt;\[
P(w_i)=\frac{C(w_i)+1}{\sum_w(C(w)+1)}=\frac{C(w_i)+1}{N+|\mathbb{V}|}
\tag{11}
    \]
&lt;p&gt;  式中， \(|\mathbb{V}|\) 是词表大小。所有未登录词可以映射为一个区别于其他已知词汇的独立标记，如&amp;lt;UNK&amp;gt;。&lt;br&gt;
  相应的，对于bigram模型，则有&lt;/p&gt;
&lt;span id=&#34;20241114005125CST&#34;&gt;&lt;/span&gt;\[
P(w_i|w_{i-1})=\frac{C(w_{i-1}w_i)+1}{\sum_{w}(C(w_{i-1}w)+1)}=\frac{C(w_{i-1}w_{i})+1}{C(w_{i-1})+|\mathbb{V}|}
\tag{12}
    \]
&lt;p&gt;  在实际应用中，尤其当训练数据较小时，加1平滑将对低频次或零频次事件 给出过高的概率估计。一种自然的扩展是加 \(\delta\) 平滑。在加 \(\delta\) 平滑中，假设所有事件的频次比实际出现的频次多 \(\delta\) 次，其中 \(0 \le \delta \le 1\) 。&lt;br&gt;
  以bigram语言模型为例，使用加 \(\delta\) 平滑之后的条件概率为&lt;/p&gt;
&lt;span id=&#34;20241114005858CST&#34;&gt;&lt;/span&gt;\[
P(w_i|w_{i-1})=\frac{C(w_{i-1}w_i)+\delta}{\sum_{w}(C(w_{i-1}w)+\delta)}=\frac{C(w_{i-1}w_{i})+\delta}{C(w_{i-1})+\delta|\mathbb{V}|}
\tag{13}
    \]
&lt;p&gt;  关于超参数 \(\delta\) 的取值，需要用到开发集数据。根据开发集上的困惑度对不同 \(\delta\) 取值下的语言模型进行评价，最终将最优的 \(\delta\) 用于测试集。&lt;br&gt;
  由于引入了马尔可夫假设，导致N元语言模型无法对长度超过N的长距离词语依赖关系进行建模，如果将N扩大，又会带来更严重的数据稀疏问题，同 时还会急剧增加模型的参数量（N-gram数目），为存储和计算都带来极大的挑战。在后续篇章中将要介绍的神经网络语言模型可以较好地解决N元语言模型的这些缺陷。&lt;/p&gt;
&lt;h4 id=&#34;语言模型性能评价&#34;&gt;语言模型性能评价
&lt;/h4&gt;&lt;p&gt;  如何衡量一个语言模型的好坏呢？一种方法是将其应用于具体的外部任务（如机器翻译），并根据该任务上指标的高低对语言模型进行评价。这种方法也 被称为“外部任务评价”，是最接近实际应用需求的一种评价方法。但是，这种方式的计算代价较高，实现的难度也较大。因此，目前最为常用的是基于&lt;strong&gt;困惑度（Perplexity，PPL）&lt;/strong&gt;‌的“内部评价”方式。&lt;br&gt;
  为了进行内部评价，首先将数据划分为不相交的两个集合，分别称为&lt;strong&gt;训练集&lt;/strong&gt; \(\mathbb{D}^{\text{train}}\) 和&lt;strong&gt;测试集&lt;/strong&gt; \(\mathbb{D}^{\text{test}}\) ，其中 \(\mathbb{D}^{\text{train}}\) 用于估计语言模型的参数。由该模型计算出的测试集的概率 \(P(\mathbb{D}^{\text{test}})\) 则反映了模型在测试集上的泛化能力。&lt;br&gt;
  假设测试集 \(\mathbb{D}^{\text{test}}=w_1w_2 \cdots w_N\) （每个句子的开始和结束分布增加&lt;code&gt;&amp;lt;BOS&amp;gt;&lt;/code&gt;与&lt;code&gt;&amp;lt;EOS&amp;gt;&lt;/code&gt;标记），那么测试集的概率为：&lt;/p&gt;
&lt;span id=&#34;20241114020136CST&#34;&gt;&lt;/span&gt;\[
\begin{aligned}
P(\mathbb{D}^{\text{test}})=&amp;P(w_1w_2 \cdots w_N)\\[5pt]
=&amp;\prod_{i=1}^{N}P(w_i|w_{1:i-1})
\end{aligned}
\tag{14}
    \]
&lt;p&gt;  困惑度则为模型分配给测试集中每一个词的概率的几何平均值的倒数&lt;/p&gt;
&lt;span id=&#34;20241114020308CST&#34;&gt;&lt;/span&gt;\[
\text{PPL}(\mathbb{D}^{\text{test}})=\left(\prod_{i=1}^{N}P(w_i|w_{1:i-1})\right)^{-\frac{1}{N}}
\tag{15}
    \]
&lt;p&gt;  例如，对于bigram语言模型而言&lt;/p&gt;
&lt;span id=&#34;20241114020358CST&#34;&gt;&lt;/span&gt;\[
\text{PPL}(\mathbb{D}^{\text{test}})=\left(\prod_{i=1}^{N}P(w_i|w_{i-1})\right)^{-\frac{1}{N}}
\tag{16}
    \]
&lt;p&gt;  考虑到多个概率的连乘可能带来浮点数下溢的问题，通常需要将&lt;a class=&#34;link&#34; href=&#34;#20241114020358CST&#34;&gt;式(16)&lt;/a&gt;转化为对数和的形式&lt;/p&gt;
&lt;span id=&#34;20241114020439CST&#34;&gt;&lt;/span&gt;\[
\text{PPL}(\mathbb{D}^{\text{test}})=2^{-\displaystyle\frac{1}{N}\sum_{i=1}^{N}\log_2 P(w_i|w_{i-1})}
\tag{17}
    \]
&lt;p&gt;  困惑度越小，意味着单词序列的概率越大，也意味着模型能够更好地解释测试集中的数据。需要注意的是，困惑度越低的语言模型并不总是能在外部任务上取得更好的性能指标，但是两者之间通常呈现出一定的正相关性。因此，困惑度可以作为一种快速评价语言模型性能的指标，而在将其应用于下游任务时，仍然需要根据其在具体任务上的表现进行评价。&lt;/p&gt;
&lt;h3 id=&#34;自然语言处理基础任务&#34;&gt;自然语言处理基础任务
&lt;/h3&gt;&lt;p&gt;  自然语言处理的一大特点是任务种类纷繁复杂，有多种划分的方式。从处理
顺序的角度，可以分为底层的基础任务以及上层的应用任务。其中，基础任务往往是语言学家根据内省的方式定义的，输出的结果往往作为整个系统的一个环节或者下游任务的额外语言学特征，而并非面向普罗大众。本节介绍几种常见的基础任务，包括词法分析（分词、词性标注）、句法分析和语义分析等。&lt;/p&gt;
&lt;h4 id=&#34;中文分词&#34;&gt;中文分词
&lt;/h4&gt;&lt;p&gt;  词(Word)是最小的能独立使用的音义结合体，是能够独立运用并能够表达语义或语用内容的最基本单元。在以英语为代表的印欧语（Indo-European languages）中，词之间通常用分隔符（空格等）区分。但是在以汉语为代表的汉藏语系（Sino-Tibetan languages），以及以阿拉伯语为代表的闪—含语系（Semito-Hamitic languages）中，却不包含明显的词之间的分隔符。因此，为了进行后续的自然语言处理，通常需要首先对不含分隔符的语言进行&lt;strong&gt;分词(Word Segmentation)&lt;/strong&gt;‌操作。本节以中文分词为例，介绍词的切分问题和最简单的分词算法。&lt;br&gt;
  中文分词就是将一串连续的字符构成的句子分割成词语序列，如“我喜欢读书”，分词后的结果为“我 喜欢 读书”。最简单的分词算法叫作&lt;strong&gt;正向最大匹配（Forward Maximum Matching，FMM）分词算法&lt;/strong&gt;，即从前向后扫描句子中的字符
串，尽量找到词典中较长的单词作为分词的结果。具体代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;fmm_word_seg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    sentence: 待分词的句子
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    lexicon: 词典（所有单词集合）
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    max_len: 词典中最长单词长度
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s2&#34;&gt;    &amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sentence&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  通过下面的代码加载词典并调用正向最大匹配分词算法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;load_dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;lexicon.txt&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;load_dict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;words&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;fmm_word_seg&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;请输入句子：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lexicon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;word&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;words&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;word&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  这里提供一个可运行的辞典的例子&lt;a class=&#34;link&#34; href=&#34;attachments/lexicon.txt&#34;target=&#34;_blank&#34;&gt;lexicon.txt&lt;/a&gt;[&lt;a class=&#34;link&#34; href=&#34;attachments/lexicon.txt&#34;target=&#34;_blank&#34;download=&#34;lexicon.txt&#34;&gt;点此下载&lt;/a&gt;]。&lt;br&gt;
  正向最大匹配分词算法存在的明显缺点是倾向于切分出较长的词，这容易导致错误的切分结果，如“研究生命的起源”，由于“研究生”是词典中的词，所以使用正向最大匹配分词算法的分词结果为“研究生 命 的 起源”，显然分词结果不正确。&lt;br&gt;
  这种情况一般被称为切分歧义问题，即同一个句子可能存在多种分词结果，一旦分词错误，则会影响对句子的语义理解。正向最大匹配分词算法除了存在切分歧义，对中文词的定义也不明确，如“哈尔滨市”可以是一个词，也可以认为“哈尔滨”是一个词，“市”是一个词。因此，目前存在多种中文分词的规范，根据不同规范又标注了不同的数据集。&lt;br&gt;
  另外，就是未登录词问题，也就是说有一些词并没有收录在词典中，如新词、命名实体、领域相关词和拼写错误词等。由于语言的动态性，新词语的出现可谓是层出不穷，所以无法将全部的词都及时地收录到词典中，因此，一个好的分词系统必须能够较好地处理未登录词问题。相比于切分歧义问题，在真实应用环境中，由未登录词问题引起的分词错误比例更高。因此，分词任务本身也是一项富有挑战的自然语言处理基础任务。&lt;/p&gt;
&lt;h4 id=&#34;子词切分&#34;&gt;子词切分
&lt;/h4&gt;&lt;p&gt;  一般认为，以英语为代表的印欧语系的语言，词语之间通常已有分隔符（空格等）进行切分，无须再进行额外的分词处理。然而，由于这些语言往往具有复杂的词形变化，如果仅以天然的分隔符进行切分，不但会造成一定的数据稀疏问题，还会导致由于词表过大而降低处理速度。如“computer”“computers”“computing”等，虽然它们语义相近，但是被认为是截然不同的单词。传统的处理方法是根据语言学规则，引入&lt;strong&gt;词形还原(Lemmatization)&lt;/strong&gt;‌或者&lt;strong&gt;词干提取(Stemming)&lt;/strong&gt;‌等任务， 提取出单词的词根，从而在一定程度上克服数据稀疏问题。其中，词形还原指的是将变形的词语转换为原形，如将“computing”还原为“compute”；而词干提取则是将前缀、后缀等去掉，保留词干(Stem)，如“computing”的词干为“comput”，可见，词干提取的结果可能不是一个完整的单词。&lt;br&gt;
  词形还原或词干提取虽然在一定程度上解决了数据稀疏问题，但是需要人工撰写大量的规则，这种基于规则的方法既不容易扩展到新的领域，也不容易扩展到新的语言上。因此，基于统计的无监督子词(Subword)切分任务应运而生，并在现代的预训练模型中使用。&lt;br&gt;
  所谓子词切分，就是将一个单词切分为若干连续的片段。目前有多种常用的
子词切分算法，它们的方法大同小异，基本的原理都是使用尽量长且频次高的子词对单词进行切分。此处重点介绍常用的&lt;strong&gt;字节对编码（Byte Pair Encoding，BPE）&lt;/strong&gt;‌算法。&lt;br&gt;
  首先，BPE通过&lt;a class=&#34;link&#34; href=&#34;#20241114164453CST&#34;&gt;算法1&lt;/a&gt;构造子词词表。&lt;/p&gt;

  &lt;span id=&#34;20241114164453CST&#34;&gt;&lt;/span&gt;
  &lt;hr style=&#34;width: 100%; height: 2px; background-color: var(--article-font-color); margin:0 0;&#34;/&gt;&lt;strong&gt;算法1（BPE中子词词表构造算法）&lt;/strong&gt;&lt;div&gt;&lt;strong&gt;输入：&lt;/strong&gt;大规模生文本语料库；期望子词词表大小L&lt;br /&gt;&lt;strong&gt;输出：&lt;/strong&gt;子词词表&lt;br /&gt;&lt;/div&gt;
  &lt;hr style=&#34;width: 100%; height: 1px; background-color: var(--article-font-color); margin:0 0;&#34;/&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;1.&lt;/div&gt;
      &lt;div&gt;将语料库中每个单词切分成字符作为子词；&lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;2.&lt;/div&gt;
      &lt;div&gt;用切分的子词构成初始子词词表。&lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;3.&lt;/div&gt;
      &lt;div&gt;&lt;strong&gt;while&lt;/strong&gt; 子词词表小于或等于L &lt;strong&gt;do&lt;/strong&gt;&lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;4.&lt;/div&gt;
      &lt;div&gt;&amp;emsp;&amp;emsp;在语料库中统计单词内相邻子词对的频次；&lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;5.&lt;/div&gt;
      &lt;div&gt;&amp;emsp;&amp;emsp;选取频次最高的子词对，合并成新的子词；&lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;6.&lt;/div&gt;
      &lt;div&gt;&amp;emsp;&amp;emsp;将新的子词加入子词词表；&lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;7.&lt;/div&gt;
      &lt;div&gt;&amp;emsp;&amp;emsp;将语料库中不再存在的子词从子词词表中删除。 &lt;/div&gt;
    &lt;/div&gt;&lt;div style=&#34;display: flex;&#34;&gt;
      &lt;div style=&#34;margin-right: 10px;&#34;&gt;8.&lt;/div&gt;
      &lt;div&gt;&lt;strong&gt;end&lt;/strong&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;hr style=&#34;width: 100%; height: 2px; background-color: var(--article-font-color); margin:0 0;&#34;/&gt;
&lt;p&gt;  下面，通过一个例子说明如何构造子词词表。首先，假设语料库中存在下列 Python词典中的3个单词以及每个单词对应的频次。其中，每个单词结尾增加了一个&lt;code&gt;&#39;&amp;lt;/w&amp;gt;&#39;&lt;/code&gt;字符，并将每个单词切分成独立的字符构成子词。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;l o w e r &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n e w e s t &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w i d e s t &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  初始化的子词词表表为3个单词包含的全部字符：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  然后，统计单词内相邻的两个子词的频次，并选取频次最高的子词对&lt;code&gt;e&lt;/code&gt;，和&lt;code&gt;s&lt;/code&gt;，合并成新的子词&lt;code&gt;es&lt;/code&gt;（共出现9次），然后加入子词词表中，并将语料库中不再存在的子词&lt;code&gt;s&lt;/code&gt;从子词词表中删除。此时，语料库以及子词词表变为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;l o w e r &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n e w es t &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w i d es t &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;t&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;es&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  然后，合并下一个子词对&lt;code&gt;es&lt;/code&gt;和&lt;code&gt;t&lt;/code&gt;，新的语料库和子词词表为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;l o w e r &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n e w est &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w i d est &amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;l&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;lt;/w&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;i&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;est&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  重复以上过程，直到子词词表大小达到一个期望的词表大小为止。构造好子词词表后，如何将一个单词切分成子词序列呢？可以采用贪心的方法，即首先将子词词表按照子词的长度由大到小进行排序。然后，从前向后遍历子词词表，依次判断一个子词是否为单词的子串，如果是的话，则将该单词切分，然 后继续向后遍历子词词表。如果子词词表全部遍历结束，单词中仍然有子串没有被切分，那么这些子串一定为低频串，则使用统一的标记，如&lt;code&gt;&#39;&amp;lt;UNK&amp;gt;&#39;&lt;/code&gt;进行替换。&lt;br&gt;
  例如,对一个含有三个单词的句子&lt;code&gt;[&#39;the&amp;lt;/w&amp;gt;&#39;, &#39;highest&amp;lt;/w&amp;gt;&#39;, &#39;mountain &amp;lt;/w&amp;gt;]&lt;/code&gt;进行切分，假设排好序的词表为&lt;code&gt;[&#39;errrr&amp;lt;/w&amp;gt;&#39;，&#39;tain&amp;lt;/w&amp;gt;&#39; ,&#39;moun&#39; , &#39;est&amp;lt;/w&amp;gt;&#39; , &#39;high&#39; , &#39;the&amp;lt;/w&amp;gt;&#39; , &#39;a&amp;lt;/w&amp;gt;&#39;]&lt;/code&gt;，则子词切分的结果为&lt;code&gt;[&#39;the&amp;lt;/w&amp;gt;&#39;, &#39;high&#39;, &#39;est&amp;lt;/w&amp;gt;&#39;, &#39;moun&#39;, &#39;tain&amp;lt;/w&amp;gt;&#39;]&lt;/code&gt;。此过程也叫作对句子（单词序列）进行编码。&lt;br&gt;
  那么，如何对一个编码后的句子进行解码，也就是还原成原始的句子呢？此 时，单词结尾字符&lt;code&gt;&#39;&amp;lt;/w&amp;gt;&#39;&lt;/code&gt;便发挥作用了。只要将全部子词进行拼接，然后将结尾字符替换为空格，就恰好为原始的句子了。&lt;br&gt;
  通过以上过程可以发现，BPE算法中的编码步骤需要遍历整个词表，是一个 非常耗时的过程。可以通过缓存技术加快编码的速度，即将常见单词对应的编码结果事先存储下来，然后编码时通过查表的方式快速获得编码的结果。对于查不到的单词再实际执行编码算法。由于高频词能够覆盖语言中的大部分单词，因此 该方法实际执行编码算法的次数并不多，因此可以极大地提高编码过程的速度。&lt;br&gt;
  除了BPE,还有很多其他类似的子词切分方法，如WordPiece、Unigram Language Model(ULM)算法等。其中，WordPiece与BPE算法类似，也是每次从子词词表中选出两个子词进行合并。与BPE的最大区别在于，选择两个子词进行合并的策略不同：BPE选择频次最高的相邻子词合并，而WordPiece选择能够提升语言模型概率最大的相邻子词进行合并。经过公式推导，提升语言模型概率最大的相邻子词具有最大的互信息值，也就是两子词在语言模型上具有较强的关联性，它们经常在语料中以相邻方式同时出现。&lt;br&gt;
  与WordPiece一样，ULM同样使用语言模型挑选子词。不同之处在于，BPE和WordPiece算法的词表大小都是从小到大变化，属于增量法。而ULM则是减量法，即先初始化一个大词表，根据评估准则不断丢弃词表中的子词，直到满足限定条件。ULM算法考虑了句子的不同分词可能，因而能够输出带概率的多个子词分段。&lt;br&gt;
  为了更方便地使用上述子词切分算法，Google推出了&lt;a class=&#34;link&#34; href=&#34;https://github.com/google/sentencepiece&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SentencePiece开源工具包&lt;/a&gt;，其中集成了 BPE、ULM等子词切分算法，并支持Python、C++编程语言的调 用，具有快速、轻量的优点。此外，通过将句子看作Unicode编码序列，从而使其能够处理多种语言。&lt;/p&gt;
&lt;h4 id=&#34;词性标注&#34;&gt;词性标注
&lt;/h4&gt;&lt;p&gt;  词性是词语在句子中扮演的语法角色，也被称为&lt;strong&gt;词类（Part-Of-Speech，POS）&lt;/strong&gt;。例如，表示抽象或具体事物名字（如“计算机”）的词被归为名词，而表示动作（如“打”）、状态（如“存在”）的词被归为动词。词性可为句法分析、语义理解等提供帮助。&lt;br&gt;
  &lt;strong&gt;词性标注(POS Tagging)&lt;/strong&gt;‌任务是指给定一个句子，输出句子中每个词相应的词性。例如，当输入句子为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;他 喜欢 下 象棋 。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  则词性标注的输出为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;他/PN 喜欢/W 下/VV 象棋/NN 。/PU
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  其中，斜杠后面的&lt;code&gt;PN&lt;/code&gt;、&lt;code&gt;VV&lt;/code&gt;、&lt;code&gt;NN&lt;/code&gt;和&lt;code&gt;PU&lt;/code&gt;分别代表代词、动词、名词和标点符号。词性标注的主要难点在于歧义性，即一个词在不同的上下文中可能有不同的 词性。例如，上例中的“下”，既可以表示动词，也可以表示方位词。因此，需要结合上下文确定词在句子中的具体词性。&lt;/p&gt;
&lt;h4 id=&#34;句法分析&#34;&gt;句法分析
&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;句法分析(SyntacticParsing)&lt;/strong&gt;‌的主要目标是给定一个句子，分析句子的句法成分信息，例如主谓宾定状补等成分。最终的目标是将词序列表示的句子转换成树状结构，从而有助于更准确地理解句子的含义，并辅助下游自然语言处理任务。例如，对于以下两个句子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;您转的这篇文章很无知。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;您转这篇文章很无知。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  虽然它们只相差一个“的”字，但是表达的语义是截然不同的，这主要是因为两句话的主语不同。其中，第一句话的主语是“文章”，而第二句话的主语是&amp;quot;转&amp;quot;的动作。通过对两句话进行句法分析，就可以准确地获知各自的主语，从而推导出不同的语义。&lt;br&gt;
  典型的句法结构表示方法包含两种——短语结构句法表示和依存结构句法表示。它们的不同点在于依托的文法规则不一样。其中，短语结构句法表示依托上下文无关文法，属于一种层次性的表示方法。而依存结构句法表示依托依存文法。&lt;br&gt;
  &lt;a class=&#34;link&#34; href=&#34;#20241114184735CST&#34;&gt;图2&lt;/a&gt;对比了两种句法结构表示方法。在短语结构句法表示中，&lt;code&gt;S&lt;/code&gt;代表起始符号，&lt;code&gt;NP&lt;/code&gt;和&lt;code&gt;VP&lt;/code&gt;分别代表名词短语和动词短语。在依存结构句法表示中，&lt;code&gt;sub&lt;/code&gt;和&lt;code&gt;obj&lt;/code&gt;分别表示主语和宾语，&lt;code&gt;root&lt;/code&gt;表示虚拟根节点，其指向整个句子的核心谓词。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241114184735CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 645.0815 266.1458&#34; style=&#34;max-width:645.0815;&#34;&gt;
  &lt;g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(107.2443 15.8397)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;S&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(161.8964 111.0859)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.006em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(174.4965 111.0859)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;P&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(.0001 161.5483)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;P&lt;/tspan&gt;&lt;tspan x=&#34;11.52&#34; y=&#34;0&#34;&gt;N&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(63.8641 161.5485)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: .001em;&#34;&gt;V&lt;/tspan&gt;&lt;tspan x=&#34;12.8696&#34; y=&#34;0&#34; style=&#34;letter-spacing: 0em;&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(127.6922 161.5483)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: .001em;&#34;&gt;V&lt;/tspan&gt;&lt;tspan x=&#34;12.8696&#34; y=&#34;0&#34; style=&#34;letter-spacing: 0em;&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(188.4508 161.5483)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;MN&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;polyline points=&#34;145.7848 138.1083 172.9594 117.2829 201.9118 138.1083&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polyline points=&#34;77.1705 138.1083 145.875 69.1159 174.8274 89.9413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(134.3491 63.8162)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.006em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(146.9492 63.8162)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;P&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;polyline points=&#34;13.9324 87.3146 112.8324 24.0579 141.7848 44.8833&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(.0364 111.0861)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.004em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;N&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(14.1482 111.0861)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;P&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;line x1=&#34;13.9324&#34; y1=&#34;117.2829&#34; x2=&#34;13.9324&#34; y2=&#34;138.1083&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;13.9324&#34; y1=&#34;171.9495&#34; x2=&#34;13.9324&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;77.8586&#34; y1=&#34;171.9495&#34; x2=&#34;77.8586&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;141.7848&#34; y1=&#34;171.9495&#34; x2=&#34;141.7848&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;205.711&#34; y1=&#34;171.9495&#34; x2=&#34;205.711&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(4.4516 218.3938)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(59.8586 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(132.7847 218.3938)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(187.7109 218.3937)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(385.405 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(453.9634 218.3934)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(540.5223 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(609.0813 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(296.9197 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.011em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;R&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(309.3396 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(319.8694 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(330.3455 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;t&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(417.655 175.2288)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;s&lt;/tspan&gt;&lt;tspan x=&#34;8.4961&#34; y=&#34;0&#34;&gt;ub&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M461.0425,195.4306c-.9127-3.2053-2.6878-7.9266-6.2857-12.7619-2.4765-3.3282-5.0993-5.7465-7.2381-7.4286&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M416.4711,175.4306c-2.7161.7602-7.7213,2.5484-12.5714,6.8571-2.6307,2.337-4.5396,4.8148-5.9148,7.0355&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;396.0762 185.1707 398.6413 188.2705 402.6531 188.5762 395.3282 194.6687 396.0762 185.1707&#34;/&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(384.7392 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.018em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;r&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(392.4433 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(402.9731 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(413.4492 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;t&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M318.8203,196.3195c3.5008-9.8294,11.606-29.4973,26.8714-44.381,13.2557-12.9243,25.816-16.2991,32.6718-17.3333&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M421.6774,133.2719c10.6312,4.7037,26.3833,14.3103,41.6476,35.0476,4.6827,6.3617,8.6503,12.8617,11.9931,19.079&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;470.7194 186.625 474.7305 186.31 477.2883 183.2042 478.0583 192.7005 470.7194 186.625&#34;/&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(499.4833 175.2285)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(509.9594 175.2285)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;bj&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M483.8996,200.256c.14-3.0892,1.0062-13.8125,9.3333-20.7619,1.8442-1.5391,3.7475-2.637,5.5238-3.4286&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M529.0425,174.9227c4.4799,3.6451,9.629,8.6742,14.2858,15.4286.3975.5766.7807,1.1501,1.1501,1.7199&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;539.8062 191.6146 543.789 191.0438 546.143 187.7808 547.5187 197.2084 539.8062 191.6146&#34;/&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(578.3137 172.7974)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(588.7898 172.7974)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;bj&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M552.6912,196.9878c.212-3.815,1.5245-17.058,14.1409-25.6405,2.7941-1.9007,5.6778-3.2567,8.3691-4.2342&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M606.6298,167.1132c6.8271,5.2652,14.6741,12.5294,21.7707,22.2857,1.1776,1.619,2.2728,3.2216,3.2916,4.7993&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;627.0227 193.7812 631 193.1737 633.3238 189.8891 634.7864 199.3036 627.0227 193.7812&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(36.6961 263.9854)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: .004em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(43.0677 263.9854)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.005em;&#34;&gt;a&lt;/tspan&gt;&lt;tspan x=&#34;9.936&#34; y=&#34;0&#34;&gt;)短语结构句法树&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(395.328 263.9856)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(401.6278 263.9856)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.018em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;b&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(412.5541 263.9856)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;)依存结构句法树&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图2&amp;emsp;两种句法结构表示方法结果对比&lt;/p&gt;
&lt;h4 id=&#34;语义分析&#34;&gt;语义分析
&lt;/h4&gt;&lt;p&gt;  自然语言处理的核心任务即是让计算机“理解”自然语言所蕴含的意义，即&lt;strong&gt;语义(Semantic)&lt;/strong&gt;。本章前面介绍的文本向量表示，可以被认为隐性地蕴含了很多语义信息。而一般意义上的语义分析指的是通过离散的符号及结构显性地表示语义。根据待表示语言单元粒度以及语义表示方法的不同，语义分析又可以被分为多种形式。&lt;br&gt;
  从词语的粒度考虑，一个词语可能具有多种语义（词义），例如“打”，含义既可能是“攻击”（如“打人”），还可能是“玩”（如“打篮球”），甚至“编织”（如“打毛衣&amp;quot;）等。根据词语出现的不同上下文，确定其具体含义的自然语言处理任务被称为&lt;strong&gt;词义消歧（Word Sense Disambiguation，WSD）&lt;/strong&gt;。对于每个词可能具有的词义，往往是通过语义词典确定的，如WordNet等。除了以上一词多义情况，还有多词一义的情况，如“马铃薯”和“土豆”具有相同的词义。&lt;br&gt;
  由于语言的语义组合性和进化性，无法像词语一样使用词典定义句子、段落或篇章的语义，因此很难用统一的形式对句子等语言单元的语义进行表示。众多的语言学流派提出了各自不同的语义表示形式，如语义角色标注（Semantic Role Labeling，SRL）、语义依存分析（Semantic Dependency Parsing，SDP）等。&lt;br&gt;
  其中，语义角色标注也称谓词论元结构（Predicate-Argument Structure），即首先识别句子中可能的谓词（一般为动词），然后为每个谓词确定所携带的语义角色（也称作论元），如表示动作发出者的施事(Agent)，表示动作承受者的受事(Patient)等。除了核心语义角色，还有一类辅助描述动作的语言成分，被称为附 加语义角色，如动作发生的时间、地点和方式等。&lt;a class=&#34;link&#34; href=&#34;#20241114190513CST&#34;&gt;表2&lt;/a&gt;展示了一个语义角色标注的示例，其中有两个谓词——“喜欢”和“下”并针对每个谓词产生相应的论元输出结果。&lt;/p&gt;
&lt;span id=&#34;20241114190513CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;输入&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;他&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;喜欢&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;下&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;象棋&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;输出1&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;施事&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;谓词&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;受事&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;输出2&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;施事&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;谓词&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;受事&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表2&amp;emsp;语义角色标注示例&lt;/p&gt;
&lt;p&gt;  语义依存分析则利用通用图表示更丰富的语义信息。根据图中节点类型的不同，又可分为两种表示——&lt;strong&gt;语义依存图(Semantic Dependency Graph)&lt;/strong&gt;‌表示和&lt;strong&gt;概念语义图(Conceptual Graph)&lt;/strong&gt;‌表示。其中，语义依存图中的节点是句子中实际存在的词语，在词与词之间创建语义关系边。而概念语义图首先将句子转化为虚拟的概念节点，然后在概念节点之间创建语义关系边。&lt;a class=&#34;link&#34; href=&#34;#20241114192135CST&#34;&gt;图3&lt;/a&gt;展示了一个语义依存图分析结果示例。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241114192135CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 645.0815 266.1458&#34; style=&#34;max-width:645.0815;&#34;&gt;
  &lt;g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(107.2443 15.8397)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;S&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(161.8964 111.0859)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.006em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(174.4965 111.0859)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;P&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(.0001 161.5483)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;P&lt;/tspan&gt;&lt;tspan x=&#34;11.52&#34; y=&#34;0&#34;&gt;N&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(63.8641 161.5485)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: .001em;&#34;&gt;V&lt;/tspan&gt;&lt;tspan x=&#34;12.8696&#34; y=&#34;0&#34; style=&#34;letter-spacing: 0em;&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(127.6922 161.5483)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: .001em;&#34;&gt;V&lt;/tspan&gt;&lt;tspan x=&#34;12.8696&#34; y=&#34;0&#34; style=&#34;letter-spacing: 0em;&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(188.4508 161.5483)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;MN&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;polyline points=&#34;145.7848 138.1083 172.9594 117.2829 201.9118 138.1083&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polyline points=&#34;77.1705 138.1083 145.875 69.1159 174.8274 89.9413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(134.3491 63.8162)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.006em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;V&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(146.9492 63.8162)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;P&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;polyline points=&#34;13.9324 87.3146 112.8324 24.0579 141.7848 44.8833&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(.0364 111.0861)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.004em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;N&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(14.1482 111.0861)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;P&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;line x1=&#34;13.9324&#34; y1=&#34;117.2829&#34; x2=&#34;13.9324&#34; y2=&#34;138.1083&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;13.9324&#34; y1=&#34;171.9495&#34; x2=&#34;13.9324&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;77.8586&#34; y1=&#34;171.9495&#34; x2=&#34;77.8586&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;141.7848&#34; y1=&#34;171.9495&#34; x2=&#34;141.7848&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;205.711&#34; y1=&#34;171.9495&#34; x2=&#34;205.711&#34; y2=&#34;192.7749&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(4.4516 218.3938)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(59.8586 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(132.7847 218.3938)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(187.7109 218.3937)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(385.405 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(453.9634 218.3934)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(540.5223 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(609.0813 218.3936)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(296.9197 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.011em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;R&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(309.3396 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(319.8694 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(330.3455 218.394)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;t&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(417.655 175.2288)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;s&lt;/tspan&gt;&lt;tspan x=&#34;8.4961&#34; y=&#34;0&#34;&gt;ub&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M461.0425,195.4306c-.9127-3.2053-2.6878-7.9266-6.2857-12.7619-2.4765-3.3282-5.0993-5.7465-7.2381-7.4286&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M416.4711,175.4306c-2.7161.7602-7.7213,2.5484-12.5714,6.8571-2.6307,2.337-4.5396,4.8148-5.9148,7.0355&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;396.0762 185.1707 398.6413 188.2705 402.6531 188.5762 395.3282 194.6687 396.0762 185.1707&#34;/&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(384.7392 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.018em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;r&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(392.4433 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(402.9731 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(413.4492 137.3505)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;t&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M318.8203,196.3195c3.5008-9.8294,11.606-29.4973,26.8714-44.381,13.2557-12.9243,25.816-16.2991,32.6718-17.3333&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M421.6774,133.2719c10.6312,4.7037,26.3833,14.3103,41.6476,35.0476,4.6827,6.3617,8.6503,12.8617,11.9931,19.079&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;470.7194 186.625 474.7305 186.31 477.2883 183.2042 478.0583 192.7005 470.7194 186.625&#34;/&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(499.4833 175.2285)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(509.9594 175.2285)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;bj&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M483.8996,200.256c.14-3.0892,1.0062-13.8125,9.3333-20.7619,1.8442-1.5391,3.7475-2.637,5.5238-3.4286&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M529.0425,174.9227c4.4799,3.6451,9.629,8.6742,14.2858,15.4286.3975.5766.7807,1.1501,1.1501,1.7199&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;539.8062 191.6146 543.789 191.0438 546.143 187.7808 547.5187 197.2084 539.8062 191.6146&#34;/&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(578.3137 172.7974)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
      &lt;text transform=&#34;translate(588.7898 172.7974)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;bj&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;path d=&#34;M552.6912,196.9878c.212-3.815,1.5245-17.058,14.1409-25.6405,2.7941-1.9007,5.6778-3.2567,8.3691-4.2342&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;g&gt;
      &lt;path d=&#34;M606.6298,167.1132c6.8271,5.2652,14.6741,12.5294,21.7707,22.2857,1.1776,1.619,2.2728,3.2216,3.2916,4.7993&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;627.0227 193.7812 631 193.1737 633.3238 189.8891 634.7864 199.3036 627.0227 193.7812&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(36.6961 263.9854)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: .004em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(43.0677 263.9854)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.005em;&#34;&gt;a&lt;/tspan&gt;&lt;tspan x=&#34;9.936&#34; y=&#34;0&#34;&gt;)短语结构句法树&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(395.328 263.9856)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(401.6278 263.9856)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.018em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;b&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(412.5541 263.9856)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;)依存结构句法树&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图3&amp;emsp;语义依存图分析结果示例&lt;/p&gt;
&lt;p&gt;  以上的语义表示方式属于通用语义表示方式，也就是针对各种语言现象，设计统一的语义表示。除此之外，还有另一类语义分析用于专门处理具体的任务，如将自然语言表示的数据库查询转换成结构化查询语言(SQL)。例如，对于如&lt;a class=&#34;link&#34; href=&#34;#20241114192241CST&#34;&gt;表3&lt;/a&gt;所示的学生信息表，系统需要将用户的自然语言查询：年龄大于18岁的学生姓名, 转化为 SQL 语句：&lt;code&gt;select name where age &amp;gt; 18&lt;/code&gt;。&lt;/p&gt;
&lt;span id=&#34;20241114192241CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;学号&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;姓名&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;年龄&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;\(\cdots\)&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1001&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;张三&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;18&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\(\cdots\)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;1002&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;李四&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;19&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\(\cdots\)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\(\vdots\)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\(\vdots\)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\(\vdots\)&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;\(\vdots\)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表3&amp;emsp;学生信息表&lt;/p&gt;
&lt;h3 id=&#34;自然语言处理应用任务&#34;&gt;自然语言处理应用任务
&lt;/h3&gt;&lt;p&gt;  本节介绍信息抽取、情感分析、问答系统、机器翻译和对话系统等自然语言处理应用任务。这些任务可以直接或间接地以产品的形式为终端用户提供服务，是自然语言处理研究应用落地的主要技术。&lt;/p&gt;
&lt;h4 id=&#34;信息抽取&#34;&gt;信息抽取
&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;信息抽取（Information Extraction，IE）&lt;/strong&gt;‌是从非结构化的文本中自动提取结构化信息的过程，这种结构化的信息方便计算机进行后续的处理。另外，抽取的结 果还可以作为新的知识加入知识库中。信息抽取一般包含以下几个子任务。&lt;br&gt;
  &lt;strong&gt;命名实体识别（Named Entity Recognition，NER）&lt;/strong&gt;‌是在文本中抽取每个提及的命名实体并标注其类型，一般包括人名、地名和机构名等，也包括专有名称等，如书名、电影名和药物名等。在文本中找到提及的命名实体后，往往还需要将这些命名实体链接到知识库或知识图谱中的具体实体，这一过程被称作&lt;strong&gt;实体链接(Entity Linking)&lt;/strong&gt;。如“华盛顿&amp;quot;既可以指美国首任总统，也可以指美国首都，需要根据上下文进行判断，这一过程类似于词义消歧任务。&lt;br&gt;
  &lt;strong&gt;关系抽取(Relation Extraction)&lt;/strong&gt;‌用于识别和分类文本中提及的实体之间的语义关系，如夫妻、子女、工作单位和地理空间上的位置关系等二元关系。&lt;br&gt;
  &lt;strong&gt;事件抽取(Event Extraction)&lt;/strong&gt;‌的任务是从文本中识别人们感兴趣的事件以及事件所涉及的时间、地点和人物等关键元素。其中，事件往往使用文本中提及的具体&lt;strong&gt;触发词(Trigger)&lt;/strong&gt;‌定义。可见，事件抽取与语义角色标注任务较为类似，其中触发词对应语义角色标注中的谓词，而事件元素则可认为是语义角色标注中的论元。&lt;br&gt;
  事件的发生时间往往比较关键，因此&lt;strong&gt;时间表达式(Temporal Expression)&lt;/strong&gt;‌识别也被认为是重要的信息抽取子任务，一般包括两种类型的时间：绝对时间（日期、 星期、月份和节假日等）和相对时间（如明天、两年前等）。使用时间表达归一化(Temporal Expression Normalization)将这些时间表达式映射到特定的日期或一天中的时间。&lt;br&gt;
  下面通过一个例子，综合展示以上的各项信息抽取子任务。如通过下面的新
闻报道：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;10月28日，AMD宣布斥资350亿美元收购FPGA芯片巨头赛灵思。这两家传了多年绯闻的芯片
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;公司终于走到了一起。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  信息抽取结果如&lt;a class=&#34;link&#34; href=&#34;#20241114200752CST&#34;&gt;表4&lt;/a&gt;所示。&lt;/p&gt;
&lt;span id=&#34;20241114200752CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;信息抽取子任务&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;抽取结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;命名实体识别&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;公司名：AMD&lt;br/&gt;公司名：赛灵思&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;关系抽取&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;赛灵思 \(\xRightarrow{\text{从属}}\) AMD&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;时间表达式抽取&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10月28日&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;时间表达式归一化&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;10月28日 \(\to\) 2020年10月28日&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;事件抽取&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;事件：收购&lt;br/&gt;事件：2020年10月28日&lt;br/&gt;收购者：AMD&lt;br/&gt;被收购者：赛灵思&lt;br/&gt;收购金额：350亿美元&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表4&amp;emsp;信息抽取结果&lt;/p&gt;
&lt;h4 id=&#34;情感分析&#34;&gt;情感分析
&lt;/h4&gt;&lt;p&gt;  情感(Sentiment)是人类重要的心理认知能力，使用计算机自动感知和处理人类情感已经成为人工智能领域重要的研究内容之一。自然语言处理中的情感分析主要研究人类通过文字表达的情感，因此也称为&lt;strong&gt;文本情感分析&lt;/strong&gt;。但是，情感又是一个相对比较笼统的概念，既包括个体对外界事物的态度、观点或倾向性，如正面、负面等；又可以指人自身的情绪(Emotion)，如喜、怒、哀和惧等。随着互联网的迅速发展，产生了各种各样的用户生成内容(User Generated Content, UGC)，其中很多内容包含着人们的喜怒哀惧等情感，对这些情感的准确分析有助于了解人们对某款产品的喜好，随时掌握舆情的发展。因此，情感分析成为目前自然语言处理技术的主要应用之一。&lt;br&gt;
  情感分析可以从任务角度分为两个主要的子任务，即&lt;strong&gt;情感分类&lt;/strong&gt;（识别文本中蕴含的情感类型或者情感强度，其中，文本既可以是句子，也可以是篇章）和&lt;strong&gt;情感信息抽取&lt;/strong&gt;（抽取文本中的情感元素，如评价词语、评价对象和评价搭配等）。针对下面的用户评论：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;这款手机的屏幕很不错，性能也还可以。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  情感分析结果如&lt;a class=&#34;link&#34; href=&#34;#20241114201546CST&#34;&gt;表5&lt;/a&gt;所示。&lt;/p&gt;
&lt;span id=&#34;20241114201546CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;情感分析子任务&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;分析结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;情感分类&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;褒义&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;情感信息抽取&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;评价词：不错；可以&lt;br/&gt;评价对象：屏幕；性能&lt;br/&gt;评价搭配：屏幕 \(\Leftrightarrow\) 不错；性能 \(\Leftrightarrow\) 可以&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表5&amp;emsp;情感分析结果&lt;/p&gt;
&lt;p&gt;  由于情感分析具有众多的应用场景，如商品评论的分析、舆情分析等，因此, 情感分析受到工业界的广泛关注，已成为自然语言处理研究应用落地的重要体现。另外，情感分析还在社会学、经济学和管理学等领域显示出重要的研究意义和广泛的应用前景，这些需求对情感分析不断提出更高的要求，推动了情感分析研究 的内涵和外延不断扩展和深入。&lt;/p&gt;
&lt;h4 id=&#34;问答系统&#34;&gt;问答系统
&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;问答系统（Question Answering，QA）&lt;/strong&gt;‌是指系统接受用户以自然语言形式描述的问题，并从异构数据中通过检索、匹配和推理等技术获得答案的自然语言处理系统。根据数据来源的不同，问答系统可以分为4种主要的类型：①检索式问答系统，答案来源于固定的文本语料库或互联网，系统通过查找相关文档并抽取答案完成回答；②知识库问答系统，回答问题所需的知识以数据库等结构化形式存储，问答系统首先将问题解析为结构化的查询语句，通过查询相关知识点，并结合知识推理获取答案；③常问问题集问答系统，通过对历史积累的常问问题集进行检索，回答用户提出的类似问题；④阅读理解式问答系统，通过抽取给定文档中的文本片段或生成一段答案来回答用户提出的问题。在实际应用中，可以综合利用以上多种类型的问答系统来更好地回答用户提出的问题。&lt;/p&gt;
&lt;h4 id=&#34;机器翻译&#34;&gt;机器翻译
&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;机器翻译(Machine Translation, MT)&lt;/strong&gt;‌是指利用计算机实现从一种自然语言（源语言）到另外一种自然语言（目标语言）的自动翻译。据统计，目前世界上存在约7,000种语言，其中，超过300种语言拥有100万个以上的使用者。而随着全球化趋势的发展和互联网的广泛普及，不同语言使用者之间的信息交流变得越来越重要。如何突破不同国家和不同民族之间的语言障碍，已成为全人类面临的共同难题。机器翻译为克服这一难题提供了有效的技术手段，其目标是建立自动翻译方法、模型和系统，打破语言壁垒，最终实现任意时间、任意地点和任意语言之间的自动翻译，完成人们无障碍自由交流的梦想。自从自然语言处理领域诞生以来，机器翻译一直是其主要的研究任务和应用场景。近年来，谷歌、百度等公司纷纷推出在线的机器翻译服务，科大讯飞等公司也推出了翻译机产品，能够直接将一种语言的语音翻译为另一种语言的语音，为具有不同语言的人们之间的互相交流提供了便利。&lt;br&gt;
  下面给出一个中英互译的例子，其中源语言（中文）和目标语言（英文）都经过了分词处理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;S：北京 是 中国 的 首都 。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;T：Beijing is the capital of China .
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  机器翻译方法一般以句子为基本输入单位，研究从源语言句子到目标语言句子的映射函数。机器翻译自诞生以来，主要围绕理性主义和经验主义两种方法进行研究。所谓“理性主义”，是指基于规则的方法；而“经验主义”是指数据驱动的统计方法，在机器翻译领域表现为基于语料库（翻译实例库）的研究方法。近年来兴起的基于深度学习的机器翻译方法利用深度神经网络学习源语言句子到目标语言句子的隐式翻译规则，即所有的翻译规则都被编码在神经网络的模型参数中。该方法又被称为&lt;strong&gt;神经机器翻译（Neural Machine Translation，NMT）&lt;/strong&gt;‌。&lt;/p&gt;
&lt;h4 id=&#34;对话系统&#34;&gt;对话系统
&lt;/h4&gt;&lt;p&gt;  &lt;strong&gt;对话系统(Dialogue System)&lt;/strong&gt;‌是指以自然语言为载体，用户与计算机通过多轮交互的方式实现特定目标的智能系统。其中，特定目标包括：完成特定任务、获取信息或推荐、获得情感抚慰和社交陪伴等。20世纪50年代，图灵提出用于评
测计算机系统智能化水平的“图灵测试”，就是以自然语言对话的形式进行的。对 话系统可以直接应用于语音助手、智能音箱和车载语音系统等众多场景。&lt;br&gt;
  对话系统主要分为&lt;strong&gt;任务型对话系统（Task-Oriented Dialogue）&lt;/strong&gt;‌和&lt;strong&gt;开放域对话系统（Open-Domain Dialogue）&lt;/strong&gt;‌。前者是任务导向型的对话系统，主要用于垂直领域的自动业务助理等，具有明确的任务目标，如完成机票预订、天气查询等特定 的任务。后者是以社交为目标的对话系统，通常以闲聊、情感陪护等为目标，因此也被称为&lt;strong&gt;聊天系统&lt;/strong&gt;或&lt;strong&gt;聊天机器人(Chatbot)&lt;/strong&gt;‌，在领域和话题上具有很强的开放性。&lt;br&gt;
  下面是一段开放域对话系统人机对话的示例，其中&lt;code&gt;U&lt;/code&gt;代表用户的话语(Utterance)，&lt;code&gt;S&lt;/code&gt;代表对话系统的回复。该类对话系统的主要目标是提升对话的轮次以及
用户的满意度。相比对话的准确性，开放域对话系统更关注对话的多样性以及对用户的吸引程度。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;U：今天天气真不错！
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;S：是啊，非常适合室外运动。
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;U：你喜欢什么运动？
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;S：我喜欢踢足球，你呢？
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;  任务型对话系统一般由顺序执行的三个模块构成，即自然语言理解、对话管理和自然语言生成。其中，&lt;strong&gt;自然语言理解（Natural Language Understanding， NLU）&lt;/strong&gt;‌模块的主要功能是分析用户话语的语义，通常的表示形式为该话语的领域、意图以及相应的槽值等。如对于用户话语：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;U：帮我订一张明天去北京的机票
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;自然语言理解的结果如&lt;a class=&#34;link&#34; href=&#34;#20241114203350CST&#34;&gt;表6&lt;/a&gt;所示。&lt;/p&gt;
&lt;span id=&#34;20241114203350CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;NLU子任务&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;分析结果&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;领域&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;机票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;意图&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;订机票&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;槽值&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;出发时间 \(=\) 明天；到达地 \(=\) 北京；数量 \(=\) 一张&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表6&amp;emsp;自然语言理解的结果&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;对话管理（Dialogue Management，DM）&lt;/strong&gt;‌模块包括&lt;strong&gt;对话状态跟踪（Dialogue State Tracking，DST）&lt;/strong&gt;‌和对话策略优化（Dialogue Policy Optimization，DPO）**‌两个子模块。对话状态一般表示为语义槽和值的列表。例如，通过对以上用户话语自然语言理解的结果进行对话状态跟踪，得到当前的对话状态（通常为语义槽及其对应的值构成的列表）：［到达地=北京；出发时间=明天；出发地=NULL；数量=1］。获得当前对话状态后，进行策略优化，即选择下一步采用什么样的策略，也叫作动作。动作有很多种，如此时可以询问出发地，也可以询问舱位类型等。&lt;br&gt;
  在任务型对话系统里，**自然语言生成（Natural Language Generation，NLG）模块工作相对比较简单，通常通过写模板即可实现。比如要询问出发地，就直接问“请问您从哪里出发?”，然后经过语音合成（Text-to-Speech，TTS）反馈给用户。&lt;br&gt;
  以上三个模块可以一直循环执行下去，随着每次用户的话语不同，对话状态也随之变化。然后，采用不同的回复策略，直到满足用户的订票需求为止。&lt;/p&gt;
&lt;h2 id=&#34;基本问题&#34;&gt;基本问题
&lt;/h2&gt;&lt;p&gt;  上面介绍了两大类常见的自然语言处理任务，虽然这些任务从表面上看各不
相同，但是都可以归为文本分类问题、结构预测问题或序列到序列问题，下面就这三个基本问题分别加以介绍。&lt;/p&gt;
&lt;h3 id=&#34;文本分类问题&#34;&gt;文本分类问题
&lt;/h3&gt;&lt;p&gt;  &lt;strong&gt;文本分类（Text Classification或Text Categorization）&lt;/strong&gt;‌是最简单也是最基础的自然语言处理问题。即针对一段文本输入，输出该文本所属的类别，其中，类别是事先定义好的一个封闭的集合。文本分类具有众多的应用场景，如垃圾邮件过滤（将邮件分为垃圾和非垃圾两类）、新闻分类（将新闻分为政治、经济和体育等类别）等。先前介绍的文本情感分类任务就是典型的文本分类问题，类别既可以是褒、贬两类，也可以是喜、怒、哀和惧等多类。&lt;br&gt;
  在使用机器学习，尤其是深度学习方法解决文本分类问题时，首先，需要使
用文本表示技术，将输入的文本转化为特征向量；然后，使用机器学习模型（也叫分类器），将输入的特征向量映射为一个具体的类别。&lt;br&gt;
  除了直接使用文本分类技术解决实际问题，还有很多自然语言处理问题可以转换为文本分类问题，如文本匹配(Text Matching)，即判断两段输入文本之间的匹配关系，包括复述关系（Paraphrasing：判断两个表述不同的文本语义是否相同）、蕴含关系（Entailment：根据一个前提文本，推断与假设文本之间的蕴含或矛盾关系）等。一种转换的方法是将两段文本直接拼接起来，然后按复述或非复述、蕴含或矛盾等关系分类。&lt;/p&gt;
&lt;h3 id=&#34;结构预测问题&#34;&gt;结构预测问题
&lt;/h3&gt;&lt;p&gt;  与文本分类问题不同，在结构预测问题中，输出类别之间具有较强的相互关
联性。例如，在词性标注任务中，一句话中不同词的词性之间往往相互影响，如副词之后往往出现动词或形容词，形容词之后往往跟着名词等。结构预测任务通常是自然语言处理独有的。下面介绍三种典型的结构预测问题——序列标注、序列分割和图结构生成。&lt;/p&gt;
&lt;h4 id=&#34;序列标注&#34;&gt;序列标注
&lt;/h4&gt;&lt;p&gt;  所谓&lt;strong&gt;序列标注(Sequence Labeling)&lt;/strong&gt;，指的是为输入文本序列中的每个词标注相应的标签，如词性标注是为每个词标注一个词性标签，包括名词、动词和形容词等。其中，输入词和输出标签数目相同且一一对应。&lt;a class=&#34;link&#34; href=&#34;#20241114210143CST&#34;&gt;表7&lt;/a&gt;展示了一个序列标注（词性标注）示例。序列标注问题可以简单地看成多个独立的文本分类问题，即针 对每个词提取特征，然后进行标签分类，并不考虑输出标签之间的关系。条件随机场（Conditional Random Field，CRF）模型是一种被广泛应用的序列标注模型，其不但考虑了每个词属于某一标签的概率（发射概率），还考虑了标签之间的相互关系（转移概率）。循环神经网络模型也隐含地建模了标签之间的相互关系，为了进一步提高准确率，也可以在循环神经网络之上再使用条件随机场模型。&lt;/p&gt;
&lt;span id=&#34;20241114210143CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;输入：&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;他&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;喜欢&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;下&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;象棋&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;。&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;输出：&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PN&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;VV&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;VV&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;NN&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;PU&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表7&amp;emsp;序列标注示例&lt;/p&gt;
&lt;h4 id=&#34;序列分割&#34;&gt;序列分割
&lt;/h4&gt;&lt;p&gt;  除了序列标注问题，还有很多自然语言处理问题可以被建模为序列分割问题，如分词问题，就是将字符序列切分成若干连续的子序列；命名实体识别问题，也是在文本序列中切分出子序列，并为每个子序列赋予一个实体的类别，如人名、地名和机构名等。可以使用专门的序列分割模型对这些问题进行建模，不过为了简化，往往将它们转换为序列标注任务统一加以解决。如命名实体识别，序列标注的输出标签可以为一个实体的开始（B-XXX）、中间（I-XXX）或者非实体(O)等，其中B代表开始(Begin)、I代表中间(Inside)、O代表其他(Other)、XXX代表实体的类型，如人名(PER)、地名(LOC)和机构名(ORG)等。分词问题也可以转换为序列标注问题，即为每个字符标注一个标签，指明该字符是一个词的开始(B)或者中间(I)等。&lt;a class=&#34;link&#34; href=&#34;#20241114210606CST&#34;&gt;表8&lt;/a&gt;展示了使用序列标注方法解决序列分割（分词和命名实体识别）问题示例。其中，对于输入：&amp;ldquo;我爱北京天安门。”分词输出结果是：“我 爱 北京 天安门 。”，命名实体识别输出结果是：“北京天安门=LOC”。&lt;/p&gt;
&lt;span id=&#34;20241114210606CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;输入&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;我&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;爱&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;北&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;京&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;天&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;安&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;门&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;。&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;分词输出&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;命名实体识别输出&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表8&amp;emsp;使用序列标注方法解决序列分割（分词和命名实体识别）问题示例&lt;/p&gt;
&lt;h4 id=&#34;图结构生成&#34;&gt;图结构生成
&lt;/h4&gt;&lt;p&gt;  图结构生成也是自然语言处理特有的一类结构预测问题，顾名思义，其输入 是自然语言，输出结果是一个以图表示的结构。图中的节点既可以来自原始输入，也可以是新生成的；边连接了两个节点，并可以赋予相应的类型。句法分析就是典型的图结构生成问题，其中，在依存分析中，节点皆为原始输入的词，而边则连接了有句法关系的两个词，然后在其上标注句法关系类别。此外，还 可以对输出的图结构进行一定的约束，如需要为树结构（一种特殊的图结构，要 求每个节点有且只有一个父节点）等。在短语结构句法分析中，除了原始输入词作为终结节点，还需要新生成词性以及短语类型节点作为非终结节点，然后，使 用边将这些节点相连，并最终形成树结构。不过，树结构也不是必要的限制，如在语义依存图分析中，结果就不必是一棵树，而可以是更灵活的图结构。&lt;br&gt;
  图结构生成算法主要包括两大类：基于图的算法和基于转移的算法。&lt;br&gt;
  &lt;strong&gt;基于图&lt;/strong&gt;（Graph-based）的算法首先为图中任意两个节点（输入的词）构成的边赋予一定的分数，算法的目标是求解出一个满足约束的分数最大的子图，其中，子图的分数可以简单看作所有边的分数和，如果要求输出结果满足树结构的约束，则需要使用最大生成树(Maximum Spanning Tree, MST)算法进行解码。除了解码算法，基于图的算法还需要解决如何为边打分以及参数如何优化等问题。&lt;br&gt;
  &lt;strong&gt;基于转移&lt;/strong&gt;（Transition-based）的算法将图结构的构建过程转化为一个状态转移序列，通过转移动作，从一个旧的状态转移到新的状态，也就是说转移动作是
状态向前前进一步的方式，体现了状态变化的策略，转移动作的选择本质上就是一个分类问题，其分类器的特征从当前的状态中加以提取。&lt;br&gt;
  首先，来看如何使用基于转移的算法解决依存句法分析问题。在此，以一种非常简单的标准弧（Arc-standard）转移算法为例，转移状态由一个栈(Stack)和一个队列(Queue)构成，栈中存储的是依存结构子树序列 \(S_m \cdots S_1S_0\) ，队列中存储的是未处理的词 \(Q_0Q_1 \cdots Q_n\) 在初始转移状态中，栈为空，句子当中的所有词有序地填入队列中；在结束转移状态中，栈中存储着一棵完整的依存结构句法分析树，队列为空。&lt;br&gt;
  另外，算法定义了以下三种转移动作，分别为移进（Shift，SH）、左弧归约（Reduce-Left，RL）和右弧归约（Reduce-Right，RR），具体含义如下：&lt;br&gt;
  ◦SH，将队列中的第一个元素移入栈顶，形成一个仅包含一个节点的依存子树；&lt;br&gt;
  ◦RL，将栈顶的两棵依存子树采用一个左弧 \(S_1 \curvearrowleft S_0\) 进行合并，然后 \(S_1\) 下栈；&lt;br&gt;
  ◦RR，将栈顶的两棵依存子树采用一个右弧 \(S_1 \curvearrowright S_0\) 进行合并，然后 \(S_0\) 下栈。&lt;br&gt;
  &lt;a class=&#34;link&#34; href=&#34;#20241114235423CST&#34;&gt;图4&lt;/a&gt;展示了面向依存句法分析的标准弧转移算法中的三种动作。除了以上三个动作，还定义了一个特殊的完成动作（Finish，FIN）。根据上述的定义，可以使用&lt;a class=&#34;link&#34; href=&#34;#20241115000931CST&#34;&gt;表9&lt;/a&gt;中的动作序列逐步生成&lt;a class=&#34;link&#34; href=&#34;#20241114184735CST&#34;&gt;图2&lt;/a&gt;(b)所示的依存结构句法树。弧上的句法关系可以在生成弧的时候（采用RL或RR动作），使用额外的句法关系分类器加以预测。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241114235423CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 643.6397 154.0742&#34; style=&#34;max-width:643.6397;&#34;&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-6-TEX-I-1D446&#34; d=&#34;M233.8159,93.1396c.7,0,1.4-.3,2-1,.6-.6.9-1.4.9-2.2s-.3-1.3-1-1.6c-1.3-.3-2.1-.6-2.5-.7s-.6-.2-.8-.4c-.7-.5-1.1-1.3-1.1-2.2s.2-1.4.6-2,.8-1.1,1.2-1.4c.4-.3.8-.5,1.3-.7s.9-.3,1.2-.3h.3c1.2,0,2,.4,2.5,1.2l.2-.2c.2-.2.3-.3.5-.5s.3-.3.4-.4h0c.1334,0,.2.0333.2.1,0,.1-.2.8-.5,2.2s-.5,2.1-.6,2.2-.1,0-.3,0-.4,0-.4-.2v-1c0-.4,0-.8-.2-1.1s-.2-.5-.3-.7-.3-.3-.5-.5c-.4-.3-.9-.4-1.5-.4s-1.3.3-1.9.8-.9,1.2-.9,1.9c0,.4,0,.7.3,1s.4.5.8.6c0,0,.5.1,1.3.3s1.2.3,1.2.3c.4.1.8.4,1.2.9.4.5.6,1.1.6,1.8s0,.7-.1,1c0,.3-.2.6-.3.9s-.4.7-.7,1.1c-.3.4-.7.8-1.2,1.1-.5.3-1.1.6-1.7.7h-.6c-1.2,0-2.1-.3-2.8-1l-.2-.2-.5.6c-.3.3-.5.5-.5.6h-.2c-.1333,0-.2-.0333-.2-.1,0-.1.4-1.5,1.1-4.3,0,0,.1-.1.4-.1h.2s.1.1.1.2v1.2c0,.5.1.9.3,1.2s.5.6.8.7.6.3,1,.3h1l-.1.3h0Z&#34;/&gt;
    &lt;path id=&#34;MJX-6-TEX-N-30&#34; d=&#34;M241.2159,88.7396c.5-.7,1.1-1,2-1s.8.1,1.2.3.8.6,1,1.2c.3.7.5,1.7.5,3s-.2,2.4-.6,3.1c-.2.4-.4.7-.7.9-.3.2-.6.3-.8.4s-.4,0-.7,0h-.7c-.3,0-.5-.2-.8-.4s-.5-.5-.7-.9c-.4-.7-.6-1.7-.6-3.1s.2-2.6.7-3.4l.2-.1ZM244.1159,88.6396c-.3-.3-.6-.4-.9-.4s-.7.1-.9.4c-.2.2-.4.5-.4.9s-.1,1.2-.1,2.5,0,2.3.1,2.7c0,.4.2.8.5,1,.2.3.5.4.9.4s.6-.1.9-.4.4-.6.5-1.1,0-1.3.1-2.6c0-1.3,0-2.1-.1-2.5,0-.4-.2-.7-.4-.9h-.2Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-7-TEX-I-1D446&#34; d=&#34;M134.0159,93.3396c.7,0,1.4-.3,2-1,.6-.6.9-1.4.9-2.2s-.3-1.3-1-1.6c-1.3-.3-2.1-.6-2.5-.7s-.6-.2-.8-.4c-.7-.5-1.1-1.3-1.1-2.2s.2-1.4.6-2,.8-1.1,1.2-1.4.8-.5,1.3-.7.9-.3,1.2-.3h.3c1.2,0,2,.4,2.5,1.2l.2-.2.5-.5c.2-.2.3-.3.4-.4h0c.1333,0,.2.0333.2.1,0,.1-.2.8-.5,2.2s-.5,2.1-.6,2.2-.1,0-.3,0-.4,0-.4-.2v-1c0-.4,0-.8-.2-1.1s-.2-.5-.3-.7-.3-.3-.5-.5c-.4-.3-.9-.4-1.5-.4s-1.3.3-1.9.8-.9,1.2-.9,1.9c0,.4,0,.7.3,1s.4.5.8.6c0,0,.5.1,1.3.3s1.2.3,1.2.3c.4.1.8.4,1.2.9s.6,1.1.6,1.8,0,.7-.1,1c0,.3-.2.6-.3.9s-.4.7-.7,1.1-.7.8-1.2,1.1c-.5.3-1.1.6-1.7.7h-.6c-1.2,0-2.1-.3-2.8-1l-.2-.2-.5.6c-.3.3-.5.5-.5.6h-.2c-.1333,0-.2-.0333-.2-.1,0-.1.4-1.5,1.1-4.3,0,0,.1-.1.4-.1h.2s.1.1.1.2v1.2c0,.5.1.9.3,1.2s.5.6.8.7.6.3,1,.3h1s-.1.3-.1.3Z&#34;/&gt;
    &lt;path id=&#34;MJX-7-TEX-N-31&#34; d=&#34;M142.9159,89.0396h-.2c-.1.1-.3.2-.5.2h-1v-.6h.2c.4,0,.8,0,1.1-.2s.6-.2.7-.3.3-.2.4-.3h.4v7.8s.1,0,.2.1.1,0,.3,0h1.1v.6h-4.4v-.6h1.4c.1,0,0,0,0,0h0v-6.7h.3Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-9-TEX-I-1D444&#34; d=&#34;M459.8159,94.7118v-1.2h-.3c-.6.1-1.1.2-1.5.2-1.2,0-2.2-.3-3-1-.9-.7-1.4-1.7-1.6-3v-.8c0-1.2.3-2.4.9-3.6s1.4-2.1,2.4-3c1.5-1.3,3-1.9,4.6-1.9s.8,0,.9,0c1.2.2,2.1.7,2.9,1.6s1.1,2,1.1,3.3c0,2.2-.9,4.2-2.7,6-.8.7-1.6,1.3-2.4,1.7h-.3v.7c0,.3.2.6.4.8s.5.3.8.3.8-.1,1.2-.4.6-.6.8-1c0-.2.2-.3.2-.3,0,0,.2,0,.2.2,0,0,0,.3-.2.7-.1.3-.3.7-.5,1.2s-.5.9-1,1.2-.9.5-1.4.5c-1,0-1.5-.7-1.5-2h0v-.2h0ZM464.116,84.6118c0-.7,0-1.3-.3-1.8s-.4-.9-.8-1.1-.6-.4-.9-.5-.6-.2-1-.2c-.6,0-1.2.2-1.8.5-1.2.6-2.2,1.7-3,3.2-.8,1.6-1.1,3.1-1.1,4.5s.3,2.3,1,2.9c.3.3.5.4.5.4h0c0-.6.2-1.1.6-1.5.4-.4.9-.6,1.4-.6.3,0,.6,0,.8.2s.4.3.5.5.2.4.2.6,0,.3.1.5l.2-.2c.8-.5,1.4-1.3,2-2.2s.9-1.8,1.1-2.7.3-1.7.3-2.5c0,0,.2,0,.2,0ZM458.2159,92.9118c.6,0,1.1-.1,1.6-.4v-.2c0-.7-.3-1.1-.7-1.2h-.4c-.2,0-.5.1-.8.4s-.4.5-.4.8c0,.4.2.6.7.6h0Z&#34;/&gt;
    &lt;path id=&#34;MJX-9-TEX-N-30&#34; d=&#34;M468.8159,88.4118c.5-.7,1.1-1,2-1s.8.1,1.2.3.8.6,1,1.2c.3.7.5,1.7.5,3s-.2,2.4-.6,3.1c-.2.4-.4.7-.7.9s-.6.3-.8.4-.4,0-.7,0h-.7c-.3,0-.5-.2-.8-.4s-.5-.5-.7-.9c-.4-.7-.6-1.7-.6-3.1s.2-2.6.7-3.4l.2-.1h0ZM471.7159,88.2118c-.3-.3-.6-.4-.9-.4s-.7.1-.9.4c-.2.2-.4.5-.4.9s-.1,1.2-.1,2.5,0,2.3.1,2.7c0,.4.2.8.5,1,.2.3.5.4.9.4s.6-.1.9-.4c.3-.3.4-.6.5-1.1s0-1.3.1-2.6c0-1.3,0-2.1-.1-2.5,0-.4-.2-.7-.4-.9h-.2,0Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-10-TEX-I-1D444&#34; d=&#34;M526.2159,94.7118v-1.2h-.3c-.6.1-1.1.2-1.5.2-1.2,0-2.2-.3-3-1-.9-.7-1.4-1.7-1.6-3v-.8c0-1.2.3-2.4.9-3.6s1.4-2.1,2.4-3c1.5-1.3,3-1.9,4.6-1.9s.8,0,.9,0c1.2.2,2.1.7,2.9,1.6s1.1,2,1.1,3.3c0,2.2-.9,4.2-2.7,6-.8.7-1.6,1.3-2.4,1.7h-.3v.7c0,.3.2.6.4.8s.5.3.8.3.8-.1,1.2-.4.6-.6.8-1c0-.2.2-.3.2-.3,0,0,.2,0,.2.2,0,0,0,.3-.2.7-.1.3-.3.7-.5,1.2s-.5.9-1,1.2-.9.5-1.4.5c-1,0-1.5-.7-1.5-2h0v-.2h0ZM530.5159,84.6118c0-.7,0-1.3-.3-1.8s-.4-.9-.8-1.1-.6-.4-.9-.5-.6-.2-1-.2c-.6,0-1.2.2-1.8.5-1.2.6-2.2,1.7-3,3.2-.8,1.6-1.1,3.1-1.1,4.5s.3,2.3,1,2.9c.3.3.5.4.5.4h0c0-.6.2-1.1.6-1.5.4-.4.9-.6,1.4-.6.3,0,.6,0,.8.2s.4.3.5.5.2.4.2.6,0,.3.1.5l.2-.2c.8-.5,1.4-1.3,2-2.2s.9-1.8,1.1-2.7.3-1.7.3-2.5c0,0,.2,0,.2,0ZM524.6159,92.9118c.6,0,1.1-.1,1.6-.4v-.2c0-.7-.3-1.1-.7-1.2h-.4c-.2,0-.5.1-.8.4s-.4.5-.4.8c0,.4.2.6.7.6h0Z&#34;/&gt;
    &lt;path id=&#34;MJX-10-TEX-N-31&#34; d=&#34;M536.7159,88.5118h-.2c-.1.1-.3.2-.5.2h-1v-.6h.2c.4,0,.8,0,1.1-.2s.6-.2.7-.3.3-.2.4-.3h.4v7.8s.1,0,.2.1.1,0,.3,0h1.1v.6h-4.4v-.6h1.4c.1,0,0,0,0,0h0v-6.7h.3Z&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path d=&#34;M201.7159,36.4396c1.9.6,3.8,1.3,5.6,2.1&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M211.5159,40.6396c7.5,4.2,14,10.1,18.9,17.4&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 9.4 4.7; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M231.7159,60.0396c1,1.7,2,3.5,2.8,5.3&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;229.9159 64.1396 233.9159 64.1396 236.8159 61.3396 236.7159 70.8396 229.9159 64.1396&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path d=&#34;M135.3159,71.3396c.6-1.9,1.3-3.8,2.1-5.6&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M140.0159,60.7396c5.3-9.1,13-16.4,22.2-21&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 11.3 5.6; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M164.8159,38.5396c1.8-.8,3.7-1.5,5.6-2.1&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(174.0425 38.1396)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;RR&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path d=&#34;M169.7159,14.1396c-1.9.6-3.8,1.3-5.6,2.1&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M159.9159,18.3396c-7.5,4.2-14,10.1-18.9,17.4&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 9.4 4.7; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M139.7159,37.7396c-1,1.7-2,3.5-2.8,5.3&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;134.6159 39.0396 137.4159 41.9396 141.5159 41.8396 134.7159 48.5396 134.6159 39.0396&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path d=&#34;M236.1159,49.0396c-.6-1.9-1.3-3.8-2.1-5.6&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M231.3159,38.4396c-5.3-9.1-13-16.4-22.2-21&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 11.3 5.6; stroke-miterlimit: 10;&#34;/&gt;
    &lt;path d=&#34;M206.6159,16.2396c-1.8-.8-3.7-1.5-5.6-2.1&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(174.7893 15.8396)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;RL&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;circle cx=&#34;136.0159&#34; cy=&#34;101.7396&#34; r=&#34;3.65&#34;/&gt;
  &lt;polyline points=&#34;324.754 65.6146 .5 65.6146 .5 124.9646 324.754 124.9646&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(.4999 61.3396)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;栈&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;circle cx=&#34;236.8159&#34; cy=&#34;102.2896&#34; r=&#34;3.65&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;136.0159&#34; y1=&#34;101.7396&#34; x2=&#34;103.1769&#34; y2=&#34;148.2491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;168.3413&#34; y1=&#34;147.7298&#34; x2=&#34;136.0159&#34; y2=&#34;101.7396&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;circle cx=&#34;103.1769&#34; cy=&#34;148.2491&#34; r=&#34;3.65&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(127.2949 154.0742)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;circle cx=&#34;168.3413&#34; cy=&#34;148.2491&#34; r=&#34;3.65&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;237.0727&#34; y1=&#34;101.9874&#34; x2=&#34;204.2337&#34; y2=&#34;148.4969&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;269.3981&#34; y1=&#34;147.9776&#34; x2=&#34;237.0727&#34; y2=&#34;101.9874&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;circle cx=&#34;204.2337&#34; cy=&#34;148.4969&#34; r=&#34;3.65&#34;/&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(228.3518 154.322)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;circle cx=&#34;269.3981&#34; cy=&#34;148.4969&#34; r=&#34;3.65&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(26.4286 108.5545)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;circle cx=&#34;463.016&#34; cy=&#34;102.2896&#34; r=&#34;3.65&#34;/&gt;
  &lt;circle cx=&#34;527.616&#34; cy=&#34;102.2896&#34; r=&#34;3.65&#34;/&gt;
  &lt;polyline points=&#34;400.0922 67.5521 643.1397 67.5521 643.1397 126.9021 400.0922 126.9021&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(600.587 108.5548)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;···&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(607.2021 59.0397)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;队列&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;343.3254&#34; y1=&#34;102.2896&#34; x2=&#34;337.3254&#34; y2=&#34;102.2896&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;330.8655&#34; y1=&#34;102.2896&#34; x2=&#34;314.7156&#34; y2=&#34;102.2896&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12.9199 6.4599; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;311.4856&#34; y1=&#34;102.2896&#34; x2=&#34;305.4856&#34; y2=&#34;102.2896&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;308.2942 98.5864 306.721 102.2896 308.2942 105.9927 299.5159 102.2896 308.2942 98.5864&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;463.016&#34; y1=&#34;102.2896&#34; x2=&#34;457.016&#34; y2=&#34;102.2896&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;451.1643&#34; y1=&#34;102.2896&#34; x2=&#34;383.8703&#34; y2=&#34;102.2896&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 11.7033 5.8517; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;380.9445&#34; y1=&#34;102.2896&#34; x2=&#34;374.9445&#34; y2=&#34;102.2896&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(346.8025 109.3088)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;S&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(356.7385 109.3088)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;H&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图4&amp;emsp;面向依存句法分析的标准弧转移算法中的三种动作&lt;/p&gt;
&lt;p&gt;‌&lt;/p&gt;
&lt;span id=&#34;20241115000931CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;步骤&lt;/th&gt;
      &lt;th&gt;栈&lt;/th&gt;
      &lt;th&gt;队列&lt;/th&gt;
      &lt;th&gt;下一步动作&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;他 喜欢 下 象棋&lt;/td&gt;
      &lt;td&gt;SH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;17.7801&#34; height=&#34;16.7219&#34; viewBox=&#34;0 0 17.7801 16.7219&#34;&gt;
  &lt;text transform=&#34;translate(.4642 15.4079)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/td&gt;
      &lt;td&gt;喜欢 下 象棋&lt;/td&gt;
      &lt;td&gt;SH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;80.0604&#34; height=&#34;16.7219&#34; viewBox=&#34;0 0 80.0604 16.7219&#34;&gt;
  &lt;text transform=&#34;translate(44.5648 15.4077)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(.4642 15.4079)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/td&gt;
      &lt;td&gt;下 象棋&lt;/td&gt;
      &lt;td&gt;RL&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;84.0731&#34; height=&#34;71.8023&#34; viewBox=&#34;0 0 84.0731 71.8023&#34;&gt;
  &lt;text transform=&#34;translate(48.5775 15.4077)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;66.1714&#34; y1=&#34;19.3901&#34; x2=&#34;9.2276&#34; y2=&#34;51.0255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;10.1455 48.5762 9.486 50.8819 11.7921 51.5401 10.5338 52.2392 8.2285 51.5805 8.8872 49.2753 10.1455 48.5762&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(-.666 70.1232)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/td&gt;
      &lt;td&gt;下 象棋&lt;/td&gt;
      &lt;td&gt;SH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;119.6317&#34; height=&#34;71.8023&#34; viewBox=&#34;0 0 119.6317 71.8023&#34;&gt;
  &lt;text transform=&#34;translate(48.5775 15.4077)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;66.1714&#34; y1=&#34;19.3901&#34; x2=&#34;9.2276&#34; y2=&#34;51.0255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;10.1455 48.5762 9.486 50.8819 11.7921 51.5401 10.5338 52.2392 8.2285 51.5805 8.8872 49.2753 10.1455 48.5762&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(-.666 70.1232)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(101.2088 15.4075)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/td&gt;
      &lt;td&gt;象棋&lt;/td&gt;
      &lt;td&gt;SH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;201.346&#34; height=&#34;71.8023&#34; viewBox=&#34;0 0 201.346 71.8023&#34;&gt;
  &lt;text transform=&#34;translate(48.5775 15.4077)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;66.1714&#34; y1=&#34;19.3901&#34; x2=&#34;9.2276&#34; y2=&#34;51.0255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;10.1455 48.5762 9.486 50.8819 11.7921 51.5401 10.5338 52.2392 8.2285 51.5805 8.8872 49.2753 10.1455 48.5762&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(-.666 70.1232)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(101.2088 15.4075)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(135.8405 15.4078)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;RR&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;201.346&#34; height=&#34;71.8023&#34; viewBox=&#34;0 0 201.346 71.8023&#34;&gt;
  &lt;text transform=&#34;translate(48.5775 15.4077)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;66.1714&#34; y1=&#34;19.3901&#34; x2=&#34;9.2276&#34; y2=&#34;51.0255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;10.1455 48.5762 9.486 50.8819 11.7921 51.5401 10.5338 52.2392 8.2285 51.5805 8.8872 49.2753 10.1455 48.5762&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(-.666 70.1232)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(113.9069 15.4076)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;122.6207&#34; y1=&#34;19.8535&#34; x2=&#34;179.5645&#34; y2=&#34;51.4889&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;177 52.0035 179.3061 51.3454 178.6466 49.0396 179.9049 49.7387 180.5636 52.044 178.2583 52.7026 177 52.0035&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(163.3643 69.6422)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
&lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;RR&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;
&lt;div class=&#34;svg-figure&#34;&gt;
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; width=&#34;201.346&#34; height=&#34;127.1996&#34; viewBox=&#34;0 0 201.346 127.1996&#34;&gt;
  &lt;text transform=&#34;translate(48.5775 15.4077)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;喜欢&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;66.1714&#34; y1=&#34;19.3901&#34; x2=&#34;9.2276&#34; y2=&#34;51.0255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;10.1455 48.5762 9.486 50.8819 11.7921 51.5401 10.5338 52.2392 8.2285 51.5805 8.8872 49.2753 10.1455 48.5762&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;66.1714&#34; y1=&#34;19.3901&#34; x2=&#34;123.1151&#34; y2=&#34;51.0255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;120.5506 51.5401 122.8568 50.8819 122.1972 48.5762 123.4556 49.2753 124.1142 51.5805 121.809 52.2392 120.5506 51.5401&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(-.666 70.1232)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;他&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(115.4004 70.1229)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;下&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;124.1142&#34; y1=&#34;74.5688&#34; x2=&#34;181.058&#34; y2=&#34;106.2042&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;178.4935 106.7189 180.7996 106.0607 180.1401 103.7549 181.3984 104.454 182.0571 106.7593 179.7518 107.4179 178.4935 106.7189&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(164.8578 124.3575)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;象棋&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;
&lt;/div&gt;
      &lt;/td&gt;
      &lt;td&gt;&lt;/td&gt;
      &lt;td&gt;FIN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表9&amp;emsp;基于标准弧转移算法的依存句法树生成动作序列示例&lt;/p&gt;
&lt;p&gt;  基于转移算法的短语结构句法分析方法过程也类似，只不过栈中存储的是短语结构句法子树序列，队列中同样存储的是未被处理的词。在此不再赘述。&lt;/p&gt;
&lt;h3 id=&#34;序列到序列问题&#34;&gt;序列到序列问题
&lt;/h3&gt;&lt;p&gt;  除了文本分类和结构预测问题，还有很多自然语言处理问题可以归为序列到序列（Sequence-to-Sequence，Seq2seq）问题。机器翻译问题就是典型的代表，其中，输入为源语言句子，输出为目标语言句子。将其推广到序列到序列问题，输入就是一个由若干词组成的序列，输出则是一个新的序列，其中，输入和输出的序列不要求等长，同时也不要求词表一致。&lt;br&gt;
  使用传统的机器学习技术解决序列到序列问题是比较困难的，而基于深度学习模型，可以直接将输入序列表示为一个向量，然后，通过该向量生成输出序列。其中，对输入序列进行表示的过程又叫作编码，相应的模型则被称为&lt;strong&gt;编码器(Encoder)&lt;/strong&gt;；生成输出序列的过程又叫作解码，相应的模型则被称为&lt;strong&gt;解码器(Decoder)&lt;/strong&gt;。 因此，序列到序列模型也被称为&lt;strong&gt;编码器—解码器（Encoder-Decoder）模型&lt;/strong&gt;。&lt;a class=&#34;link&#34; href=&#34;#20241115213118CST&#34;&gt;图5&lt;/a&gt;以机器翻译问题为例，展示了一个编码器-解码器模型的示例。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241115213118CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 657.3811 340.919&#34; style=&#34;max-width:657.3811;&#34;&gt;
  &lt;rect x=&#34;.5&#34; y=&#34;247.4629&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(19.8886 275.885)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;I&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;rect x=&#34;.5&#34; y=&#34;124.8117&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;.5&#34; y1=&#34;124.8117&#34; x2=&#34;46.4047&#34; y2=&#34;170.7164&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;rect x=&#34;122.5952&#34; y=&#34;124.8117&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;122.5952&#34; y1=&#34;124.8117&#34; x2=&#34;168.5&#34; y2=&#34;170.7164&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;rect x=&#34;244.6905&#34; y=&#34;124.8117&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;244.6905&#34; y1=&#34;124.8117&#34; x2=&#34;290.5953&#34; y2=&#34;170.7164&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;23.4524&#34; y1=&#34;247.4629&#34; x2=&#34;23.4524&#34; y2=&#34;176.9719&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;27.1555 179.7805 23.4524 178.2072 19.7492 179.7805 23.4524 171.0022 27.1555 179.7805&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;122.5952&#34; y=&#34;246.6751&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(125.208 275.0971)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;Lo&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(146.8618 275.0971)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.014em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;v&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(156.2397 275.0971)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;e&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;145.5476&#34; y1=&#34;246.6751&#34; x2=&#34;145.5476&#34; y2=&#34;176.184&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;149.2507 178.9926 145.5476 177.4194 141.8445 178.9926 145.5476 170.2143 149.2507 178.9926&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;244.6905&#34; y=&#34;247.1772&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(252.001 275.5993)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.014em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;y&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(261.4507 275.5993)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate; letter-spacing: -.003em;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;o&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(271.9268 275.5993)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;u&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;267.6429&#34; y1=&#34;247.1772&#34; x2=&#34;267.6429&#34; y2=&#34;176.6862&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;271.346 179.4948 267.6429 177.9215 263.9397 179.4948 267.6429 170.7164 271.346 179.4948&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;46.4047&#34; y1=&#34;147.7641&#34; x2=&#34;116.6255&#34; y2=&#34;147.7641&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;113.8169 151.4672 115.3902 147.7641 113.8169 144.0609 122.5952 147.7641 113.8169 151.4672&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;168.5&#34; y1=&#34;147.7641&#34; x2=&#34;238.7208&#34; y2=&#34;147.7641&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;235.9122 151.4672 237.4854 147.7641 235.9122 144.0609 244.6905 147.7641 235.9122 151.4672&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;rect x=&#34;366.7857&#34; y=&#34;123.6534&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;412.6905&#34; y1=&#34;123.6534&#34; x2=&#34;366.7858&#34; y2=&#34;169.5582&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;rect x=&#34;488.881&#34; y=&#34;123.6534&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;534.7858&#34; y1=&#34;123.6534&#34; x2=&#34;488.881&#34; y2=&#34;169.5582&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;rect x=&#34;610.9762&#34; y=&#34;123.6534&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;656.881&#34; y1=&#34;123.6534&#34; x2=&#34;610.9763&#34; y2=&#34;169.5582&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;412.6905&#34; y1=&#34;146.6058&#34; x2=&#34;482.9113&#34; y2=&#34;146.6058&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;480.1027 150.3089 481.6759 146.6058 480.1027 142.9027 488.881 146.6058 480.1027 150.3089&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;534.7858&#34; y1=&#34;146.6058&#34; x2=&#34;605.0065&#34; y2=&#34;146.6058&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;602.1979 150.3089 603.7712 146.6058 602.1979 142.9027 610.9762 146.6058 602.1979 150.3089&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;290.5953&#34; y1=&#34;147.7641&#34; x2=&#34;360.816&#34; y2=&#34;147.7641&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;358.0074 151.4672 359.5807 147.7641 358.0074 144.0609 366.7858 147.7641 358.0074 151.4672&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;366.7858&#34; y=&#34;.5&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(380.738 31.71)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;我&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;389.7381&#34; y1=&#34;46.4048&#34; x2=&#34;389.7381&#34; y2=&#34;116.8958&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;386.035 114.0872 389.7381 115.6605 393.4413 114.0872 389.7381 122.8655 386.035 114.0872&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;488.881&#34; y=&#34;1.2879&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(502.8332 30.9229)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;爱&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;511.8334&#34; y1=&#34;47.1926&#34; x2=&#34;511.8334&#34; y2=&#34;117.6837&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;508.1302 114.8751 511.8334 116.4483 515.5365 114.8751 511.8334 123.6534 508.1302 114.8751&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;610.9763&#34; y=&#34;.7857&#34; width=&#34;45.9048&#34; height=&#34;45.9048&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;g style=&#34;isolation: isolate;&#34;&gt;
      &lt;text transform=&#34;translate(624.9287 31.4248)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;你&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;633.9286&#34; y1=&#34;46.6905&#34; x2=&#34;633.9286&#34; y2=&#34;117.1815&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;630.2255 114.3729 633.9286 115.9462 637.6318 114.3729 633.9286 123.1513 630.2255 114.3729&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(109.4762 338.7589)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;En&lt;/tspan&gt;&lt;tspan x=&#34;23.6338&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;c&lt;/tspan&gt;&lt;tspan x=&#34;33.2998&#34; y=&#34;0&#34; style=&#34;letter-spacing: .001em;&#34;&gt;o&lt;/tspan&gt;&lt;tspan x=&#34;44.0454&#34; y=&#34;0&#34; style=&#34;letter-spacing: 0em;&#34;&gt;der&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g style=&#34;isolation: isolate;&#34;&gt;
    &lt;text transform=&#34;translate(475.7525 338.759)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;De&lt;/tspan&gt;&lt;tspan x=&#34;23.7056&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;c&lt;/tspan&gt;&lt;tspan x=&#34;33.3716&#34; y=&#34;0&#34; style=&#34;letter-spacing: .001em;&#34;&gt;o&lt;/tspan&gt;&lt;tspan x=&#34;44.1177&#34; y=&#34;0&#34;&gt;der&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图5&amp;emsp;编码器—解码器模型示例&lt;/p&gt;
&lt;p&gt;  除了机器翻译，还有很多自然语言处理问题可以被建模为序列到序列问题，如对话系统中，用户话语可被视为输入序列，机器的回复则可被视为输出序列，甚至文本分类问题也可以被建模为序列到序列问题。首先，使用编码器对输入文本进行表示，然后，解码器只输出一个“词”，即文本所属的类别。结构预测问题也类似，首先，也需要使用编码器对输入文本进行表示，然后，在处理序列标注问题时，使用解码器生成输出标签序列（需要保证输出序列与输入序列长度相同）；在处理序列分割问题时，直接输出结果序列；在处理图结构生成问题时，需要将图表示的结果进行序列化，即通过一定的遍历顺序，将图中的节点和边转换为一个序列，然后再执行解码操作。不过，由于输入和输出有较强的对应关系，而序列到序列模型很难保证这种对应关系，所以结构预测问题较少直接使用序列到序列模型加以解决。但是无论如何，由于序列到序列模型具备强大的建模能力，其已成为自然语言处理的大一统框架，越来越多的问题都可以尝试使用该模型加以解决。也就是说，可以将复杂的自然语言处理问题转化为编码、解码两个子问题，然后就可以分别使用独立的模型建模了。&lt;/p&gt;
&lt;h2 id=&#34;评价指标&#34;&gt;评价指标
&lt;/h2&gt;&lt;p&gt;  由于自然语言处理任务的多样性以及评价的主观性，因此很难使用单一的评
价指标衡量所有任务的性能，所以针对不同类型的任务，往往采用不同的评价方法。对评价方法的准确把握，有助于深入理解各项自然语言处理任务。&lt;br&gt;
  &lt;strong&gt;准确率(Accuracy)&lt;/strong&gt;‌是最简单、直观的评价指标，经常被应用于文本分类等问题。其计算公式为：&lt;/p&gt;
&lt;span id=&#34;20241115213730CST&#34;&gt;&lt;/span&gt;\[
\text{ACC}^{\text{pos}}=\frac{\text{正确分类的文本数}}{\text{测试文本总数}}
\tag{18}
    \]
&lt;p&gt;  词性标注等序列标注问题也可以采用准确率进行评价，即:&lt;/p&gt;
&lt;span id=&#34;20241115213813CST&#34;&gt;&lt;/span&gt;\[
\text{ACC}^{\text{pos}}=\frac{\text{正确标注的词数}}{\text{测试文本中词的总数}}
\tag{19}
    \]
&lt;p&gt;  但是，并非全部的序列标注问题都可以采用准确率进行评价，如在将分词、命名实体识别等序列分割问题转化为序列标注问题后，就不应该使用准确率进行评价。以命名实体识别为例，如果采用按词计算的准确率，则很多非命名实体（相应词对应的类别为&lt;code&gt;O&lt;/code&gt;）也被计入准确率的计算之中。另外，如果错标了部分词，那么命名实体识别结果就是错误的，但是按照词准确率计算的话，仍然有部分词被认为分类正确了。如&lt;a class=&#34;link&#34; href=&#34;#20241115214019CST&#34;&gt;表10&lt;/a&gt;中的例子所示，按照词（此处为汉字）计算，在 \(8\) 个输入词中，仅仅预测错了 \(1\) 个（三），则准确率为 \(8/7=0.875\) ，这显然是不合理的。分词等其他序列分割问题的评价也存在类似的问题。&lt;/p&gt;
&lt;span id=&#34;20241115214019CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;输入&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;张&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;三&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;是&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;哈&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;尔&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;滨&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;人&lt;/th&gt;
          &lt;th style=&#34;text-align: left&#34;&gt;。&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;正确标注序列&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B-PER&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-PER&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;预测标注序列&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B-PER&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;B-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;I-LOC&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
          &lt;td style=&#34;text-align: left&#34;&gt;O&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表10&amp;emsp;命名体识别评价示例&lt;/p&gt;
&lt;p&gt;  那么，如何更合理地评价序列分割问题的性能呢？这就需要引入&lt;strong&gt;F值（F-Measure或F-Score）&lt;/strong&gt;‌评价指标，其是精确率(Precision)和召回率(Recall)的加权调和平均，具体公式为&lt;/p&gt;
&lt;span id=&#34;20241115214510CST&#34;&gt;&lt;/span&gt;\[
\text{F值}=\frac{(\beta^2+1)PR}{\beta^2(P+R)}
\tag{20}
    \]
&lt;p&gt;  式中， \(\beta\) 是加权调和参数；\(P\) 是精确率， \(R\) 是召回率。当 \(\beta=1\) 时，即精确率和召回率相同，此时F值又称 \(\text{F}_1\) 值，具体公式为&lt;/p&gt;
&lt;span id=&#34;20241115214710CST&#34;&gt;&lt;/span&gt;\[
\text{F}_1=\frac{2PR}{P+R}
\tag{21}
    \]
&lt;p&gt;  在命名实体识别问题中，精确率和召回率的定义分别为:&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;20241115214736CST&#34;&gt;&lt;/span&gt;\[
P=\frac{\text{正确识别的命名实体树木}}{\text{识别出的命名实体总数}}
\tag{22}
    \]
&lt;span id=&#34;20241115214802CST&#34;&gt;&lt;/span&gt;\[
R=\frac{\text{正确识别的命名实体数目}}{\text{测试文本中命名实体的总数}}
\tag{23}
    \]&lt;/p&gt;
&lt;p&gt;  仍以&lt;a class=&#34;link&#34; href=&#34;#20241115214019CST&#34;&gt;表10&lt;/a&gt;中的示例为例，其中，“正确识别的命名实体数目”为 \(1\) （“哈尔滨”），“识别出的命名实体总数”为 \(2\) （&amp;ldquo;张”和“哈尔滨”），“测试文本中命名实体的总数”为 \(2\) （&amp;ldquo;张三”和“哈尔滨”），那么此时精确率和召回率皆为 \(1/2 = 0.5\) ，最终的 \(\text{F}_1\) 。与基于词计算的准确率（ \(0.875\) ）相比，该值更为合理了。&lt;br&gt;
  理解了准确率和F值两种评价指标的区别和联系后，就可以很容易地为一个自然语言处理任务选择合适的评价指标。例如，在评价依存句法分析时（分析结果是一棵句法依存树），由于正确的标注结果为每个词都赋予了一个正确的父节点，因此可以使用以词为单位的准确率对依存句法分析结果进行评价，以表明有多大比例的词正确地找到了父节点。不过，评价指标通常不被直接称作准确率，而使用UAS (Unlabeled Attachment Score)指标，即词的父节点被正确识别的准确率。另外，在考虑一个词与父节点的关系时，则使用LAS(Labeled Attachment Score)指标进行评价，即词的父节点以及与父节点的句法关系都被正确识别的准确率。而在对语义依存图任务进行评价时，由于每个词的父节点的个数不确定，则无法使用准确率进行评价，此时就需要使用F值了，即以图中的弧为单位，计算 其识别的精确率和召回率，然后计算F值。与依存句法分析一样，F值也分为考虑语义关系和不考虑语义关系两种情况。类似地，短语结构句法分析也无法使用 准确率进行评价，可以使用句法结构中包含短语（包括短语类型及短语所覆盖的范围）的F值进行评价。&lt;br&gt;
  虽然准确率和F值可以用来对标准答案比较明确的任务进行评价，但是很多自然语言处理问题的答案并不明确，或者说并不唯一。如语言模型问题，在给定历史文本预测下一个词时，除了在语料库中出现的词，还有许多其他词也是合理的。因此，不能简单地使用准确率进行评价，所以才引入了困惑度这一评价指标。&lt;br&gt;
  对机器翻译系统的评价也类似，测试数据中的参考译文并非唯一正确的答案,目标语言翻译结果只要与源语言语义相同，其表达方式可以非常的灵活。BLEU值是最常用的机器翻译自动评价指标，其计算方法是统计机器译文与参考译文（可以不止一个）中N-gram匹配的数目占机器译文中所有N-gram总数的比率，即N-gram的精确率。其中N的取值不易过大，也不易过小。过大的N会导致机器译文与参考译文中共现的N-gram过少，而过小的N会无法衡量机器译文中词语的顺序信息，所以一般N最大取4。另外，由于此评价方法仅考虑了精确率，而忽视了召回率，所以其倾向于较短的翻译。因此，BLEU值引入了一个长度惩罚因子，鼓励机器译文中单词数目尽量接近参考译文中的数目。最终，BLEU值的区间是0〜1，得分越高表明机器翻译系统的译文质量越好。&lt;br&gt;
  对人机对话系统的评价，虽然也可以利用历史上人人对话数据，采用BLEU值等指标，但是由于回复的开放性，这种自动评价的结果很难保证公正、客观。因为与机器翻译类似，人机对话系统的机器回复也没有唯一的标准答案，但比机器翻译评价更困难的是，人机对话系统的回复甚至都没有需要与输入语义相同这一约束，也就是说人机对话系统的答案是开放式的。此外，由于对话的交互性，不能简单地通过一轮人机对话就对系统进行评价。以上这些问题都给人机对话系统的自动评价带来了极大的挑战。因此，在评价一个人机对话系统时，往往采用人工评价的方式，即通过人与系统进行多轮对话后，最终给出一个总的或多个维度（流畅度、相关度和准确性等）的主观分数。由于评分的主观性，人工评价的一致性往往又比较低，也就是说不同人打分可能差异比较大，为了消除这种差异性,又需要多人进行评价并最终取一个平均分数。因此，人工评价的代价往往非常高,很难在系统开发的过程中多次进行。综上，人机对话系统的评价方法仍是目前自然语言处理领域一个非常棘手的开放性问题，并没有很好地被解决。&lt;/p&gt;
&lt;h2 id=&#34;小结&#34;&gt;小结
&lt;/h2&gt;&lt;p&gt;  本篇首先介绍了词的向量表示方法，从传统的独热向量表示、分布式向量表
示到最新的词向量和词袋表示。然后，介绍了传统的N元语言模型，分词、词性标注等自然语言处理基础任务，其中以BPE为代表的子词切分经常被用于现代的预训练语言模型中。接着，简单介绍了信息抽取、情感分析等自然语言处理应用任务。以上任务看似纷繁复杂，但是基本可以归纳为三类问题，即：文本分类、结构预测和序列到序列问题，并可以使用相应的模型加以解决。最后，介绍了如何评价一个自然语言处理任务。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;

&amp;emsp;&amp;emsp;我再也不会给你写信了，因为我终于意识到我们的联络不过是巨大的幻觉。事实上，我们每个人都不过是在给自己写信，我毫无疑问地深深地爱着你，但我又绝望地发现你远离我时，我爱你更深。

&lt;/p&gt;&lt;span class=&#34;cite&#34;&gt;&lt;span&gt;― &lt;/span&gt;&lt;span&gt;安德烈·纪德, &lt;/span&gt;&lt;cite&gt;《窄门》&lt;/cite&gt;&lt;/span&gt;&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>自然语言处理（一）：自然语言处理概论</title>
        <link>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/introduction_to_natural_language_processing/</link>
        <pubDate>Tue, 15 Oct 2024 19:05:40 +0800</pubDate>
        
        <guid>https://www.brasswrench.com/posts/engineering/artificial_intelligence/natural_language_processing/introduction_to_natural_language_processing/</guid>
        <description>&lt;img src="https://www.brasswrench.com/true" alt="Featured image of post 自然语言处理（一）：自然语言处理概论" /&gt;







&lt;iframe
  class=&#34;netease-cloud-music-frame&#34;
  title=&#34;song&amp;#39;s 1372188635&#34;
  frameborder=&#34;no&#34;
  border=&#34;0&#34;
  marginwidth=&#34;0&#34;
  marginheight=&#34;0&#34;
  width=&#34;100%&#34;
  height=&#34;86&#34;
  loading=&#34;lazy&#34;
  src=&#34;https://music.163.com/outchain/player?type=2&amp;amp;id=1372188635&amp;amp;auto=0&amp;amp;height=66&#34;&gt;
&lt;/iframe&gt;

&lt;h1 id=&#34;自然语言处理概论&#34;&gt;自然语言处理概论
&lt;/h1&gt;&lt;p&gt;  本篇首先介绍了自然语言以及自然语言处理的基本概念，并总结了自然语言处理所面临的8个难点，即语言的抽象性、组合性、歧义性、进化性、非规范性、主观性、知识性及难移植性。正是由于这些难点的存在，导致自然语言处理任务纷繁复杂，并产生了多种划分方式，如按照任务层级，可以分为资源建设、基础任务、应用任务及应用系统四个层级；按照任务类型，可以分为回归、分类、匹配、解析及生成五大问题；按照研究对象的不同，可以分为形式、语义、推理及语用分析四个等级。从历史上看，自然语言处理经过了将近60年的发展，期间经历了理性主义和经验主义两大发展阶段。其中，经验主义又被分成了基于统计模型、深度学习模型及最新的预训练模型三个阶段，尤其是&amp;quot;预训练+精调&amp;quot;的方式，已成为自然语言处理的最新范式。&lt;/p&gt;
&lt;h2 id=&#34;自然语言处理的概念&#34;&gt;自然语言处理的概念
&lt;/h2&gt;&lt;p&gt;  &lt;strong&gt;自然语言&lt;/strong&gt;通常指的是人类语言（本书特指文本符号，而非语音信号），是人类思维的载体和交流的基本工具，也是人类区别于动物的根本标志，更是人类智能发展的外在体现形式之一。&lt;strong&gt;自然语言处理（Natural Language Processing，简称NLP）&lt;/strong&gt;‌主要研究用计算机理解和生成自然语言的各种理论和方法，属于人工智能领域的一个重要甚至核心分支，是计算机科学与语言学的交叉学科，又常被称为&lt;strong&gt;计算语言学(Computational Linguistics，简称CL）&lt;/strong&gt;。随着互联网的快速发展，网络文本呈爆炸性增长，为自然语言处理提出了巨大的应用需求。同时，自然语言处理研究也为人们更深刻地理解语言的机理和社会的机制提供了一条重要的途径，因此具有重要的科学意义。&lt;br&gt;
  目前，人们普遍认为人工智能的发展经历了从运算智能到感知智能，再到认知智能三个发展阶段。运算智能关注的是机器的基础运算和存储能力，在这方面，机器已经完胜人类。感知智能则强调机器的模式识别能力，如语音的识别以及图像的识别，目前机器在感知智能上的水平基本达到甚至超过了人类的水平。然而,在涉及自然语言处理以及常识建模和推理等研究的认知智能上，机器与人类还有很大的差距。&lt;/p&gt;
&lt;h2 id=&#34;自然语言处理的难点&#34;&gt;自然语言处理的难点
&lt;/h2&gt;&lt;p&gt;  为什么计算机在处理自然语言时会如此困难呢？这主要是因为自然语言具有高度的抽象性、近乎无穷变化的语义组合性、无处不在的歧义性和进化性，以及理解语言通常需要背景知识和推理能力等，下面分别进行具体的介绍。&lt;/p&gt;
&lt;h3 id=&#34;抽象性&#34;&gt;抽象性
&lt;/h3&gt;&lt;p&gt;  语言是由抽象符号构成的，每个符号背后都对应着现实世界或人们头脑中的复杂概念，如&amp;quot;车”表示各种交通工具&amp;mdash;&amp;mdash;汽车、火车、自行车等，它们都具有共同的属性，有轮子、能载人或物等。&lt;/p&gt;
&lt;h3 id=&#34;组合性&#34;&gt;组合性
&lt;/h3&gt;&lt;p&gt;  每种语言的基本符号单元都是有限的，如英文仅有26个字母，中国国家标准GB2312《信息交换用汉字编码字符集•基本集》共收录6763个汉字，即便是常用的单词，英文和中文也不过各几十万个。然而，这些有限的符号却可以组合成无限的语义，即使是相同的词汇，由于顺序不同，组合的语义也是不相同的，因此无法使用穷举的方法实现对自然语言的理解。&lt;/p&gt;
&lt;h3 id=&#34;歧义性&#34;&gt;歧义性
&lt;/h3&gt;&lt;p&gt;  歧义性主要是由于语言的形式和语义之间存在多对多的对应关系导致的，如:“苹果”一词，既可以指水果，也可以指一家公司或手机、电脑等电子设备，这就是典型的一词多义现象。另外，对于两个句子，如“曹雪芹写了红楼梦”和&amp;quot;红楼梦的作者是曹雪芹&amp;quot;，虽然它们的形式不同，但是语义是相同的。&lt;/p&gt;
&lt;h3 id=&#34;进化性&#34;&gt;进化性
&lt;/h3&gt;&lt;p&gt;  任何一种“活着&amp;quot;的语言都是在不断发展变化的，即语言具有明显的进化性，也称创造性。这主要体现在两方面：一方面是新词汇层出不穷，如&amp;quot;超女”“非典”&amp;ldquo;新冠&amp;quot;等；另一方面则体现在旧词汇被赋予新的含义，如&amp;quot;腐败&amp;rdquo;“杯具”等。除了词汇，语言的语法等也在不断变化，新的用法层出不穷。&lt;/p&gt;
&lt;h3 id=&#34;非规范性&#34;&gt;非规范性
&lt;/h3&gt;&lt;p&gt;  在互联网上，尤其是在用户产生的内容中，经常有一些有意或无意造成的非规范文本，为自然语言处理带来了不小的挑战，如音近词（&amp;ldquo;为什么” \(\to\) “为森么&amp;rdquo;，&amp;ldquo;怎么了” \(\to\) &amp;ldquo;肿么了&amp;rdquo;）、单词的简写或变形（please \(\to\) pls、cool \(\to\) coooooooool）、新造词（“喜大普奔”“不明觉厉”）和错别字等。&lt;/p&gt;
&lt;h3 id=&#34;主观性&#34;&gt;主观性
&lt;/h3&gt;&lt;p&gt;  和感知智能问题不同，属于认知智能的自然语言处理问题往往具有一定的主观性，这不但提高了数据标注的难度，还为准确评价系统的表现带来了一定的困难。如在分词这一最基本的中文自然语言处理任务中，关于什么是&amp;quot;词”的定义都尚不明确，比如&amp;quot;打篮球&amp;quot;是一个词还是两个词呢？所以，在标注自然语言处理任务的数据时，往往需要对标注人员进行一定的培训，使得很难通过众包的方式招募大量的标注人员，导致自然语言处理任务的标注数据规模往往比图像识别、语音识别的标注数据规模要小得多。此外，由于不同的分词系统往往标准都不尽相同，所以通过准确率等客观指标对比不同的分词系统本身就是不客观的。难以评价的问题在人机对话等任务中体现得更为明显，由于对话回复的主观性，很难有一个所谓的标准回复，所以如何自动评价人机对话系统仍然是一个开放的问题。&lt;/p&gt;
&lt;h3 id=&#34;知识性&#34;&gt;知识性
&lt;/h3&gt;&lt;p&gt;  理解语言通常需要背景知识以及基于这些知识的推理能力。例如，针对句子&amp;quot;张三打了李四，然后他倒了&amp;rdquo;，问其中的&amp;quot;他&amp;quot;指代的是&amp;quot;张三&amp;quot;还是&amp;quot;李四”？只有具备了“被打的人更容易倒”这一知识，才能推出&amp;quot;他”很可能指代的是“李四”。而如果将&amp;quot;倒”替换为&amp;quot;笑”，则&amp;quot;他”很可能指代的是“张三”，因为“被打的人不太容易笑&amp;quot;。但是，如何表示、获取并利用这些知识呢？目前的自然语言处理技术并没有提供很好的答案。&lt;/p&gt;
&lt;h3 id=&#34;难移植性&#34;&gt;难移植性
&lt;/h3&gt;&lt;p&gt;  由于自然语言处理涉及的任务和领域众多，并且它们之间的差异较大，造成了难移植性的问题。如下一节将要介绍的，自然语言处理任务根据层级可以分为分词、词性标注、句法分析和语义分析等基础任务，以及信息抽取、问答系统和对话系统等应用任务，由于这些任务的目标和数据各不相同，很难使用统一的技术或模型加以解决，因此不得不针对不同的任务设计不同的算法或训练不同的模型。另外，由于不同领域的用词以及表达方式不尽相同，因此在一个领域上学习的模型也很难应用于其他领域，这也给提高自然语言处理系统的可移植性带来了极大的困难。&lt;/p&gt;
&lt;p&gt;  综上所述，由于自然语言处理面临的众多问题，使其成为目前制约人工智能取得更大突破和更广泛应用的瓶颈之一。因此自然语言处理又被誉为&amp;quot;人工智能皇冠上的明珠”，并吸引了越来越多的人工智能研究者加入。&lt;/p&gt;
&lt;h2 id=&#34;自然语言处理任务体系&#34;&gt;自然语言处理任务体系
&lt;/h2&gt;&lt;h3 id=&#34;任务层级&#34;&gt;任务层级
&lt;/h3&gt;&lt;p&gt;  如前所述，自然语言处理的一大特点是涉及的任务众多。按照从低层到高层的方式，可以划分为资源建设、基础任务、应用任务和应用系统四大类。其中，&lt;strong&gt;资源建设&lt;/strong&gt;主要包括两大类任务，即语言学知识库建设和语料库资源建设。所谓&lt;strong&gt;语言学知识库&lt;/strong&gt;，一般包括词典、规则库等。&lt;strong&gt;词典(Dictionary)&lt;/strong&gt;‌也称&lt;strong&gt;辞典(Thesaurus)&lt;/strong&gt;，除了可以为词语提供音韵、句法或者语义解释以及示例等信息，还可以提供词语之间的关系信息，如上下位、同义反义关系等。&lt;strong&gt;语料库资源&lt;/strong&gt;指的是面向某一自然语言处理任务所标注的数据。无论是语言学资源，还是语料库资源的建设，都是上层各种自然语言处理技术的基础，需要花费大量的人力和物力构建。&lt;strong&gt;基础任务&lt;/strong&gt;包括分词、词性标注、句法分析和语义分析等，这些任务往往不直接面向终端用户，除了语言学上的研究价值，它们主要为上层应用任务提供所需的特征。&lt;strong&gt;应用任务&lt;/strong&gt;包括信息抽取、情感分析、问答系统、机器翻译和对话系统等，它们往往可以作为产品直接被终端用户使用。本部分第2篇将对这些任务进行更详细的介绍。&lt;br&gt;
  &lt;strong&gt;应用系统&lt;/strong&gt;特指自然语言处理技术在某一领域的综合应用，又被称为NLP+，即自然语言处理技术加上特定的应用领域。如在智能教育领域，可以使用文本分类、回归等技术，实现主观试题的智能评阅，帮助教师减轻工作量，提高工作效率；在智慧医疗领域，自然语言处理技术可以帮助医生跟踪最新的医疗文献，帮助患者进行简单的自我诊断等；在智能司法领域，可以使用阅读理解、文本匹配等技术，实现自动量刑、类案检索和法条推荐等。总之，凡是涉及文本理解和生成的领域，自然语言处理技术都可以发挥巨大的作用。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241015201555CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 863.7 437.1&#34; style=&#34;max-width:863.7;&#34;&gt;
  &lt;defs&gt;
    &lt;style&gt;
      .cls-1 {
        opacity: .2;
      }

      .cls-1, .cls-2, .cls-3, .cls-4, .cls-5, .cls-6, .cls-7, .cls-8 {
        isolation: isolate;
      }

      .cls-1, .cls-4, .cls-7 {
        stroke: #000;
        stroke-miterlimit: 10;
      }

      .cls-2 {
        letter-spacing: 0em;
      }

      .cls-2, .cls-3, .cls-5, .cls-6, .cls-8 {
        font-size: 18px;
      }

      .cls-2, .cls-3, .cls-8 {
        font-family: NotoSerifSC-Regular, &#39;Noto Serif SC&#39;;
      }

      .cls-4 {
        opacity: .5;
      }

      .cls-4, .cls-7 {
        fill: none;
      }

      .cls-5 {
        letter-spacing: -.5em;
      }

      .cls-5, .cls-6 {
        font-family: NotoSerifSC-Bold, &#39;Noto Serif SC&#39;;
        font-weight: 700;
      }

      .cls-8 {
        letter-spacing: -.5em;
      }
    &lt;/style&gt;
  &lt;/defs&gt;
  &lt;!-- Generator: Adobe Illustrator 28.7.1, SVG Export Plug-In . SVG Version: 1.2.0 Build 142)  --&gt;
  &lt;g&gt;
    &lt;g id=&#34;_layer_1&#34;&gt;
      &lt;polygon class=&#34;cls-1&#34; points=&#34;383.6 6.6 213.8 428.7 553.5 428.7 383.6 6.6&#34;/&gt;
      &lt;rect class=&#34;cls-7&#34; x=&#34;356.2&#34; y=&#34;42.4&#34; width=&#34;293.7&#34; height=&#34;68.6&#34; rx=&#34;12&#34; ry=&#34;12&#34;/&gt;
      &lt;text class=&#34;cls-6&#34; transform=&#34;translate(369.1 70.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;应用系&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-5&#34; transform=&#34;translate(423.1 70.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;统&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(369.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;教&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(387.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;育&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(405.6 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(414.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;医&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(432.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;疗&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(450.6 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(459.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;司&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(477.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;法&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(495.6 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(504.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;金&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(522.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;融&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(540.6 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(549.9 99.5)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;机器人等&lt;/tspan&gt;&lt;/text&gt;
      &lt;rect class=&#34;cls-7&#34; x=&#34;356.2&#34; y=&#34;122.5&#34; width=&#34;293.7&#34; height=&#34;92.8&#34; rx=&#34;12&#34; ry=&#34;12&#34;/&gt;
      &lt;text class=&#34;cls-6&#34; transform=&#34;translate(369.1 151)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;应用任务&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(369.9 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;信息抽&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(423.9 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;取&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(441.6 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(450.9 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;情感分&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(504.9 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;析&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(522.6 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(531.9 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;问答系&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(585.9 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;统&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(603.6 179.6)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(369.9 201.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;机器翻译和对话系统等&lt;/tspan&gt;&lt;/text&gt;
      &lt;rect class=&#34;cls-7&#34; x=&#34;356.2&#34; y=&#34;231.7&#34; width=&#34;293.7&#34; height=&#34;87.8&#34; rx=&#34;12&#34; ry=&#34;12&#34;/&gt;
      &lt;text class=&#34;cls-6&#34; transform=&#34;translate(369.1 260.2)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;基础任务&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(369.9 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;分&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(387.9 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;词&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(405.6 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(414.9 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;词性标&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-2&#34; transform=&#34;translate(468.9 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;注&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-8&#34; transform=&#34;translate(486.6 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;、&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(495.9 288.8)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;句法分析和语义&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(369.9 310.4)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;分析等&lt;/tspan&gt;&lt;/text&gt;
      &lt;rect class=&#34;cls-4&#34; x=&#34;356.2&#34; y=&#34;335.8&#34; width=&#34;293.7&#34; height=&#34;68.6&#34; rx=&#34;12&#34; ry=&#34;12&#34;/&gt;
      &lt;text class=&#34;cls-6&#34; transform=&#34;translate(369.1 364.3)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;资源建设&lt;/tspan&gt;&lt;/text&gt;
      &lt;text class=&#34;cls-3&#34; transform=&#34;translate(369.9 392.9)&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;语言学知识库建设和语料资源建设&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图1&amp;emsp;自然语言处理任务层级&lt;/p&gt;
&lt;h3 id=&#34;任务类别&#34;&gt;任务类别
&lt;/h3&gt;&lt;p&gt;  虽然自然语言处理任务多种多样，刚涉足该领域的人可能会觉得眼花缭乱、
无从下手，但是这些复杂的任务基本上都可以归纳为回归、分类、匹配、解析或 生成五类问题中的一种。下面分别加以介绍：&lt;/p&gt;
&lt;h4 id=&#34;回归问题&#34;&gt;回归问题
&lt;/h4&gt;&lt;p&gt;  即将输入文本映射为一个连续的数值，如对作文的打分，对案件刑期或罚款 金额的预测等。&lt;/p&gt;
&lt;h4 id=&#34;分类问题&#34;&gt;分类问题
&lt;/h4&gt;&lt;p&gt;  又称为文本分类，即判断一个输入的文本所属的类别，如：在垃圾邮件识别任务中，可以将一封邮件分为正常和垃圾两类；在情感分析中，可以将用户的情感分为褒义、贬义或中性三类。&lt;/p&gt;
&lt;h4 id=&#34;匹配问题&#34;&gt;匹配问题
&lt;/h4&gt;&lt;p&gt;  判断两个输入文本之间的关系，如：它们之间是复述或非复述两类关系；或
者蕴含、矛盾和无关三类关系。另外，识别两个输入文本之间的相似性（0到1的数值）也属于匹配问题。&lt;/p&gt;
&lt;h4 id=&#34;解析问题&#34;&gt;解析问题
&lt;/h4&gt;&lt;p&gt;  特指对文本中的词语进行标注或识别词语之间的关系，典型的解析问题包括 词性标注、句法分析等，另外还有很多问题，如分词、命名实体识别等也可以转化为解析问题。&lt;/p&gt;
&lt;h4 id=&#34;生成问题&#34;&gt;生成问题
&lt;/h4&gt;&lt;p&gt;  特指根据输入（可以是文本，也可以是图片、表格等其他类型数据）生成一段自然语言，如机器翻译、文本摘要、图像描述生成等都是典型的文本生成类任务。&lt;/p&gt;
&lt;h3 id=&#34;研究对象与层次&#34;&gt;研究对象与层次
&lt;/h3&gt;&lt;p&gt;  此外此外，也可以通过对研究对象的区分，将自然语言处理研究分成多个层次的任务。自然语言处理主要涉及“名”“实”“知”“境”之间的关系，如&lt;a class=&#34;link&#34; href=&#34;#20241113002341CST&#34;&gt;图2&lt;/a&gt;所示。其中&amp;quot;名&amp;quot;指的是语言符号；“实”表示客观世界中存在的事实或人的主观世界中的概念；&amp;ldquo;知”是指知识，包括常识知识、世界知识和领域知识等；“境”则是指语言所处的环境。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241113002341CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.7 378.1544&#34; style=&#34;max-width:863.7;&#34;&gt;
  &lt;g&gt;
    &lt;g&gt;
      &lt;rect x=&#34;359.85&#34; y=&#34;3.6984&#34; width=&#34;144&#34; height=&#34;69.931&#34; style=&#34;opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;text transform=&#34;translate(422.8499 44.2979)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;知&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;rect x=&#34;359.85&#34; y=&#34;141.3679&#34; width=&#34;144&#34; height=&#34;69.931&#34; style=&#34;opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;text transform=&#34;translate(422.8499 181.9674)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;名&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;rect x=&#34;139.4661&#34; y=&#34;141.3679&#34; width=&#34;144&#34; height=&#34;69.931&#34; style=&#34;opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;text transform=&#34;translate(202.466 181.9674)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;实&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;rect x=&#34;580.2339&#34; y=&#34;141.3679&#34; width=&#34;144&#34; height=&#34;69.931&#34; style=&#34;opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;text transform=&#34;translate(643.2338 181.9674)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;境&lt;/tspan&gt;&lt;/text&gt;
    &lt;/g&gt;
    &lt;text transform=&#34;translate(449.0502 114.0575)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;推理&lt;/tspan&gt;&lt;/text&gt;
    &lt;g&gt;
      &lt;polyline points=&#34;431.85 74.1975 419.9064 85.9393 426.9524 85.9393 426.9524 107.2851&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;431.85 140.5819 419.9064 128.8401 426.9524 128.8401 426.9524 107.4944 426.9524 106.7545&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;431.277 74.1975 443.2206 85.9393 436.1746 85.9393 436.1746 107.2851&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;431.277 140.5819 443.2206 128.8401 436.1746 128.8401 436.1746 107.4944 436.1746 106.7545&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;polyline points=&#34;359.1069 178.6654 347.3651 166.7218 347.3651 173.7678 326.0193 173.7678&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;283.7225 178.6654 295.4643 166.7218 295.4643 173.7678 316.81 173.7678 317.5499 173.7678&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;359.1069 178.0924 347.3651 190.036 347.3651 182.99 326.0193 182.99&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;283.7225 178.0924 295.4643 190.036 295.4643 182.99 316.81 182.99 317.5499 182.99&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;line x1=&#34;315.9841&#34; y1=&#34;173.7678&#34; x2=&#34;330.1746&#34; y2=&#34;173.7678&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;line x1=&#34;314.8413&#34; y1=&#34;182.99&#34; x2=&#34;331.0317&#34; y2=&#34;182.99&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;polyline points=&#34;579.9775 176.6198 568.2357 164.6762 568.2357 171.7222 546.89 171.7222&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;504.5931 176.6198 516.3349 164.6762 516.3349 171.7222 537.6807 171.7222 538.4205 171.7222&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;579.9775 176.0468 568.2357 187.9905 568.2357 180.9444 546.89 180.9444&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polyline points=&#34;504.5931 176.0468 516.3349 187.9905 516.3349 180.9444 537.6807 180.9444 538.4205 180.9444&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;line x1=&#34;536.8548&#34; y1=&#34;171.7222&#34; x2=&#34;551.0452&#34; y2=&#34;171.7222&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;line x1=&#34;535.7119&#34; y1=&#34;180.9444&#34; x2=&#34;551.9024&#34; y2=&#34;180.9444&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;path d=&#34;M402.4139,215.6793l16.7481-.1427-4.9823,4.9823,15.0937,15.0937s.134.134.271.2616l15.0937-15.0937-4.9823-4.9823,16.7481.1427&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;path d=&#34;M402.8191,215.2741l-.1427,16.7481,4.9823-4.9823,15.0937,15.0937.5232.5232,6.2643,6.2643s6.5257-6.5259,6.5257-6.5259l15.0937-15.0937,4.9823,4.9823-.1427-16.7481&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;/g&gt;
    &lt;text transform=&#34;translate(371.8901 114.0577)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（3&lt;/tspan&gt;&lt;tspan x=&#34;26.7842&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(299.0229 166.9735)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（2&lt;/tspan&gt;&lt;tspan x=&#34;26.7842&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(303.4145 205.7082)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;语义&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(519.8934 163.9678)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（2&lt;/tspan&gt;&lt;tspan x=&#34;26.7842&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(524.2849 202.7024)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;语用&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(391.4584 269.0736)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（1&lt;/tspan&gt;&lt;tspan x=&#34;26.7842&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;tspan x=&#34;36.1978&#34; y=&#34;0&#34;&gt;形式&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;text transform=&#34;translate(135.7314 309.3948)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;名&lt;/tspan&gt;&lt;tspan x=&#34;18&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;27&#34; y=&#34;0&#34;&gt;语言符号&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6001&#34;&gt;实&lt;/tspan&gt;&lt;tspan x=&#34;18&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;27&#34; y=&#34;21.6001&#34;&gt;客观事&lt;/tspan&gt;&lt;tspan x=&#34;81&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.019em;&#34;&gt;实&lt;/tspan&gt;&lt;tspan x=&#34;98.6582&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.481em;&#34;&gt;、&lt;/tspan&gt;&lt;tspan x=&#34;107.9995&#34; y=&#34;21.6001&#34;&gt;主观意见&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;43.2002&#34;&gt;知&lt;/tspan&gt;&lt;tspan x=&#34;18&#34; y=&#34;43.2002&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;27&#34; y=&#34;43.2002&#34;&gt;知识&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;64.7998&#34;&gt;境&lt;/tspan&gt;&lt;tspan x=&#34;18&#34; y=&#34;64.7998&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;27&#34; y=&#34;64.7998&#34;&gt;语言所处的环境&lt;/tspan&gt;&lt;/text&gt;
    &lt;text transform=&#34;translate(557.9234 309.3947)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(1)形式&lt;/tspan&gt;&lt;tspan x=&#34;58.2114&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;67.2114&#34; y=&#34;0&#34;&gt;名&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6001&#34;&gt;(2)语义&lt;/tspan&gt;&lt;tspan x=&#34;58.2114&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;67.2114&#34; y=&#34;21.6001&#34;&gt;名+实&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;43.2002&#34;&gt;(3)推理&lt;/tspan&gt;&lt;tspan x=&#34;58.2114&#34; y=&#34;43.2002&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;67.2114&#34; y=&#34;43.2002&#34;&gt;名+实+知&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;64.7998&#34;&gt;(4)语用&lt;/tspan&gt;&lt;tspan x=&#34;58.2114&#34; y=&#34;64.7998&#34; style=&#34;letter-spacing: -.5em;&#34;&gt;：&lt;/tspan&gt;&lt;tspan x=&#34;67.2114&#34; y=&#34;64.7998&#34;&gt;名+实+知+境&lt;/tspan&gt;&lt;/text&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图2&amp;emsp;自然语言处理涉及的研究对象&lt;/p&gt;
&lt;p&gt;  随着涉及的研究对象越来越多，自然语言处理的研究由浅入深，可以分为形式、语义、推理和语用四个层次。形式方面主要研究语言符号层面的处理，研究的是“名”与“名”之间的关系，如通过编辑距离等计算文本之间的相似度。语义方面主要研究语言符号和其背后所要表达的含义之间的关系，即“名&amp;quot;和&amp;quot;实”之间的关系，如“手机余额不足”和“电话欠费了”两个句子的表达方式完全不同,但是背后阐述的事实是相同的。语义问题也是自然语言处理领域目前主要关注的问题。推理是在语义研究的基础之上，进一步引入知识的运用，因此涉及“名”“实”和“知”之间关系，这一点正体现了自然语言的知识性。而语用则最为复杂,由于引入了语言所处的环境因素，通常表达的是“言外之意”和“弦外之音”，同时涉及了“名“”实”“知”“境”四个方面。例如，同样的一句话“你真讨厌”，从字面意义上明显是贬义，而如果是情侣之间的对话，则含义可能就不一样了。另外，语气、语调以及说话人的表情和动作也会影响其要表达的含义。&lt;/p&gt;
&lt;h2 id=&#34;自然语言处理技术发展历史&#34;&gt;自然语言处理技术发展历史
&lt;/h2&gt;&lt;p&gt;  自然语言处理自诞生之日起经历了两大研究范式的转换，即理性主义和经验主义，如&lt;a class=&#34;link&#34; href=&#34;#20241113004321CST&#34;&gt;图3&lt;/a&gt;所示。受到语料规模以及计算能力的限制，早期的自然语言处理主要采用基于理性主义的规则方法，通过专家总结的符号逻辑知识处理通用的自然语言现象。然而，由于自然语言的复杂性，基于理性主义的规则方法在面对实际应用场景中的问题时显得力不从心。&lt;/p&gt;
&lt;div class=&#34;figure_container&#34;&gt;
            &lt;span class=&#34;anchor&#34; id=&#34;20241113004321CST&#34;&gt;&lt;/span&gt;
            &lt;div class=&#34;svg-figure&#34;&gt;
                &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; data-name=&#34;layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.7 216.3853&#34; style=&#34;max-width:863.7;&#34;&gt;
  &lt;text transform=&#34;translate(113.9812 15.8398)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;小规模专家知识&lt;/tspan&gt;&lt;tspan x=&#34;9.4141&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（&lt;/tspan&gt;&lt;tspan x=&#34;27&#34; y=&#34;21.6001&#34;&gt;理性主&lt;/tspan&gt;&lt;tspan x=&#34;81&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;义&lt;/tspan&gt;&lt;tspan x=&#34;98.5859&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;tspan x=&#34;-55.3135&#34; y=&#34;43.2002&#34;&gt;20世纪50年代—20世纪90年代&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(326.5991 171.0249)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;大规模语料库统计模型&lt;/tspan&gt;&lt;tspan x=&#34;36.4141&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（&lt;/tspan&gt;&lt;tspan x=&#34;54&#34; y=&#34;21.6001&#34;&gt;经验主&lt;/tspan&gt;&lt;tspan x=&#34;108&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;义&lt;/tspan&gt;&lt;tspan x=&#34;125.5859&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;tspan x=&#34;-9.7017&#34; y=&#34;43.2002&#34;&gt;20世纪50年代—21世纪初&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(510.5938 15.8401)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;大规模语料库深度学习&lt;/tspan&gt;&lt;tspan x=&#34;36.4141&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（&lt;/tspan&gt;&lt;tspan x=&#34;54&#34; y=&#34;21.6001&#34;&gt;经验主&lt;/tspan&gt;&lt;tspan x=&#34;108&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;义&lt;/tspan&gt;&lt;tspan x=&#34;125.5859&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;tspan x=&#34;30.5283&#34; y=&#34;43.2002&#34;&gt;2010年-2017年&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(639.4346 171.0248)&#34; style=&#34;font-family: NotoSerifSC-ExtraLight, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; font-weight: 200;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;大规模预训练语言模型&lt;/tspan&gt;&lt;tspan x=&#34;36.4141&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;（&lt;/tspan&gt;&lt;tspan x=&#34;54&#34; y=&#34;21.6001&#34;&gt;经验主&lt;/tspan&gt;&lt;tspan x=&#34;108&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.023em;&#34;&gt;义&lt;/tspan&gt;&lt;tspan x=&#34;125.5859&#34; y=&#34;21.6001&#34; style=&#34;letter-spacing: -.477em;&#34;&gt;）&lt;/tspan&gt;&lt;tspan x=&#34;43.7764&#34; y=&#34;43.2002&#34;&gt;2018年至今&lt;/tspan&gt;&lt;/text&gt;
  &lt;g style=&#34;opacity: .2;&#34;&gt;
    &lt;polygon points=&#34;340.075 105.1447 74.9321 105.1447 44.2655 87.6844 309.4083 87.6844 340.075 105.1447&#34;/&gt;
    &lt;polygon points=&#34;559.1226 105.1447 349.2178 105.1447 314.9321 87.6844 524.8369 87.6844 559.1226 105.1447&#34;/&gt;
    &lt;polygon points=&#34;681.9797 105.1447 568.2655 105.1447 532.5829 87.6844 646.2972 87.6844 681.9797 105.1447&#34;/&gt;
    &lt;polygon points=&#34;804.8369 105.1447 691.1226 105.1447 653.5988 87.6844 767.3131 87.6844 804.8369 105.1447&#34;/&gt;
    &lt;polygon points=&#34;340.075 105.1447 74.9321 105.1447 44.2655 122.605 309.4083 122.605 340.075 105.1447&#34;/&gt;
    &lt;polygon points=&#34;559.1226 105.1447 349.2178 105.1447 314.9321 122.605 524.8369 122.605 559.1226 105.1447&#34;/&gt;
    &lt;polygon points=&#34;681.9797 105.1447 568.2655 105.1447 532.5829 122.605 646.2972 122.605 681.9797 105.1447&#34;/&gt;
    &lt;polygon points=&#34;804.8369 105.1447 691.1226 105.1447 653.5988 122.605 767.3131 122.605 804.8369 105.1447&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;opacity: .2;&#34;&gt;
    &lt;line x1=&#34;178.3678&#34; y1=&#34;71.0495&#34; x2=&#34;178.3678&#34; y2=&#34;87.6844&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;circle cx=&#34;178.3678&#34; cy=&#34;71.0495&#34; r=&#34;2.2857&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;opacity: .2;&#34;&gt;
    &lt;line x1=&#34;424.5512&#34; y1=&#34;139.2399&#34; x2=&#34;424.5512&#34; y2=&#34;122.605&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;circle cx=&#34;424.5512&#34; cy=&#34;139.2399&#34; r=&#34;2.2857&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;opacity: .2;&#34;&gt;
    &lt;line x1=&#34;595.4254&#34; y1=&#34;71.0495&#34; x2=&#34;595.4254&#34; y2=&#34;87.6844&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;circle cx=&#34;595.4254&#34; cy=&#34;71.0495&#34; r=&#34;2.2857&#34;/&gt;
  &lt;/g&gt;
  &lt;g style=&#34;opacity: .2;&#34;&gt;
    &lt;line x1=&#34;729.2178&#34; y1=&#34;139.2399&#34; x2=&#34;729.2178&#34; y2=&#34;122.605&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;circle cx=&#34;729.2178&#34; cy=&#34;139.2399&#34; r=&#34;2.2857&#34;/&gt;
  &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;
        &lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图3&amp;emsp;自然语言处理技术发展阶段&lt;/p&gt;
&lt;p&gt;  从20世纪90年代开始，随着计算机运算速度和存储容量的快速增加，以及 统计学习方法的愈发成熟，使得以语料库为核心的统计学习方法在自然语言处理领域得以大规模应用。由于大规模的语料库中包含了大量关于语言的知识，使得基于语料库的统计自然语言处理方法能够更加客观、准确和细致地捕获语言规律。在这一时期，词法分析、句法分析、信息抽取、机器翻译和自动问答等领域的研究均取得了一定程度的成功。&lt;br&gt;
  尽管基于统计学习的自然语言处理取得了一定程度的成功，但它也有明显的局限性，也就是需要事先利用经验性规则将原始的自然语言输入转化为机器能够处理的向量形式。这一转化过程（也称为特征提取）需要细致的人工操作和一定的专业知识，因此也被称为&lt;strong&gt;特征工程&lt;/strong&gt;。&lt;br&gt;
  2010年之后，随着&lt;strong&gt;基于深度神经网络的表示学习方法&lt;/strong&gt;（也称&lt;strong&gt;深度学习&lt;/strong&gt;）的兴起，该方法直接端到端地学习各种自然语言处理任务，不再依赖人工设计的特征。所谓&lt;strong&gt;表示学习&lt;/strong&gt;，是指机器能根据输入自动地发现可以用于识别或分类等任务的表示。具体地，深度学习模型在结构上通常包含多层的处理层。底层的处理层接收原始输入，然后对其进行抽象处理，其后的每一层都在前一层的结果上进行更深层次的抽象，最后一层的抽象结果即为输入的一个表示，用于最终的目标任务。其中的抽象处理，是由模型内部的参数进行控制的，而参数的更新值则是根据训练数据上模型的表现，使用反向传播算法学习得到的。由此可以看出，深度学习可以有效地避免统计学习方法中的人工特征提取操作，自动地发现对于目标任务有效的表示。在语音识别、计算机视觉等领域，深度学习已经取得了目前最好的效果，在自然语言处理领域，深度学习同样引发了一系列的变革。&lt;br&gt;
  除了可以自动地发现有效特征，表示学习方法的另一个好处是打通了不同任
务之间的壁垒。传统统计学习方法需要针对不同的任务设计不同的特征，这些特征往往是无法通用的。而表示学习能够将不同任务在相同的向量空间内进行表示,从而具备跨任务迁移的能力。除了可以跨任务，还可以实现跨语言甚至跨模态的迁移。综合利用多项任务、多种语言和多个模态的数据，使得人工智能向更通用的方向迈进了一步。&lt;br&gt;
  同样，得益于深度学习技术的快速发展，自然语言处理的另一个主要研究方 向——&lt;strong&gt;自然语言生成&lt;/strong&gt;也取得了长足进步。长期以来，自然语言生成的研究几乎处于停滞状态，除了使用模板生成一些简单的语句，并没有什么太有效的解决办法。随着基于深度学习的序列到序列生成框架的提出，这种逐词的文本生成方法全面提升了生成技术的灵活性和实用性，完全革新了机器翻译、文本摘要和人机对话等任务的技术范式。&lt;br&gt;
  虽然深度学习技术大幅提高了自然语言处理系统的准确率，但是基于深度学 习的算法有一个致命的缺点，就是过度依赖于大规模有标注数据。对于语音识别、图像处理等感知类任务，标注数据相对容易获得，如：在图像处理领域，人们已经为上百万幅的图像标注了相应的类别（如Image Net数据集）；用于语音识别的“语音—文本”平行语料库也有几十万小时。然而，由于自然语言处理这一认知类任务所具有的&amp;quot;主观性”特点，以及其所面对的任务和领域众多，使得标注大规模语料库的时间过长，人力成本过于高昂，因此自然语言处理的标注数据往往不够充足，很难满足深度学习模型训练的需要。&lt;br&gt;
  早期的静态词向量预训练模型，以及后来的动态词向量预训练模型，特别是 2018年以来，以BERT、GPT为代表的超大规模预训练语言模型恰好弥补了自然语言处理标注数据不足的缺点，帮助自然语言处理取得了一系列的突破，使得包括阅读理解在内的所有自然语言处理任务的性能都得到了大幅提高，在有些数据 集上达到或甚至超过了人类水平。&lt;br&gt;
  所谓&lt;strong&gt;模型预训练（Pre-train）&lt;/strong&gt;，即首先在一个原任务上预先训练一个初始模型，然后在下游任务（也称目标任务）上继续对该模型进行&lt;strong&gt;精调（Fine-tune）&lt;/strong&gt;，从而达到提高下游任务准确率的目的。在本质上，这也是&lt;strong&gt;迁移学习(Transfer Learning)&lt;/strong&gt;‌思想的一种应用。然而，由于同样需要人工标注，导致原任务标注数据的规模往往也非常有限。那么，如何获得更大规模的标注数据呢？&lt;br&gt;
  其实，文本自身的顺序性就是一种天然的标注数据，通过若干连续出现的词 语预测下一个词语（又称语言模型）就可以构成一项原任务。由于图书、网页等文本数据规模近乎无限，所以，可以非常容易地获得超大规模的预训练数据。有人将这种不需要人工标注数据的预训练学习方法称为&lt;strong&gt;无监督学习(Unsupervised Learning)&lt;/strong&gt;，其实这并不准确，因为学习的过程仍然是&lt;strong&gt;有监督的(Supervised)&lt;/strong&gt;，更准确的叫法应该是&lt;strong&gt;自监督学习（Self-supervised Learning）&lt;/strong&gt;。&lt;br&gt;
  为了能够刻画大规模数据中复杂的语言现象，还要求所使用的深度学习模型
容量足够大。基于自注意力的Transformer模型显著地提升了对于自然语言的建模能力，是近年来具有里程碑意义的进展之一。要想在可容忍的时间内，在如此大规模的数据上训练一个超大规模的Transformer模型，也离不开以GPU、TPU为代表的现代并行计算硬件。可以说，超大规模预训练语言模型完全依赖“蛮力”，在大数据、大模型和大算力的加持下，使自然语言处理取得了长足的进步。如OpenAI推出的GPT-3，是一个具有1750亿个参数的巨大规模，无须接受任何特定任务的训练，便可以通过小样本学习完成十余种文本生成任务，如问答、风格迁移、网页生成和自动编曲等。目前，预训练模型已经成为自然语言处理的新范式。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;

&amp;emsp;&amp;emsp;你们要努力进窄门，因为宽门和阔路引向沉沦，进去的人很多；然而窄门和狭道却通向永生，只有少数人能找到。

&lt;/p&gt;&lt;span class=&#34;cite&#34;&gt;&lt;span&gt;― &lt;/span&gt;&lt;span&gt;安德烈·纪德, &lt;/span&gt;&lt;cite&gt;《窄门》&lt;/cite&gt;&lt;/span&gt;&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
