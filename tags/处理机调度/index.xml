<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>处理机调度 on 黄铜扳手的图书馆</title>
        <link>https://www.brasswrench.com/tags/%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6/</link>
        <description>Recent content in 处理机调度 on 黄铜扳手的图书馆</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>黄铜扳手</copyright>
        <lastBuildDate>Tue, 26 Nov 2024 22:23:58 +0800</lastBuildDate><atom:link href="https://www.brasswrench.com/tags/%E5%A4%84%E7%90%86%E6%9C%BA%E8%B0%83%E5%BA%A6/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>操作系统（三）：处理机调度与死锁</title>
        <link>https://www.brasswrench.com/posts/engineering/computer_science/operating_system/processor_scheduling_and_deadlock/</link>
        <pubDate>Sun, 24 Nov 2024 16:28:25 +0800</pubDate>
        
        <guid>https://www.brasswrench.com/posts/engineering/computer_science/operating_system/processor_scheduling_and_deadlock/</guid>
        <description>&lt;img src="https://www.brasswrench.com/true" alt="Featured image of post 操作系统（三）：处理机调度与死锁" /&gt;







&lt;iframe
  class=&#34;netease-cloud-music-frame&#34;
  title=&#34;song&amp;#39;s 1422212905&#34;
  frameborder=&#34;no&#34;
  border=&#34;0&#34;
  marginwidth=&#34;0&#34;
  marginheight=&#34;0&#34;
  width=&#34;100%&#34;
  height=&#34;86&#34;
  loading=&#34;lazy&#34;
  src=&#34;https://music.163.com/outchain/player?type=2&amp;amp;id=1422212905&amp;amp;auto=0&amp;amp;height=66&#34;&gt;
&lt;/iframe&gt;

&lt;h1 id=&#34;处理机调度与死锁&#34;&gt;处理机调度与死锁
&lt;/h1&gt;&lt;p&gt;  在多道程序环境下，内存中存在着多个进程，其数目往往多于处理机数目。这就要求系统能按某种算法，动态地将处理机分配给处于就绪状态的一个进程，使之执行。分配处理机的任务是由处理机调度程序完成的。对于大型系统运行时的性能，如系统吞吐量、资源利用率、作业周转时间或响应的及时性等，在很大程度上都取决于处理机调度性能的好坏。因而，处理机调度便成为OS中至关重要的部分。&lt;/p&gt;
&lt;h2 id=&#34;处理机调度的层次和调度算法的目标&#34;&gt;处理机调度的层次和调度算法的目标
&lt;/h2&gt;&lt;p&gt;  在多道程序系统中，调度的实质是一种资源分配，处理机调度是对处理机资源进行分配。处理机调度算法是指根据处理机分配策略所规定的处理机分配算法。在多道批处理系统中，一个作业从提交到获得处理机执行，直至作业运行完毕，可能需要经历多级处理机调度，下面先来了解处理机调度的层次。&lt;/p&gt;
&lt;h3 id=&#34;处理机调度的层次&#34;&gt;处理机调度的层次
&lt;/h3&gt;&lt;h4 id=&#34;高级调度high-level-scheduling&#34;&gt;高级调度(High Level Scheduling)
&lt;/h4&gt;&lt;p&gt;  高级调度又称&lt;strong&gt;长程调度&lt;/strong&gt;或&lt;strong&gt;作业调度&lt;/strong&gt;，它的调度对象是作业。其主要功能是根据某种算法，决定将外存上处于后备队列中的哪几个作业调入内存，为它们创建进程、分配必要的资源，并将它们放入就绪队列。高级调度主要用于多道批处理系统中，而在分时和实时系统中不设置高级调度。&lt;/p&gt;
&lt;h4 id=&#34;低级调度low-level-scheduling&#34;&gt;低级调度(Low Level Scheduling)
&lt;/h4&gt;&lt;p&gt;  低级调度又称为&lt;strong&gt;进程调度&lt;/strong&gt;或&lt;strong&gt;短程调度&lt;/strong&gt;，其所调度的对象是进程（或内核级线程）。其主要功能是，根据某种算法，决定就绪队列中的哪个进程应获得处理机，并由分派程序将处理机分配给被选中的进程。进程调度是最基本的一种调度，在多道批处理、分时和实时三种类型的OS中，都必须配置这级调度。&lt;/p&gt;
&lt;h4 id=&#34;中级调度intermediate-scheduling&#34;&gt;中级调度(Intermediate Scheduling)
&lt;/h4&gt;&lt;p&gt;  中级调度又称为&lt;strong&gt;内存调度&lt;/strong&gt;。引入中级调度的主要目的是，提高内存利用率和系统吞吐量。为此，应把那些暂时不能运行的进程，调至外存等待，此时进程的状态称为就绪驻外存状态（或挂起状态）。当它们已具备运行条件且内存又稍有空闲时，由中级调度来决定，把外存上的那些已具备运行条件的就绪进程再重新调入内存，并修改其状态为就绪状态，挂在就绪队列上等待。中级调度实际上就是存储器管理中的对换功能。&lt;/p&gt;
&lt;p&gt;  在上述三种调度中，进程调度的运行频率最高，在分时系统中通常仅10〜100ms便进行一次进程调度，因此把它称为短程调度。为避免调度本身占用太多的CPU时间，不宜使进程调度算法太复杂。作业调度往往是发生在一批作业已运行完毕并退出系统，又需要重新调入一批作业进入内存时，作业调度的周期较长，大约几分钟一次，因此把它称为长程调度。由于其运行频率较低，故允许作业调度算法花费较多的时间。中级调度的运行频率基本上介于上述两种调度之间，因此把它称为中程调度。&lt;/p&gt;
&lt;h3 id=&#34;处理机调度算法的目标&#34;&gt;处理机调度算法的目标
&lt;/h3&gt;&lt;p&gt;  一般而言，在一个操作系统的设计中，应如何选择调度方式和算法，在很大程度上取决于操作系统的类型及其设计目标，例如，在批处理系统、分时系统和实时系统中，通常都采用不同的调度方式和算法。&lt;/p&gt;
&lt;h4 id=&#34;处理机调度算法的共同目标&#34;&gt;处理机调度算法的共同目标
&lt;/h4&gt;&lt;p&gt;  (1)资源利用率。为提高系统的资源利用率，应使系统中的处理机和其它所有资源都尽可能地保持忙碌状态，其中最重要的处理机利用率可用以下方法计算：&lt;/p&gt;
&lt;span id=&#34;20241126095549CST&#34;&gt;&lt;/span&gt;\[
\text{CPU的利用率}=\frac{\text{CPU有效工作时间}}{\text{CPU有效工作时间}+\text{CPU空闲等待时间}}
\tag{1}
    \]
&lt;p&gt;  (2)公平性。公平性是指应使诸进程都获得合理的CPU时间，不会发生进程饥饿现象。公平性是相对的，对相同类型的进程应获得相同的服务；但对于不同类型的进程，由于其紧急程度或重要性的不同，则应提供不同的服务。&lt;br&gt;
  (3)平衡性。由于在系统中可能具有多种类型的进程，有的属于计算型作业，有的属于I/O型。为使系统中的CPU和各种外部设备都能经常处于忙碌状态，调度算法应尽可能保持系统资源使用的平衡性。&lt;br&gt;
  (4)策略强制执行。对所制订的策略其中包括安全策略，只要需要，就必须予以准确地执行，即使会造成某些工作的延迟也要执行。&lt;/p&gt;
&lt;h4 id=&#34;批处理系统的目标&#34;&gt;批处理系统的目标
&lt;/h4&gt;&lt;p&gt;  (1)平均周转时间短。所谓&lt;strong&gt;周转时间&lt;/strong&gt;，是指从作业被提交给系统开始，到作业完成为止的这段时间间隔（称为作业周转时间）。它包括四部分时间：作业在外存后备队列上等待（作业）调度的时间，进程在就绪队列上等待进程调度的时间，进程在CPU上执行的时间，以及进程等待I/O操作完成的时间。其中的后三项在一个作业的整个处理过程中，可能发生多次。&lt;br&gt;
  对每个用户而言，都希望自己作业的周转时间最短。但作为计算机系统的管理者，则总是希望能使平均周转时间最短，这不仅会有效地提高系统资源的利用率，而且还可使大多数用户都感到满意。应使作业周转时间和作业的平均周转时间尽可能短。否则，会使许多用户的等待时间过长，这将会引起用户特别是短作业用户的不满。可把平均周转时间描述为&lt;/p&gt;
&lt;span id=&#34;20241126095915CST&#34;&gt;&lt;/span&gt;\[
T=\frac{1}{n}\left(\sum_{i=1}^{n}T_i\right)
\tag{2}
    \]
&lt;p&gt;  为了进一步反映调度的性能，更清晰地描述各进程在其周转时间中，等待和执行时间的具体分配状况，往往使用带权周转时间，即作业的周转时间 \(T\) 与系统为它提供服务的时间 \(T_s\) 之比，即 \(\displaystyle W=\frac{T}{T_s}\) 。而平均带权周转时间则可表示为：&lt;/p&gt;
&lt;span id=&#34;20241126100132CST&#34;&gt;&lt;/span&gt;\[
W=\frac{1}{n}\sum_{i=1}^{n}\frac{T_i}{T_s}
\tag{3}
    \]
&lt;p&gt;  (2)系统吞吐量高。由于吞吐量是指在单位时间内系统所完成的作业数，因而它与批处理作业的平均长度有关。事实上，如果单纯是为了获得高的系统吞吐量，就应尽量多地选择短作业运行。&lt;br&gt;
  (3)处理机利用率高。对于大、中型计算机，CPU价格十分昂贵，致使处理机的利用率成为衡量系统性能的十分重要的指标：而调度方式和算法又对处理机的利用率起着十分重要的作用。如果单纯是为使处理机利用率高，应尽量多地选择计算量大的作业运行。由上所述可以看出，这些要求之间是存在着一定矛盾的。&lt;/p&gt;
&lt;h4 id=&#34;分时系统的目标&#34;&gt;分时系统的目标
&lt;/h4&gt;&lt;p&gt;  (1)响应时间快。响应时间快是选择分时系统中进程调度算法的重要准则。所谓响应时间，是从用户通过键盘提交一个请求开始，直到屏幕上显示出处理结果为止的一段时间间隔。它包括三部分时间：一是请求信息从键盘输入开始，直至将其传送到处理机的时间；二是处理机对请求信息进行处理的时间；三是将所形成的响应信息回送到终端显示器的时间。&lt;br&gt;
  (2)均衡性。用户对响应时间的要求并非完全相同。通常用户对较复杂任务的响应时间允许较长，而对较简单任务的响应时间则要短。所谓均衡性，是指系统响应时间的快慢应与用户所请求服务的复杂性相适应。&lt;/p&gt;
&lt;h4 id=&#34;实时系统的目标&#34;&gt;实时系统的目标
&lt;/h4&gt;&lt;p&gt;  (1)截止时间的保证。所谓截止时间，是指某任务必须开始执行的最迟时间，或必须完成的最迟时间。对于严格的实时系统，其调度方式和调度算法必须能保证这一点，否则将可能造成难以预料的后果。对于实时系统而言，调度算法的一个主要目标是保证实时任务对截止时间的要求。对于&lt;a class=&#34;link&#34; href=&#34;https://www.brasswrench.com/posts/engineering/computer_science/operating_system/introduction_to_operating_system/#20241126165221CST&#34;&gt;HRT任务&lt;/a&gt;，其调度方式和调度算法必须确保对截止时间的要求，否则将可能造成难以预料的后果；而对于&lt;a class=&#34;link&#34; href=&#34;https://www.brasswrench.com/posts/engineering/computer_science/operating_system/introduction_to_operating_system/#20241126165233CST&#34;&gt;SRT任务&lt;/a&gt;，其调度方式和调度算法也应基本上能保证对截止时间的要求。&lt;br&gt;
  (2)可预测性。在实时系统中，可预测性显得非常重要。例如，在多媒体系统中，无论是电影还是电视剧都应是连续播放的，这就提供了请求的可预测性。如果系统中采用了双缓冲，则因为可实现第 \(i\) 帧的播放和第 \(i+1\) 帧的读取并行处理，进而可提高其实时性。&lt;/p&gt;
&lt;h2 id=&#34;作业与作业调度&#34;&gt;作业与作业调度
&lt;/h2&gt;&lt;p&gt;  在多道批处理系统中，作业是用户提交给系统的一项相对独立的工作。操作员把用户 提交的作业通过相应的输入设备输入到磁盘存储器，并保存在一个后备作业队列中。再由作业调度程序将其从外存调入内存。&lt;/p&gt;
&lt;h3 id=&#34;批处理系统中的作业&#34;&gt;批处理系统中的作业
&lt;/h3&gt;&lt;h4 id=&#34;作业和作业步&#34;&gt;作业和作业步
&lt;/h4&gt;&lt;p&gt;  (1)作业(Job)。作业是一个比程序更为广泛的概念，它不仅包含了通常的程序和数据，而且还应配有一份作业说明书，系统根据该说明书来对程序的运行进行控制。在批处理系统中，是以作业为基本单位从外存调入内存的。&lt;br&gt;
  (2)作业步(Job Step)。通常，在作业运行期间，每个作业都必须经过若干个相对独立，又相互关联的顺序加工步骤才能得到结果。我们把其中的每一个加工步骤称为一个作业步，各作业步之间存在着相互联系，往往是上一个作业步的输出作为下一个作业步的输入。例如，一个典型的作业可分成：“编译”作业步，“链接装配”作业步和“运行”作业步。&lt;/p&gt;
&lt;h4 id=&#34;作业控制块job-control-blockjcb&#34;&gt;作业控制块(Job Control Block,JCB)
&lt;/h4&gt;&lt;p&gt;  为了管理和调度作业，在多道批处理系统中，为每个作业设置了一个作业控制块JCB，它是作业在系统中存在的标志，其中保存了系统对作业进行管理和调度所需的全部信息。通常在JCB中包含的内容有：作业标识、用户名称、用户账号、作业类型（CPU繁忙型、I/O繁忙型、批量型、终端型）、作业状态、调度信息（优先级、作业运行时间）、资源需求（预计运行时间、要求内存大小等）、资源使用情况等。&lt;br&gt;
  每当一个作业进入系统时，便由“作业注册”程序为该作业建立一个作业控制块JCB。再根据作业类型，将它放到相应的作业后备队列中等待调度。调度程序依据一定的调度算法来调度它们，被调度到的作业将被装入内存。在作业运行期间，系统就按照JCB中的信息和作业说明书对作业进行控制。当一个作业执行结束进入完成状态时，系统负责回收已分配给它的资源，撤销该作业控制块。&lt;/p&gt;
&lt;h4 id=&#34;作业运行的三个阶段和三种状态&#34;&gt;作业运行的三个阶段和三种状态
&lt;/h4&gt;&lt;p&gt;  作业从进入系统到运行结束，通常需要经历收容、运行和完成三个阶段。相应的作业也就有“后备状态”、“运行状态”和“完成状态”。&lt;br&gt;
  (1)收容阶段。操作员把用户提交的作业通过某种输入方式或SPOOLing系统输入到硬盘上，再为该作业建立JCB，并把它放入作业后备队列中。相应地，此时作业的状态为“后备状态”。&lt;br&gt;
  (2)运行阶段。当作业被作业调度选中后，便为它分配必要的资源和建立进程，并将它放入就绪队列。一个作业从第一次进入就绪状态开始，直到它运行结束前，在此期间都处于“运行状态”。&lt;br&gt;
  (3)完成阶段。当作业运行完成、或发生异常情况而提前结束时，作业便进入完成阶段，相应的作业状态为“完成状态”。此时系统中的“终止作业”程序将会回收己分配给该作业的作业控制块和所有资源，并将作业运行结果信息形成输出文件后输出。&lt;/p&gt;
&lt;h3 id=&#34;作业调度的主要任务&#34;&gt;作业调度的主要任务
&lt;/h3&gt;&lt;p&gt;  作业调度的主要任务是，根据JCB中的信息，检查系统中的资源能否满足作业对资源的需求，以及按照一定的调度算法，从外存的后备队列中选取某些作业调入内存，并为它们创建进程、分配必要的资源。然后再将新创建的进程排在就绪队列上等待调度。因此，也把作业调度称为&lt;strong&gt;接纳调度(Admission Scheduling)&lt;/strong&gt;。在每次执行作业调度时，都需做出以下两个决定。&lt;/p&gt;
&lt;h4 id=&#34;接纳多少个作业&#34;&gt;接纳多少个作业
&lt;/h4&gt;&lt;p&gt;  在每一次进行作业调度时，应当从后备队列中选取多少作业调入内存，取决于&lt;strong&gt;多道程序度(Degree of Multiprogramming)&lt;/strong&gt;，即允许多少个作业同时在内存中运行。对系统来说，希望装入较多的作业，有利于提高CPU的利用率和系统的吞吐量。但如果内存中同时运行的作业太多时，进程在运行时因内存不足所发生的中断就会急剧增加。这将会使平均周转时间显著延长，影响到系统的服务质量。因此，多道程序度的确定是根据计算机的系统规模、运行速度、作业大小，以及能否获得较好的系统性能等情况作出适当的抉择的。&lt;/p&gt;
&lt;h4 id=&#34;接纳哪些作业&#34;&gt;接纳哪些作业
&lt;/h4&gt;&lt;p&gt;  应选择后备队列中的哪些作业调入内存，取决于所采用的调度算法。最简单的是先来先服务调度算法，它是将最早进入外存的作业优先调入内存。较常用的一种算法是短作业优先调度算法，是将外存上所需执行时间最短的作业优先调入内存。另一种较常用的是基于作业优先级的调度算法，该算法是将外存上作业优先级最高的作业优先调入内存。比较好的一种算法是“响应比高者优先”的调度算法。我们将在后面对上述的几种算法作较详细的介绍。&lt;br&gt;
  在批处理系统中，作业进入系统后，总是先驻留在外存的作业后备队列上，因此需要有作业调度，以便将它们分批地装入内存。然而在分时系统中，为了做到及时响应，用户通过键盘输入的命令或数据等都被直接送入内存，因而无需配置上述的作业调度机制，但也需要有某种接纳控制措施来限制进入系统的用户数目。即如果系统尚有能力处理更多的任务，将会接纳授权用户的请求，否则，便拒绝接纳。类似地，在实时系统中也不需要作业调度，而必需具有接纳控制措施。&lt;/p&gt;
&lt;h3 id=&#34;先来先服务fcfs和短作业优先sjf调度算法&#34;&gt;先来先服务(FCFS)和短作业优先(SJF)调度算法
&lt;/h3&gt;&lt;h4 id=&#34;先来先服务first-come-first-servedfcfs调度算法&#34;&gt;先来先服务(first-come first-served,FCFS)调度算法
&lt;/h4&gt;&lt;p&gt;  FCFS是最简单的调度算法，该算法既可用于作业调度，也可用于进程调度。当在作业调度中采用该算法时，系统将按照作业到达的先后次序来进行调度，或者说它是优先考虑在系统中等待时间最长的作业，而不管该作业所需执行时间的长短，从后备作业队列中选择几个最先进入该队列的作业，将它们调入内存，为它们分配资源和创建进程。然后把它放入就绪队列。&lt;br&gt;
  当在进程调度中采用FCFS算法时，每次调度是从就绪的进程队列中选择一个最先进入该队列的进程，为之分配处理机，使之投入运行。该进程一直运行到完成或发生某事件而阻塞后，进程调度程序才将处理机分配给其它进程。&lt;br&gt;
  顺便说明，FCFS算法在单处理机系统中已很少作为主调度算法，但经常把它与其它调度算法相结合使用，形成一种更为有效的调度算法。例如，可以在系统中按进程的优先级设置多个队列，每个优先级一个队列，其中每一个队列的调度都基于FCFS算法。&lt;/p&gt;
&lt;h4 id=&#34;短作业优先short-job-firstsjf的调度算法&#34;&gt;短作业优先(short job first,SJF)的调度算法
&lt;/h4&gt;&lt;p&gt;  由于在实际情况中，短作业(进程)占有很大比例，为了能使它们能比长作业优先执行，而产生了短作业优先调度算法。&lt;br&gt;
  SJF算法是以作业的长短来计算优先级，作业越短，其优先级越高。作业的长短是以作业所要求的运行时间来衡量的。SJF算法可以分别用于作业调度和进程调度。在把短作业优先调度算法用于作业调度时，它将从外存的作业后备队列中选择若干个估计运行时间最短的作业，优先将它们调入内存运行。&lt;br&gt;
  SJF调度算法较之FCFS算法有了明显的改进，但仍然存在不容忽视的缺点：&lt;br&gt;
  (1)必须预知作业的运行时间。在采用这种算法时，要先知道每个作业的运行时间。即使是程序员也很难准确估计作业的运行时间，如果估计过低，系统就可能按估计的时间终止作业的运行，但此时作业并未完成，故一般都会偏长估计。&lt;br&gt;
  (2)对长作业非常不利，长作业的周转时间会明显地增长。更严重的是，该算法完全忽视作业的等待时间，可能使作业等待时间过长，出现饥饿现象。&lt;br&gt;
  (3)在采用FCFS算法时，人—机无法实现交互。&lt;br&gt;
  (4)该调度算法完全未考虑作业的紧迫程度，故不能保证紧迫性作业能得到及时处理。&lt;/p&gt;
&lt;h3 id=&#34;优先级调度算法和高响应比优先调度算法&#34;&gt;优先级调度算法和高响应比优先调度算法
&lt;/h3&gt;&lt;h4 id=&#34;优先级调度算法prioilty-scheduling-algorithmpsa&#34;&gt;优先级调度算法(prioilty-scheduling algorithm,PSA)
&lt;/h4&gt;&lt;p&gt;  我们可以这样来看作业的优先级，对于先来先服务调度算法，作业的等待时间就是作业的优先级，等待时间越长，其优先级越高。对于短作业优先调度算法，作业的长短就是作业的优先级，作业所需运行的时间越短，其优先级越高。但上述两种优先级都不能反映作业的紧迫程度。而在优先级调度算法中，则是基于作业的紧迫程度，由外部赋予作业相应的优先级，调度算法是根据该优先级进行调度的。这样就可以保证紧迫性作业优先运行。优先级调度算法可作为作业调度算法，也可作为进程调度算法。当把该算法用于作业调度时，系统是从后备队列中选择若干个优先级最高的作业装入内存。&lt;/p&gt;
&lt;h4 id=&#34;高响应比优先调度算法highest-response-ratio-nexthrrn&#34;&gt;高响应比优先调度算法(Highest Response Ratio Next,HRRN)
&lt;/h4&gt;&lt;p&gt;  在批处理系统中，FCFS算法所考虑的只是作业的等待时间，而忽视了作业的运行时间。而SJF算法正好与之相反，只考虑作业的运行时间，而忽视了作业的等待时间。高响应比优先调度算法则是既考虑了作业的等待时间，又考虑作业运行时间的调度算法，因此既照顾了短作业，又不致使长作业的等待时间过长，从而改善了处理机调度的性能。&lt;br&gt;
  高响应比优先算法是如何实现的呢？如果我们能为每个作业引入一个动态优先级，即优先级是可以改变的，令它随等待时间延长而增加，这将使长作业的优先级在等待期间不断地增加，等到足够的时间后，必然有机会获得处理机。该优先级的变化规律可描述为：&lt;/p&gt;
&lt;span id=&#34;20241126181634CST&#34;&gt;&lt;/span&gt;\[
\text{优先权}=\frac{\text{等待时间}+\text{要求服务时间}}{\text{要求服务时间}}
\tag{4}
    \]
&lt;p&gt;  由于等待时间与服务时间之和就是系统对该作业的响应时间，故该优先级又相当于响应比 \(R_p\) 。据此，优先又可表示为：&lt;/p&gt;
&lt;span id=&#34;20241126182531CST&#34;&gt;&lt;/span&gt;\[
R_p=\frac{等待时间+要求服务时间}{要求服务时间}=\frac{响应时间}{要求服务时间}
\tag{5}
    \]
&lt;p&gt;  由上式可以看出：①如果作业的等待时间相同，则要求服务的时间愈短，其优先权愈高，因而类似于SJF算法，有利于短作业。②当要求服务的时间相同时，作业的优先权又决定于其等待时间，因而该算法又类似于FCFS算法。③对于长作业的优先级，可以随等待时间的增加而提高，当其等待时间足够长时，也可获得处理机。因此该算法实现了较好的折中。当然在利用该算法时，每次要进行调度之前，都需要先做响应比的计算，显然会增加系统开销。&lt;/p&gt;
&lt;h2 id=&#34;进程调度&#34;&gt;进程调度
&lt;/h2&gt;&lt;p&gt;  进程调度是OS中必不可少的一种调度。因此在三种类型的OS中，都无一例外地配置了进程调度。此外它也是对系统性能影响最大的一种处理机调度，相应的，有关进程调度的算法也较多。&lt;/p&gt;
&lt;h3 id=&#34;进程调度的任务机制和方式&#34;&gt;进程调度的任务、机制和方式
&lt;/h3&gt;&lt;h4 id=&#34;进程调度的任务&#34;&gt;进程调度的任务
&lt;/h4&gt;&lt;p&gt;  进程调度的任务主要有三：&lt;br&gt;
  (1)保存处理机的现场信息。在进行调度时首先需要保存当前进程的处理机的现场信息，如程序计数器、多个通用寄存器中的内容等。&lt;br&gt;
  (2)按某种算法选取进程。调度程序按某种算法从就绪队列中选取一个进程，将其状态改为运行状态，并准备把处理机分配给它。&lt;br&gt;
  (3)把处理器分配给进程。由分派程序把处理器分配给该进程，此时需要将选中进程的进程控制块内有关处理机现场的信息装入处理器相应的各个寄存器中，把处理器的控制权交予该进程，让它从上次的断点处恢复运行。&lt;/p&gt;
&lt;h4 id=&#34;进程调度机制&#34;&gt;进程调度机制
&lt;/h4&gt;&lt;p&gt;  为了实现进程调度，在进程调度机制中，应具有如下三个基本部分。&lt;br&gt;
  (1)排队器。为了提高进程调度的效率，应事先将系统中的所有就绪进程按照一定的策略排成一个或多个队列，以便调度程序能最快地找到它。以后每当有一个进程转变为就绪状态时，排队器便将它插入到相应的就绪队列。&lt;br&gt;
  (2)分派器。分派器依据进程调度程序所选定的进程，将其从就绪队列中取出，然后进行从分派器到新选出进程间的上下文切换，将处理机分配给新选出的进程。&lt;br&gt;
  (3)上下文切换器。在对处理机进行切换时，会发生两对上下文的切换操作：①第一对上下文切换时，OS将保存当前进程的上下文，即把当前进程的处理机寄存器内容保存到该进程的进程控制块内的相应单元，再装入分派程序的上下文，以便分派程序运行；②第二对上下文切换是移出分派程序的上下文，而把新选进程的CPU现场信息装入到处理机的各个相应寄存器中，以便新选进程运行。&lt;/p&gt;
&lt;span id=&#34;20241126193146CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.7 289.0646&#34;&gt;
  &lt;text transform=&#34;translate(277.231 73.7818)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;就绪进程&lt;/tspan&gt;&lt;/text&gt;
  &lt;ellipse cx=&#34;313.231&#34; cy=&#34;67.1474&#34; rx=&#34;69.1429&#34; ry=&#34;23.1429&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(111.3775 15.8403)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;来自其他状态&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;polyline points=&#34;118.0073 20.6 216.7367 20.6 248.0628 51.9262&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;243.4583 52.5587 247.1892 51.0526 248.6953 47.3217 252.284 56.1474 243.4583 52.5587&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;244.0881&#34; y=&#34;122.5524&#34; width=&#34;387.4286&#34; height=&#34;141.7143&#34; rx=&#34;12&#34; ry=&#34;12&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(287.3068 166.8536)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;排队器&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;277.8789&#34; y=&#34;146.3143&#34; width=&#34;72.8561&#34; height=&#34;26.6667&#34; rx=&#34;5.6693&#34; ry=&#34;5.6693&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(394.4148 166.8536)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;就绪队列&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;386.333&#34; y=&#34;146.3143&#34; width=&#34;88.1639&#34; height=&#34;26.6667&#34; rx=&#34;5.6693&#34; ry=&#34;5.6693&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;350.735&#34; y1=&#34;159.6476&#34; x2=&#34;380.3633&#34; y2=&#34;159.6476&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;377.5547 163.3508 379.128 159.6476 377.5547 155.9445 386.3331 159.6476 377.5547 163.3508&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(403.4151 223.5679)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;分派器&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;393.9869&#34; y=&#34;203.0286&#34; width=&#34;72.8561&#34; height=&#34;26.6667&#34; rx=&#34;5.6693&#34; ry=&#34;5.6693&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(526.4629 210.2345)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;上下文&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.6001&#34;&gt;切换器&lt;/tspan&gt;&lt;/text&gt;
  &lt;rect x=&#34;517.0347&#34; y=&#34;189.6953&#34; width=&#34;72.8561&#34; height=&#34;49.8095&#34; rx=&#34;5.6693&#34; ry=&#34;5.6693&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;407.116&#34; y1=&#34;172.981&#34; x2=&#34;407.116&#34; y2=&#34;197.0589&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;403.4128 194.2503 407.116 195.8235 410.8191 194.2503 407.116 203.0286 403.4128 194.2503&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;313.231&#34; y1=&#34;90.2902&#34; x2=&#34;313.231&#34; y2=&#34;140.3446&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;309.5278 137.536 313.231 139.1092 316.9341 137.536 313.231 146.3143 309.5278 137.536&#34;/&gt;
  &lt;/g&gt;
  &lt;rect x=&#34;462.2242&#34; y=&#34;48.2902&#34; width=&#34;130.6667&#34; height=&#34;37.7143&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;text transform=&#34;translate(482.5579 73.6265)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;进程控制块&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;533.8461&#34; y1=&#34;189.6953&#34; x2=&#34;533.8461&#34; y2=&#34;183.6953&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;533.8461&#34; y1=&#34;177.9601&#34; x2=&#34;533.8461&#34; y2=&#34;94.8009&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 11.4702 5.7351; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;533.8461&#34; y1=&#34;91.9334&#34; x2=&#34;533.8461&#34; y2=&#34;85.9334&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;553.4628&#34; y1=&#34;85.9334&#34; x2=&#34;553.4628&#34; y2=&#34;91.9334&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;553.4628&#34; y1=&#34;98.5328&#34; x2=&#34;553.4628&#34; y2=&#34;174.4258&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 13.1988 6.5994; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;553.4628&#34; y1=&#34;177.7255&#34; x2=&#34;553.4628&#34; y2=&#34;183.7255&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;549.7596 180.917 553.4628 182.4902 557.1659 180.917 553.4628 189.6953 549.7596 180.917&#34;/&gt;
  &lt;/g&gt;
  &lt;polyline points=&#34;485.8461 85.9334 485.8461 177.3619 430.415 177.3619 430.415 203.0286&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12 6; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g&gt;
    &lt;polyline points=&#34;509.8461 85.9334 509.8461 181.9334 450.0366 181.9334 450.0366 197.0589&#34; style=&#34;fill: none; stroke: #000; stroke-dasharray: 12 6; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;446.3335 194.2503 450.0366 195.8235 453.7397 194.2503 450.0366 203.0286 446.3335 194.2503&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(686.8984 221.2345)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;C&lt;/tspan&gt;&lt;tspan x=&#34;12.438&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.019em;&#34;&gt;P&lt;/tspan&gt;&lt;tspan x=&#34;23.6338&#34; y=&#34;0&#34;&gt;U&lt;/tspan&gt;&lt;/text&gt;
  &lt;ellipse cx=&#34;705.8879&#34; cy=&#34;214.6&#34; rx=&#34;46.4345&#34; ry=&#34;23.1429&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;589.8908&#34; y1=&#34;214.3942&#34; x2=&#34;653.4836&#34; y2=&#34;214.3942&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;650.675 218.0973 652.2483 214.3942 650.675 210.691 659.4534 214.3942 650.675 218.0973&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;polyline points=&#34;705.8879 191.4572 705.8879 20.6 386.333 20.6 362.4253 44.5078&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;361.7928 39.9033 363.2988 43.6342 367.0298 45.1403 358.2041 48.729 361.7928 39.9033&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(485.8457 15.8404)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;移出运行进程&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(281.3771 284.3253)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;调度程序&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图1&amp;emsp;进程调度机制&lt;/p&gt;
&lt;p&gt;  在进行上下文切换时，需要执行大量的&lt;code&gt;load&lt;/code&gt;和&lt;code&gt;store&lt;/code&gt;等操作指令，以保存寄存器的内容。即使是现代计算机，每一次上下文切换所花费的时间大约可执行上千条指令。为此，现在已有靠硬件实现的方法来减少上下文切换时间。一般采用两组（或多组）寄存器，其中的一组寄存器供处理机在系统态时使用，而另一组寄存器供应用程序使用。在这样条件下的上下文切换，只需改变指针，使其指向当前寄存器组即可。&lt;/p&gt;
&lt;h4 id=&#34;进程调度方式&#34;&gt;进程调度方式
&lt;/h4&gt;&lt;p&gt;  早期所采用的非抢占方式存在着很大的局限性，很难满足交互性作业和实时任务的需求。为此，在进程调度中又引入了抢占方式。我们先了解一下非抢占方式时的情况。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 非抢占方式(Nonpreemptive Mode)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  在采用这种调度方式时，一旦把处理机分配给某进程后，就一直让它运行下去，决不会因为时钟中断或任何其它原因去抢占当前正在运行进程的处理机，直至该进程完成，或发生某事件而被阻塞时，才把处理机分配给其它进程。&lt;br&gt;
  在采用非抢占调度方式时，可能引起进程调度的因素可归结为：①正在执行的进程运行完毕，或因发生某事件而使其无法再继续运行；②正在执行中的进程因提出I/O请求而暂停执行；③在进程通信或同步过程中，执行了某种原语操作，如Block原语。这种调度方式的优点是实现简单，系统开销小，适用于大多数的批处理系统。但它不能用于分时系统和大多数实时系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 抢占方式(Preemptive Mode)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;  这种调度方式允许调度程序根据某种原则，去暂停某个正在执行的进程，将已分配给该进程的处理机重新分配给另一进程。在现代OS中广泛采用抢占方式，这是因为：对于批处理机系统，可以防止一个长进程长时间地占用处理机，以确保处理机能为所有进程提供更为公平的服务。在分时系统中，只有采用抢占方式才有可能实现人—机交互。在实时系统中，抢占方式能满足实时任务的需求。但抢占方式比较复杂，所需付出的系统开销也较大。&lt;br&gt;
  “抢占”不是一种任意性行为，必须遵循一定的原则。主要原则有：&lt;br&gt;
  ①优先权原则，指允许优先级高的新到进程抢占当前进程的处理机，即当有新进程到达时，如果它的优先级比正在执行进程的优先级高，则调度程序将剥夺当前进程的运行，将处理机分配给新到的优先权高的进程。&lt;br&gt;
  ②短进程优先原则，指允许新到的短进程可以抢占当前长进程的处理机，即当新到达的进程比正在执行的进程（尚须运行的时间）明显短时，将处理机分配给新到的短进程。&lt;br&gt;
  ③时间片原则，即各进程按时间片轮转运行时，当正在执行的进程的一个时间片用完后，便停止该进程的执行而重新进行调度。&lt;/p&gt;
&lt;h3 id=&#34;轮转调度算法&#34;&gt;轮转调度算法
&lt;/h3&gt;&lt;p&gt;  在分时系统中，最简单也是较常用的是&lt;strong&gt;基于时间片的轮转(round robin,RR)调度算法&lt;/strong&gt;。该算法采取了非常公平的处理机分配方式，即让就绪队列上的每个进程每次仅运行一个时间片。如果就绪队列上有 \(n\) 个进程，则每个进程每次大约都可获得 \(\cfrac{1}{n}\) 的处理机时间。&lt;/p&gt;
&lt;h4 id=&#34;轮转法的基本原理&#34;&gt;轮转法的基本原理
&lt;/h4&gt;&lt;p&gt;  在轮转(RR)法中，系统将所有的就绪进程按FCFS策略排成一个就绪队列。系统可设置每隔一定时间（如30ms）便产生一次中断，去激活进程调度程序进行调度，把CPU分配给队首进程，并令其执行一个时间片。当它运行完毕后，又把处理机分配给就绪队列中新的队首进程，也让它执行一个时间片。这样，就可以保证就绪队列中的所有进程在确定的时间段内，都能获得一个时间片的处理机时间。&lt;/p&gt;
&lt;h4 id=&#34;进程切换时机&#34;&gt;进程切换时机
&lt;/h4&gt;&lt;p&gt;  在RR调度算法中，应在何时进行进程的切换，可分为两种情况：①若一个时间片尚未用完，正在运行的进程便已经完成，就立即激活调度程序，将它从就绪队列中删除，再调度就绪队列中队首的进程运行，并启动一个新的时间片。②在一个时间片用完时，计时器中断处理程序被激活。如果进程尚未运行完毕，调度程序将把它送往就绪队列的末尾。&lt;/p&gt;
&lt;h4 id=&#34;时间片大小的确定&#34;&gt;时间片大小的确定
&lt;/h4&gt;&lt;p&gt;  在轮转算法中，时间片的大小对系统性能有很大的影响。若选择很小的时间片，将有利于短作业，因为它能在该时间片内完成。但时间片小，意味着会频繁地执行进程调度和进程上下文的切换，这无疑会增加系统的开销。反之，若时间片选择得太长，且为使每个进程都能在一个时间片内完成，RR算法便退化为FCFS算法，无法满足短作业和交互式用户的需求。一个较为可取的时间片大小是略大于一次典型的交互所需要的时间，使大多数交互式进程能在一个时间片内完成，从而可以获得很小的响应时间。&lt;a class=&#34;link&#34; href=&#34;#20241126220213CST&#34;&gt;图2&lt;/a&gt;示出了时间片大小对响应时间的影响，其中&lt;a class=&#34;link&#34; href=&#34;#20241126220213CST&#34;&gt;图2&lt;/a&gt;(a)是时间片略大于典型交互的时间，而&lt;a class=&#34;link&#34; href=&#34;#20241126220213CST&#34;&gt;图2&lt;/a&gt;(b)是时间片小于典型交互的时间。&lt;a class=&#34;link&#34; href=&#34;#20241126220833CST&#34;&gt;表1&lt;/a&gt;示出了时间片分别为 \(q=1\) 和 \(q=4\) 时对平均周转时间的影响。&lt;/p&gt;
&lt;span id=&#34;20241126220213CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;svg-figure&#34;&gt;
            &lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;svg id=&#34;_layer_1&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 863.7 450.1696&#34;&gt;
  &lt;text transform=&#34;translate(339.339 235.6046)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.001em;&#34;&gt;(&lt;/tspan&gt;&lt;tspan x=&#34;6.5342&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.005em;&#34;&gt;a&lt;/tspan&gt;&lt;tspan x=&#34;16.4702&#34; y=&#34;0&#34;&gt;)时间片大于交互时间&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;rect x=&#34;293.7799&#34; y=&#34;83.8919&#34; width=&#34;196.5714&#34; height=&#34;16&#34; style=&#34;fill: #040000; opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;490.3513&#34; y=&#34;83.8919&#34; width=&#34;79.3651&#34; height=&#34;16&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;293.7799&#34; y=&#34;83.8919&#34; width=&#34;196.5714&#34; height=&#34;16&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;503.4721&#34; y1=&#34;83.8919&#34; x2=&#34;490.3927&#34; y2=&#34;96.9712&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;497.0762&#34; y1=&#34;83.7745&#34; x2=&#34;490.3927&#34; y2=&#34;90.458&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;516.436&#34; y1=&#34;83.9544&#34; x2=&#34;500.4413&#34; y2=&#34;99.9491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;529.525&#34; y1=&#34;83.8919&#34; x2=&#34;513.525&#34; y2=&#34;99.8919&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;549.0021&#34; y1=&#34;83.9544&#34; x2=&#34;533.0074&#34; y2=&#34;99.9491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;522.9492&#34; y1=&#34;83.9544&#34; x2=&#34;507.3513&#34; y2=&#34;99.5523&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;535.9757&#34; y1=&#34;83.9544&#34; x2=&#34;520.0382&#34; y2=&#34;99.8919&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;542.4889&#34; y1=&#34;83.9544&#34; x2=&#34;526.4942&#34; y2=&#34;99.9491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;555.5154&#34; y1=&#34;83.9544&#34; x2=&#34;539.5779&#34; y2=&#34;99.8919&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;562.2085&#34; y1=&#34;83.7745&#34; x2=&#34;546.0911&#34; y2=&#34;99.8919&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;568.5418&#34; y1=&#34;83.9544&#34; x2=&#34;552.5471&#34; y2=&#34;99.9491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;509.9228&#34; y1=&#34;83.9544&#34; x2=&#34;493.928&#34; y2=&#34;99.9491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;569.9201&#34; y1=&#34;88.9739&#34; x2=&#34;559.1132&#34; y2=&#34;99.7808&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;569.9201&#34; y1=&#34;96.0202&#34; x2=&#34;565.9912&#34; y2=&#34;99.9491&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;293.6984&#34; y1=&#34;65.5347&#34; x2=&#34;293.6984&#34; y2=&#34;77.4698&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;289.9953 74.6612 293.6984 76.2344 297.4016 74.6612 293.6984 83.4395 289.9953 74.6612&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;490.3112&#34; y1=&#34;65.5347&#34; x2=&#34;490.3112&#34; y2=&#34;77.4698&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;486.6081 74.6612 490.3112 76.2344 494.0143 74.6612 490.3112 83.4395 486.6081 74.6612&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(232.387 38.3987)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;分配给进程&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.5996&#34;&gt;的时间片&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(454.3756 62.1585)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;交互结束&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;g&gt;
      &lt;line x1=&#34;299.8515&#34; y1=&#34;110.999&#34; x2=&#34;484.4835&#34; y2=&#34;110.999&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;302.6601 114.7021 301.0868 110.999 302.6601 107.2959 293.8817 110.999 302.6601 114.7021&#34;/&gt;
      &lt;polygon points=&#34;481.6749 114.7021 483.2481 110.999 481.6749 107.2959 490.4532 110.999 481.6749 114.7021&#34;/&gt;
    &lt;/g&gt;
    &lt;g&gt;
      &lt;line x1=&#34;563.8485&#34; y1=&#34;110.999&#34; x2=&#34;496.4229&#34; y2=&#34;110.999&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
      &lt;polygon points=&#34;561.0399 107.2959 562.6132 110.999 561.0399 114.7021 569.8182 110.999 561.0399 107.2959&#34;/&gt;
      &lt;polygon points=&#34;499.2315 107.2959 497.6583 110.999 499.2315 114.7021 490.4532 110.999 499.2315 107.2959&#34;/&gt;
    &lt;/g&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(348.7418 132.0106)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;响应时间&lt;/tspan&gt;&lt;/text&gt;
  &lt;path id=&#34;MJX-5-TEX-I-1D460&#34; d=&#34;M383.1559,143.6167c0-.3861.0965-.7782.2896-1.1764s.5309-.7662,1.0135-1.104,1.0678-.5007,1.7555-.4886c.7481,0,1.291.1629,1.6288.4886s.5128.6877.5248,1.0859c0,.3861-.1026.6696-.3077.8506s-.4344.2775-.6877.2896c-.1568,0-.3016-.0483-.4344-.1448s-.2051-.2534-.2172-.4706c0-.193.0543-.362.1629-.5067s.2111-.2534.3077-.3258.1749-.1086.2353-.1086c.0121,0,.0181-.006.0181-.0181,0-.0362-.0422-.0905-.1267-.1629s-.2353-.1388-.4525-.1991-.4525-.0965-.7058-.1086c-.5791,0-1.0014.1568-1.2669.4706s-.4042.6334-.4163.9592c0,.3016.1146.5128.3439.6334s.561.2232.9954.3077.7481.1749.9411.2715c.7963.3499,1.1945.929,1.1945,1.7374,0,.3378-.0664.6757-.1991,1.0135s-.3318.6757-.5972,1.0135c-.2654.3378-.6455.6033-1.1402.7963-.4947.193-1.0618.2956-1.7012.3077-.929,0-1.5866-.1749-1.9727-.5248-.3861-.3499-.5852-.7601-.5972-1.2307,0-.4706.1267-.8084.3801-1.0135s.5188-.3077.7963-.3077c.181,0,.3499.0543.5067.1629s.2413.2956.2534.561c0,.3137-.1086.5791-.3258.7963s-.4042.3258-.561.3258c-.0241.0121-.0422.0181-.0543.0181s-.0181.0121-.0181.0362c.0121.0362.0603.0845.1448.1448s.2715.1388.561.2353c.2896.0965.6214.1388.9954.1267.4344,0,.8084-.0664,1.1221-.1991.3137-.1327.5429-.3016.6877-.5067.1448-.2051.2473-.3921.3077-.561s.0905-.3197.0905-.4525c0-.3378-.1267-.5912-.3801-.7601s-.5429-.2715-.8687-.3077-.6817-.1267-1.0678-.2715-.6696-.3559-.8506-.6334c-.2051-.3016-.3077-.6515-.3077-1.0497Z&#34;/&gt;
  &lt;text transform=&#34;translate(398.7686 183.3162)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;时间片&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;299.7496&#34; y1=&#34;161.0942&#34; x2=&#34;563.9504&#34; y2=&#34;161.0942&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;302.5582 164.7974 300.985 161.0942 302.5582 157.3911 293.7799 161.0942 302.5582 164.7974&#34;/&gt;
    &lt;polygon points=&#34;561.1418 164.7974 562.715 161.0942 561.1418 157.3911 569.9201 161.0942 561.1418 164.7974&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;path id=&#34;MJX-7-TEX-I-1D45E&#34; d=&#34;M510.233,127.8175c0-1.2188.4585-2.3772,1.3756-3.4753.9171-1.0981,1.9488-1.6532,3.0952-1.6652.724,0,1.2791.3137,1.6652.9412.0121-.0121.0422-.0483.0905-.1086s.1146-.1267.1991-.1991.181-.1448.2896-.2172c.4103-.2896.6878-.4344.8326-.4344.0483,0,.0905.0181.1267.0543s.0543.0664.0543.0905c0,.1086-.4163,1.8281-1.2489,5.1586-.8568,3.427-1.2851,5.1646-1.2851,5.2129,0,.0965.2715.1508.8145.1629h.4525c.0724.0965.1086.1508.1086.1629s-.0181.1207-.0543.3258c-.0483.1569-.1086.2715-.181.3439h-.2353c-.3741-.0241-1.0257-.0362-1.9548-.0362h-1.5928c-.1689,0-.2715.006-.3077.0181-.1689,0-.2534-.0483-.2534-.1448,0-.0362.0121-.1267.0362-.2715.0483-.1931.0905-.3077.1267-.3439s.1569-.0543.362-.0543c.5792,0,.9292-.0422,1.0498-.1267.0965-.0603.2655-.5913.5068-1.5928.2413-1.0016.368-1.5144.3801-1.5385,0-.0121-.0422.006-.1267.0543-.5792.4706-1.1826.7059-1.81.7059-.6637,0-1.2489-.2413-1.7557-.724-.5068-.4827-.7602-1.2489-.7602-2.2987ZM516.007,124.7585c-.2775-.9533-.73-1.4299-1.3575-1.4299-.4223,0-.8266.187-1.2127.5611s-.6878.8628-.905,1.4661c-.3499.9533-.5973,1.9428-.7421,2.9685v.1991c0,.0965-.006.1689-.0181.2172,0,.543.1086.9171.3258,1.1222s.4766.3137.7783.3258c.6516,0,1.3213-.4344,2.0091-1.3032l.1448-.1991.9774-3.9278Z&#34;/&gt;
    &lt;path id=&#34;MJX-7-TEX-N-2212&#34; d=&#34;M523.5042,126.3694v-.2353c0-.1569.0845-.2775.2534-.362h10.5163c.181.0965.2715.2172.2715.362s-.0905.2655-.2715.362h-10.5163c-.1689-.0845-.2534-.2051-.2534-.362v.2353Z&#34;/&gt;
    &lt;path id=&#34;MJX-7-TEX-I-1D460&#34; d=&#34;M542.4589,125.4282c0-.3861.0965-.7783.2896-1.1765s.5309-.7662,1.0136-1.1041,1.0679-.5008,1.7557-.4887c.7481,0,1.2912.1629,1.629.4887s.5128.6878.5249,1.086c0,.3861-.1026.6697-.3077.8507s-.4344.2775-.6878.2896c-.1569,0-.3017-.0483-.4344-.1448s-.2051-.2534-.2172-.4706c0-.1931.0543-.362.1629-.5068s.2112-.2534.3077-.3258.175-.1086.2353-.1086c.0121,0,.0181-.006.0181-.0181,0-.0362-.0422-.0905-.1267-.1629s-.2353-.1388-.4525-.1991-.4525-.0965-.7059-.1086c-.5792,0-1.0016.1569-1.267.4706s-.4042.6335-.4163.9593c0,.3017.1146.5128.3439.6335s.5611.2232.9955.3077.7481.175.9412.2715c.7964.3499,1.1946.9292,1.1946,1.7376,0,.3379-.0664.6757-.1991,1.0136s-.3318.6757-.5973,1.0136c-.2655.3379-.6456.6033-1.1403.7964-.4947.1931-1.0619.2956-1.7014.3077-.9292,0-1.5868-.175-1.9729-.5249-.3861-.3499-.5852-.7602-.5973-1.2308,0-.4706.1267-.8085.3801-1.0136s.5189-.3077.7964-.3077c.181,0,.3499.0543.5068.1629s.2413.2956.2534.5611c0,.3137-.1086.5792-.3258.7964s-.4042.3258-.5611.3258c-.0241.0121-.0422.0181-.0543.0181s-.0181.0121-.0181.0362c.0121.0362.0603.0845.1448.1448s.2715.1388.5611.2353c.2896.0965.6214.1388.9955.1267.4344,0,.8085-.0664,1.1222-.1991.3137-.1327.543-.3017.6878-.5068.1448-.2051.2474-.3922.3077-.5611s.0905-.3198.0905-.4525c0-.3379-.1267-.5913-.3801-.7602s-.543-.2715-.8688-.3077-.6818-.1267-1.0679-.2715-.6697-.356-.8507-.6335c-.2051-.3017-.3077-.6516-.3077-1.0498Z&#34;/&gt;
  &lt;/g&gt;
  &lt;path id=&#34;MJX-8-TEX-I-1D45E&#34; d=&#34;M421.9041,196.7882c0-1.2188.4585-2.3772,1.3756-3.4753.9171-1.0981,1.9488-1.6532,3.0952-1.6653.724,0,1.2791.3137,1.6653.9412.0121-.0121.0422-.0483.0905-.1086s.1146-.1267.1991-.1991.181-.1448.2896-.2172c.4103-.2896.6878-.4344.8326-.4344.0483,0,.0905.0181.1267.0543s.0543.0664.0543.0905c0,.1086-.4163,1.8282-1.2489,5.1587-.8568,3.4271-1.2851,5.1647-1.2851,5.213,0,.0965.2715.1508.8145.1629h.4525c.0724.0965.1086.1508.1086.1629s-.0181.1207-.0543.3258c-.0483.1569-.1086.2715-.181.3439h-.2353c-.3741-.0241-1.0257-.0362-1.9549-.0362h-1.5929c-.1689,0-.2715.006-.3077.0181-.1689,0-.2534-.0483-.2534-.1448,0-.0362.0121-.1267.0362-.2715.0483-.1931.0905-.3077.1267-.3439s.1569-.0543.362-.0543c.5792,0,.9292-.0422,1.0498-.1267.0965-.0603.2655-.5913.5068-1.5929.2413-1.0016.368-1.5144.3801-1.5386,0-.0121-.0422.006-.1267.0543-.5792.4706-1.1826.7059-1.8101.7059-.6637,0-1.2489-.2413-1.7558-.724-.5068-.4827-.7602-1.2489-.7602-2.2988ZM427.6782,193.7292c-.2775-.9533-.7301-1.4299-1.3575-1.4299-.4223,0-.8266.187-1.2127.5611s-.6878.8628-.905,1.4662c-.3499.9533-.5973,1.9428-.7421,2.9685v.1991c0,.0965-.006.1689-.0181.2172,0,.543.1086.9171.3258,1.1222s.4766.3137.7783.3258c.6516,0,1.3213-.4344,2.0092-1.3032l.1448-.1991.9774-3.9278Z&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;336.8373&#34; y1=&#34;22.5588&#34; x2=&#34;520.8929&#34; y2=&#34;22.5588&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;518.0844 26.262 519.6576 22.5588 518.0844 18.8557 526.8627 22.5588 518.0844 26.262&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(413.8498 15.8398)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;时间&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;rect x=&#34;90.2575&#34; y=&#34;317.1911&#34; width=&#34;275.9365&#34; height=&#34;16&#34; style=&#34;fill: #040000; opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;90.2575&#34; y=&#34;317.1911&#34; width=&#34;275.9365&#34; height=&#34;16&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;379.5252&#34; y1=&#34;317.2212&#34; x2=&#34;366.4459&#34; y2=&#34;330.3005&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;373.1294&#34; y1=&#34;317.1038&#34; x2=&#34;366.4459&#34; y2=&#34;323.7873&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;392.4892&#34; y1=&#34;317.2837&#34; x2=&#34;376.4945&#34; y2=&#34;333.2784&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;405.5781&#34; y1=&#34;317.2212&#34; x2=&#34;389.5781&#34; y2=&#34;333.2212&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;425.0553&#34; y1=&#34;317.2837&#34; x2=&#34;409.0606&#34; y2=&#34;333.2784&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;399.0024&#34; y1=&#34;317.2837&#34; x2=&#34;383.4045&#34; y2=&#34;332.8816&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;412.0288&#34; y1=&#34;317.2837&#34; x2=&#34;396.0914&#34; y2=&#34;333.2212&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;418.5421&#34; y1=&#34;317.2837&#34; x2=&#34;402.5474&#34; y2=&#34;333.2784&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;431.5685&#34; y1=&#34;317.2837&#34; x2=&#34;415.6311&#34; y2=&#34;333.2212&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;438.2616&#34; y1=&#34;317.1038&#34; x2=&#34;422.1443&#34; y2=&#34;333.2212&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;444.595&#34; y1=&#34;317.2837&#34; x2=&#34;428.6003&#34; y2=&#34;333.2784&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;385.9759&#34; y1=&#34;317.2837&#34; x2=&#34;369.9812&#34; y2=&#34;333.2784&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;rect x=&#34;366.4459&#34; y=&#34;317.0826&#34; width=&#34;275.9365&#34; height=&#34;16&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;line x1=&#34;457.8862&#34; y1=&#34;317.1752&#34; x2=&#34;441.8915&#34; y2=&#34;333.1699&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;470.9752&#34; y1=&#34;317.1127&#34; x2=&#34;454.9752&#34; y2=&#34;333.1127&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;490.4523&#34; y1=&#34;317.1752&#34; x2=&#34;474.4576&#34; y2=&#34;333.1699&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;464.3994&#34; y1=&#34;317.1752&#34; x2=&#34;448.8015&#34; y2=&#34;332.7731&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;477.4259&#34; y1=&#34;317.1752&#34; x2=&#34;461.4884&#34; y2=&#34;333.1127&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;483.9391&#34; y1=&#34;317.1752&#34; x2=&#34;467.9444&#34; y2=&#34;333.1699&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;496.9656&#34; y1=&#34;317.1752&#34; x2=&#34;481.0281&#34; y2=&#34;333.1127&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;503.6587&#34; y1=&#34;316.9953&#34; x2=&#34;487.5413&#34; y2=&#34;333.1127&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;509.992&#34; y1=&#34;317.1752&#34; x2=&#34;493.9973&#34; y2=&#34;333.1699&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;451.373&#34; y1=&#34;317.1752&#34; x2=&#34;435.3783&#34; y2=&#34;333.1699&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;522.9276&#34; y1=&#34;317.1466&#34; x2=&#34;506.9328&#34; y2=&#34;333.1413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;536.0165&#34; y1=&#34;317.0841&#34; x2=&#34;520.0165&#34; y2=&#34;333.0841&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;555.4937&#34; y1=&#34;317.1466&#34; x2=&#34;539.499&#34; y2=&#34;333.1413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;529.4408&#34; y1=&#34;317.1466&#34; x2=&#34;513.8429&#34; y2=&#34;332.7445&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;542.4672&#34; y1=&#34;317.1466&#34; x2=&#34;526.5298&#34; y2=&#34;333.0841&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;548.9805&#34; y1=&#34;317.1466&#34; x2=&#34;532.9858&#34; y2=&#34;333.1413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;562.0069&#34; y1=&#34;317.1466&#34; x2=&#34;546.0695&#34; y2=&#34;333.0841&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;568.7&#34; y1=&#34;316.9667&#34; x2=&#34;552.5827&#34; y2=&#34;333.0841&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;575.0334&#34; y1=&#34;317.1466&#34; x2=&#34;559.0387&#34; y2=&#34;333.1413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;516.4143&#34; y1=&#34;317.1466&#34; x2=&#34;500.4196&#34; y2=&#34;333.1413&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;587.5092&#34; y1=&#34;317.0381&#34; x2=&#34;571.5145&#34; y2=&#34;333.0329&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;600.5982&#34; y1=&#34;316.9756&#34; x2=&#34;584.5982&#34; y2=&#34;332.9756&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;620.0753&#34; y1=&#34;317.0381&#34; x2=&#34;604.0806&#34; y2=&#34;333.0329&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;594.0224&#34; y1=&#34;317.0381&#34; x2=&#34;578.4246&#34; y2=&#34;332.636&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;607.0489&#34; y1=&#34;317.0381&#34; x2=&#34;591.1114&#34; y2=&#34;332.9756&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;613.5621&#34; y1=&#34;317.0381&#34; x2=&#34;597.5674&#34; y2=&#34;333.0329&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;626.5886&#34; y1=&#34;317.0381&#34; x2=&#34;610.6511&#34; y2=&#34;332.9756&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;633.2817&#34; y1=&#34;316.8583&#34; x2=&#34;617.1643&#34; y2=&#34;332.9756&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;639.615&#34; y1=&#34;317.0381&#34; x2=&#34;623.6203&#34; y2=&#34;333.0329&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;580.996&#34; y1=&#34;317.0381&#34; x2=&#34;565.0013&#34; y2=&#34;333.0329&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;642.3824&#34; y1=&#34;327.2166&#34; x2=&#34;636.3677&#34; y2=&#34;333.2313&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;line x1=&#34;642.3824&#34; y1=&#34;320.7033&#34; x2=&#34;629.8544&#34; y2=&#34;333.2313&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10; stroke-width: .5px;&#34;/&gt;
    &lt;rect x=&#34;642.3824&#34; y=&#34;317.0826&#34; width=&#34;131.0602&#34; height=&#34;16&#34; style=&#34;fill: #040000; opacity: .2; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;rect x=&#34;642.3824&#34; y=&#34;317.0826&#34; width=&#34;131.0602&#34; height=&#34;16&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(338.7362 447.3983)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;(&lt;/tspan&gt;&lt;tspan x=&#34;6.5518&#34; y=&#34;0&#34; style=&#34;letter-spacing: -.02em;&#34;&gt;b&lt;/tspan&gt;&lt;tspan x=&#34;17.6758&#34; y=&#34;0&#34; style=&#34;letter-spacing: 0em;&#34;&gt;)时间片小于交互时间&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;96.2272&#34; y1=&#34;385.6181&#34; x2=&#34;767.4728&#34; y2=&#34;385.6181&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;99.0358 389.3212 97.4626 385.6181 99.0358 381.9149 90.2575 385.6181 99.0358 389.3212&#34;/&gt;
    &lt;polygon points=&#34;764.6642 389.3212 766.2375 385.6181 764.6642 381.9149 773.4426 385.6181 764.6642 389.3212&#34;/&gt;
  &lt;/g&gt;
  &lt;path id=&#34;MJX-5-TEX-I-1D460-2&#34; data-name=&#34;MJX-5-TEX-I-1D460&#34; d=&#34;M429.9497,399.9968c0-.3861.0965-.7782.2896-1.1764s.5309-.7662,1.0135-1.104,1.0678-.5007,1.7555-.4886c.7481,0,1.291.1629,1.6288.4886s.5128.6877.5248,1.0859c0,.3861-.1026.6696-.3077.8506s-.4344.2775-.6877.2896c-.1568,0-.3016-.0483-.4344-.1448s-.2051-.2534-.2172-.4706c0-.193.0543-.362.1629-.5067s.2111-.2534.3077-.3258.1749-.1086.2353-.1086c.0121,0,.0181-.006.0181-.0181,0-.0362-.0422-.0905-.1267-.1629s-.2353-.1388-.4525-.1991-.4525-.0965-.7058-.1086c-.5791,0-1.0014.1568-1.2669.4706s-.4042.6334-.4163.9592c0,.3016.1146.5128.3439.6334s.561.2232.9954.3077.7481.1749.9411.2715c.7963.3499,1.1945.929,1.1945,1.7374,0,.3378-.0664.6757-.1991,1.0135s-.3318.6757-.5972,1.0135c-.2654.3378-.6455.6033-1.1402.7963-.4947.193-1.0618.2956-1.7012.3077-.929,0-1.5866-.1749-1.9727-.5248-.3861-.3499-.5852-.7601-.5972-1.2307,0-.4706.1267-.8084.3801-1.0135s.5188-.3077.7963-.3077c.181,0,.3499.0543.5067.1629s.2413.2956.2534.561c0,.3137-.1086.5791-.3258.7963s-.4042.3258-.561.3258c-.0241.0121-.0422.0181-.0543.0181s-.0181.0121-.0181.0362c.0121.0362.0603.0845.1448.1448s.2715.1388.561.2353c.2896.0965.6214.1388.9954.1267.4344,0,.8084-.0664,1.1221-.1991.3137-.1327.5429-.3016.6877-.5067.1448-.2051.2473-.3921.3077-.561s.0905-.3197.0905-.4525c0-.3378-.1267-.5912-.3801-.7601s-.5429-.2715-.8687-.3077-.6817-.1267-1.0678-.2715-.6696-.3559-.8506-.6334c-.2051-.3016-.3077-.6515-.3077-1.0497Z&#34;/&gt;
  &lt;g&gt;
    &lt;line x1=&#34;96.2272&#34; y1=&#34;347.3958&#34; x2=&#34;360.2242&#34; y2=&#34;347.3958&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;99.0358 351.099 97.4626 347.3958 99.0358 343.6927 90.2575 347.3958 99.0358 351.099&#34;/&gt;
    &lt;polygon points=&#34;357.4156 351.099 358.9889 347.3958 357.4156 343.6927 366.194 347.3958 357.4156 351.099&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;372.1637&#34; y1=&#34;347.3958&#34; x2=&#34;636.1607&#34; y2=&#34;347.3958&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;374.9723 351.099 373.399 347.3958 374.9723 343.6927 366.194 347.3958 374.9723 351.099&#34;/&gt;
    &lt;polygon points=&#34;633.3521 351.099 634.9254 347.3958 633.3521 343.6927 642.1305 347.3958 633.3521 351.099&#34;/&gt;
  &lt;/g&gt;
  &lt;path id=&#34;MJX-8-TEX-I-1D45E-2&#34; data-name=&#34;MJX-8-TEX-I-1D45E&#34; d=&#34;M224.3612,363.8509c0-1.2188.4585-2.3772,1.3756-3.4753.9171-1.0981,1.9488-1.6532,3.0952-1.6653.724,0,1.2791.3137,1.6653.9412.0121-.0121.0422-.0483.0905-.1086s.1146-.1267.1991-.1991.181-.1448.2896-.2172c.4103-.2896.6878-.4344.8326-.4344.0483,0,.0905.0181.1267.0543s.0543.0664.0543.0905c0,.1086-.4163,1.8282-1.2489,5.1587-.8568,3.4271-1.2851,5.1647-1.2851,5.213,0,.0965.2715.1508.8145.1629h.4525c.0724.0965.1086.1508.1086.1629s-.0181.1207-.0543.3258c-.0483.1569-.1086.2715-.181.3439h-.2353c-.3741-.0241-1.0257-.0362-1.9549-.0362h-1.5929c-.1689,0-.2715.006-.3077.0181-.1689,0-.2534-.0483-.2534-.1448,0-.0362.0121-.1267.0362-.2715.0483-.1931.0905-.3077.1267-.3439s.1569-.0543.362-.0543c.5792,0,.9292-.0422,1.0498-.1267.0965-.0603.2655-.5913.5068-1.5929.2413-1.0016.368-1.5144.3801-1.5386,0-.0121-.0422.006-.1267.0543-.5792.4706-1.1826.7059-1.8101.7059-.6637,0-1.2489-.2413-1.7558-.724-.5068-.4827-.7602-1.2489-.7602-2.2988ZM230.1353,360.7919c-.2775-.9533-.7301-1.4299-1.3575-1.4299-.4223,0-.8266.187-1.2127.5611s-.6878.8628-.905,1.4662c-.3499.9533-.5973,1.9428-.7421,2.9685v.1991c0,.0965-.006.1689-.0181.2172,0,.543.1086.9171.3258,1.1222s.4766.3137.7783.3258c.6516,0,1.3213-.4344,2.0092-1.3032l.1448-.1991.9774-3.9278Z&#34;/&gt;
  &lt;text transform=&#34;translate(450.1625 372.3188)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;其他进程运行&lt;/tspan&gt;&lt;/text&gt;
  &lt;g&gt;
    &lt;line x1=&#34;90.2575&#34; y1=&#34;299.2864&#34; x2=&#34;90.2575&#34; y2=&#34;311.2214&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;86.5543 308.4128 90.2575 309.986 93.9606 308.4128 90.2575 317.1911 86.5543 308.4128&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;366.194&#34; y1=&#34;299.1779&#34; x2=&#34;366.194&#34; y2=&#34;311.1129&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;362.4908 308.3043 366.194 309.8776 369.8971 308.3043 366.194 317.0826 362.4908 308.3043&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;642.1305&#34; y1=&#34;298.9535&#34; x2=&#34;642.1305&#34; y2=&#34;310.8885&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;638.4274 308.0799 642.1305 309.6532 645.8336 308.0799 642.1305 316.8583 638.4274 308.0799&#34;/&gt;
  &lt;/g&gt;
  &lt;g&gt;
    &lt;line x1=&#34;773.4426&#34; y1=&#34;298.6514&#34; x2=&#34;773.4426&#34; y2=&#34;310.5865&#34; style=&#34;fill: none; stroke: #000; stroke-miterlimit: 10;&#34;/&gt;
    &lt;polygon points=&#34;769.7394 307.7779 773.4426 309.3511 777.1457 307.7779 773.4426 316.5562 769.7394 307.7779&#34;/&gt;
  &lt;/g&gt;
  &lt;text transform=&#34;translate(596.2631 273.0448)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;分配给进程&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.5996&#34;&gt;的时间片&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(732.7615 294.6442)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;交互完成&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(45.5568 273.0445)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;分配给进程&lt;/tspan&gt;&lt;tspan x=&#34;0&#34; y=&#34;21.5996&#34;&gt;的时间片&lt;/tspan&gt;&lt;/text&gt;
  &lt;text transform=&#34;translate(321.1942 294.6442)&#34; style=&#34;font-family: NotoSerifSC-Regular, &amp;apos;Noto Serif SC&amp;apos;; font-size: 18px; isolation: isolate;&#34;&gt;&lt;tspan x=&#34;0&#34; y=&#34;0&#34;&gt;进程被抢占&lt;/tspan&gt;&lt;/text&gt;
&lt;/svg&gt;&lt;/div&gt;&lt;p class=&#34;svg-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;图2&amp;emsp;时间片大小对响应时间的影响&lt;/p&gt;
&lt;span id=&#34;20241126220833CST&#34;&gt;&lt;/span&gt;&lt;div class=&#34;normal-table&#34;&gt;&lt;table&gt;
    &lt;tr&gt;
    &lt;th class=&#34;diagonal_th&#34; rowspan=&#34;3&#34; style=&#34;width: 150px;&#34;&gt;
        &lt;span class=&#34;diagonal_th_right&#34;&gt;作业情况&lt;/span&gt;
        &lt;span class=&#34;diagonal_th_bottom&#34;&gt;时间片&lt;/span&gt;
    &lt;/th&gt;
        &lt;th&gt;进程名&lt;/th&gt;
        &lt;th&gt;A&lt;/th&gt;
        &lt;th&gt;B&lt;/th&gt;
        &lt;th&gt;C&lt;/th&gt;
        &lt;th&gt;D&lt;/th&gt;
        &lt;th&gt;E&lt;/th&gt;
        &lt;th&gt;平均&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;到达时间&lt;/td&gt;
        &lt;td&gt;0&lt;/td&gt;
        &lt;td&gt;1&lt;/td&gt;
        &lt;td&gt;2&lt;/td&gt;
        &lt;td&gt;3&lt;/td&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;服务时间&lt;/td&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;3&lt;/td&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;2&lt;/td&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td rowspan=&#34;3&#34;&gt;RR&lt;/br&gt;q=1&lt;/td&gt;
        &lt;td&gt;完成时间&lt;/td&gt;
        &lt;td&gt;15&lt;/td&gt;
        &lt;td&gt;12&lt;/td&gt;
        &lt;td&gt;16&lt;/td&gt;
        &lt;td&gt;9&lt;/td&gt;
        &lt;td&gt;17&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;周转时间&lt;/td&gt;
        &lt;td&gt;15&lt;/td&gt;
        &lt;td&gt;11&lt;/td&gt;
        &lt;td&gt;14&lt;/td&gt;
        &lt;td&gt;6&lt;/td&gt;
        &lt;td&gt;13&lt;/td&gt;
        &lt;td&gt;11.8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;带权周转时间&lt;/td&gt;
        &lt;td&gt;3.75&lt;/td&gt;
        &lt;td&gt;3.67&lt;/td&gt;
        &lt;td&gt;3.5&lt;/td&gt;
        &lt;td&gt;3&lt;/td&gt;
        &lt;td&gt;3.33&lt;/td&gt;
        &lt;td&gt;3.46&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td rowspan=&#34;3&#34;&gt;RR&lt;/br&gt;q=4&lt;/td&gt;
        &lt;td&gt;完成时间&lt;/td&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;7&lt;/td&gt;
        &lt;td&gt;11&lt;/td&gt;
        &lt;td&gt;13&lt;/td&gt;
        &lt;td&gt;17&lt;/td&gt;
        &lt;td&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;周转时间&lt;/td&gt;
        &lt;td&gt;4&lt;/td&gt;
        &lt;td&gt;6&lt;/td&gt;
        &lt;td&gt;9&lt;/td&gt;
        &lt;td&gt;10&lt;/td&gt;
        &lt;td&gt;13&lt;/td&gt;
        &lt;td&gt;8.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;带权周转时间&lt;/td&gt;
        &lt;td&gt;1&lt;/td&gt;
        &lt;td&gt;2&lt;/td&gt;
        &lt;td&gt;2.25&lt;/td&gt;
        &lt;td&gt;5&lt;/td&gt;
        &lt;td&gt;3.33&lt;/td&gt;
        &lt;td&gt;2.5&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;&lt;p class=&#34;table-title&#34; style=&#34;text-align:center; margin-top: 0; margin-bottom:0&#34;&gt;表1&amp;emsp;q=1和q=4时进程的周转时间&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
